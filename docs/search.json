[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "",
    "text": "Welcome\nThis is the landing page for the “Single-cell RNA-seq analysis with R/Bioconductor” workshop, ed. 2024.\nAuthors: Jacques Serizay [aut, cre], Orr Ashenberg [aut, cre], Fabricio Almeida-Silva [aut, cre]Version: 1.0.0Modified: 2024-10-29Compiled: 2024-11-03Environment: R version 4.4.1 (2024-06-14), Bioconductor 3.19License: MIT + file LICENSECopyright: J. Serizay, O. Ashenberg & F. Almeida-Silva"
  },
  {
    "objectID": "index.html#what",
    "href": "index.html#what",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "What",
    "text": "What\nThis course will introduce biologists and bioinformaticians to the field of single-cell RNA sequencing. We will cover a range of software and analysis workflows that extend over the spectrum from the best practices in the filtering scRNA-seq data\nto the downstream analysis of cell clusters and temporal ordering. This course will help the attendees gain accurate insights in pre-processing, analysis and interpretation of scRNA-seq data.\nWe will start by introducing general concepts about single-cell RNA-sequencing. From there, we will then continue to describe the main analysis steps to go from raw sequencing data to processed and usable data. We will present classical analysis workflows, their output and the possible paths to investigate downstream of this.\nThroughout the workshop, bash tools and R/Bioconductor packages will be used to analyse datasets and learn new approaches."
  },
  {
    "objectID": "index.html#when",
    "href": "index.html#when",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "When",
    "text": "When\nFrom November 4 to November 8, 2025."
  },
  {
    "objectID": "index.html#where",
    "href": "index.html#where",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "Where",
    "text": "Where\nThis course will be held online."
  },
  {
    "objectID": "index.html#how",
    "href": "index.html#how",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "How",
    "text": "How\nThe course is structured in modules over five days. Each day will include formal lectures covering the key concepts required to understand scRNA-seq analysis. The remainder of each day will consist in practical hands-on sessions focusing on analysis of scRNA-seq data. These sessions will involve a combination of both mirroring exercises with the instructor to demonstrate a skill, as well as applying these skills on your own to complete individual exercises.\nDuring and after each exercise, interpretation of results will be discussed as a group."
  },
  {
    "objectID": "index.html#who",
    "href": "index.html#who",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "Who",
    "text": "Who\nThe course will be mostly beneficial to those who have, or will shortly have, scRNA-seq data ready to analyse.\nThe material is suitable both for experimentalists who want to learn more about data-analysis as well as computational biologists who want to learn about scRNA-seq methods.\nExamples demonstrated in this course can be applied to any experimental protocol or biological system.\nThe requirements for this course are:\n\nWorking knowledge of Unix / command line interface (managing files, running programs, reading manuals!). Basic bash commands (cd, ls, ...) and CLI usage will not be covered in this course. We advice attendees to not register if they lack fundamental experience in CLI.\nProgramming experience in R (writing a function, basic I/O operations, variable types, using packages). Bioconductor experience is a plus.\nFamiliarity with next-generation sequencing data and its analyses (using alignment and quantification tools for bulk sequencing data)"
  },
  {
    "objectID": "index.html#why",
    "href": "index.html#why",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "Why",
    "text": "Why\nAt the end of this course, you should be able to:\n\nUnderstand the pros/cons of different single-cell RNA-seq methods\nProcess and QC of scRNA-seq data\nNormalize scRNA-seq data\nCorrect for batch effects\nVisualise the data and applying dimensionality reduction\nPerform cell clustering and annotation\nPerform differential gene expression analysis\nInfer cell trajectory and pseudotime, and perform temporal differential expression\n\nThroughout the course, we will also have a focus on reproducible research, documented content and interactive reports."
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "Instructors",
    "text": "Instructors\nJacques Serizay\nOrr Ashenberg\nFabrício Almeida-Silva"
  },
  {
    "objectID": "content/program.html#monday-classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#monday-classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Monday – Classes from 14:00 to 20:00 (Paris time)",
    "text": "Monday – Classes from 14:00 to 20:00 (Paris time)\n\nLecture 1 – Introduction to scRNA-Seq analysis [Orr]\n\nGeneral introduction: cell atlas overviews\nComparison of bulk and single cell RNA-Seq\nOverview of available scRNA-seq technologies (10x) and experimental protocols\n\n\n\nLecture 2 - From sequencing reads to expression matrices [Jacques]\n\nscRNA-Seq processing workflow starting with choice of sequencer (NextSeq, HiSeq, MiSeq) / barcode swapping and bcl files\nOverview of Popular tools and algorithms\nCommon single-cell analyses and interpretation\nSequencing data: alignment and quality control\nIGV: Looking at cool things in alignment like where reads are, mutations, splicing\n\n\n\nLab 1 – Familiarizing yourself with the course AWS instance [Jacques]\n\nUsing RStudio\nLogging in AWS\nShell and Unix commands to navigate directories, create folders, open files\nRaw file formats\nGet data from 10x website, single cell portal, from GEO (fastqs, counts)\n\n\n\nLab 2 – From sequencing reads to expression matrices [Orr]\n\nMapping sequencing data with Cellranger\nQuality Control reports (CellRanger, dropEst, fastqc)"
  },
  {
    "objectID": "content/program.html#tuesday-classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#tuesday-classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Tuesday – Classes from 14:00 to 20:00 (Paris time)",
    "text": "Tuesday – Classes from 14:00 to 20:00 (Paris time)\n\nLecture 3 - Quality control for scRNA-Seq data [Orr]\n\nWhat CellRanger does for quality filtering\nNormalisation methods\nDoublets, empty droplets, DropletUtils\nBarcode swapping\nRegression with technical covariates\n\n\n\nLab 3 - Introduction to R/Bioconductor [Jacques]\n\nInstalling packages with CRAN and Bioconductor\nData types, data manipulation, slicing\nI/O for scRNAseq analysis in R\n\n\n\nLab 4 – scRNA-Seq data wrangling [Orr]\n\nData structure\nData filtering\nExploratory data analysis\n\n\n\nFlash talks [Everybody]"
  },
  {
    "objectID": "content/program.html#wednesday-classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#wednesday-classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Wednesday – Classes from 14:00 to 20:00 (Paris time)",
    "text": "Wednesday – Classes from 14:00 to 20:00 (Paris time)\n\nLecture 4 - Identifying cell populations [Jacques]\n\nFeature selection\nDimensionality reduction\nGraph-based clustering and other cluster methods\nAssigning cluster identity\nDifferential expression tests\n\n\n\nLab 5 – Identifying Cell Populations: dimensionality reduction, clustering and annotation [Jacques]\n\nFeature selection\nDimensional reduction\nGraph-based clustering\nMarker gene detection\nCell type annotation\nData visualization\n\n\n\nLecture 5 - Data integration and batch effect correction [Orr]\n\nBatch correction methods (regress out batch, scaling within batch, Seurat v3, MNN, Liger, Harmony, scvi, scgen)\nEvaluation methods for batch correction (ARI, average silhouette width, kBET…)\n\n\n\nLab 6 - Data integration and batch effect correction [Orr]\n\nComparison of batch correction methods\nChoosing the optimal batch correction approach"
  },
  {
    "objectID": "content/program.html#thursday-classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#thursday-classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Thursday – Classes from 14:00 to 20:00 (Paris time)",
    "text": "Thursday – Classes from 14:00 to 20:00 (Paris time)\n\nLecture 6 - Trajectories and pseudotimes [Jacques]\n\nTrajectory inference\nPopular tools and packages for trajectory analysis (https://github.com/dynverse/dynmethods#list-of-included-methods)\nPseudotime inference\nRNA velocity\nDifferential expression through pseudotime\n\n\n\nLab 7 - Inferring differentiation trajectories and pseudotime [Jacques]\n\nInfering trajectory in sperm cell lineage\nOrientating a trajectory with RNA veloctiy\nDE analysis along a trajectory\n\n\n\nLecture 7 - Advances in single-cell genomics: the epigenome [Orr]\n\n\nLab 8 - Single-cell ATAC-Seq analysis [Jacques]"
  },
  {
    "objectID": "content/program.html#friday-classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#friday-classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Friday – Classes from 14:00 to 20:00 (Paris time)",
    "text": "Friday – Classes from 14:00 to 20:00 (Paris time)\n\nLecture 8 - Advances in single-cell genomics: spatial transcriptomics [Orr]\nFriday will then be divided in two parts:\n\nMorning & afternoon (1h + 1h30): Group projects: analysing scRNA-seq data by yourself, from A to Z\nAfternoon (1h): Group presentations (10’ each group, max 5 slides: what/why/where/when/how, conclusions)\n\nHappy hour time!!"
  },
  {
    "objectID": "content/Rstudio.html",
    "href": "content/Rstudio.html",
    "title": "RStudio",
    "section": "",
    "text": "Rstudio offers a graphical interface to facilitate the interaction between a user and an underlying programming language (this is sometimes called IDE, or integrated development environment). It can be very useful when a user is not necessarily proficent with command line-based computing. However, such graphical interfaces are not always able to connect to services such as AWS.\nSince most of the preliminary analysis we do is on AWS, we’d like to be able to use Rtudio directly from there. To do that, simply go to the following address:\n\n\nhttp://35.87.99.161:8787\n\n\nDon’t forget, you can run a bash terminal from within RStudio! This may come handy if you want to process some data with cellranger, for example. To do this, simply click on the terminal button next on the bottom left panel. You should now be in your own ${home} directory (~)."
  },
  {
    "objectID": "content/prerequisites.html#local-configuration",
    "href": "content/prerequisites.html#local-configuration",
    "title": "Prerequisites",
    "section": "Local configuration",
    "text": "Local configuration\n\nIdeally (though not strictly required), a configured SSH client (it should be already installed on Linux/Mac machines, PuTTY can be set up for Windows).\nIdeally (though not strictly required), a SSH ftp client (Forklift is excellent for Mac, although not free beyond the trial version; cyberduck can be used for Windows; FileZilla can be used for both Mac, Windows and Linux).\nComputer with high-speed internet access (no specific configuration required - everything will be performed on a remote AWS machine).\nZoom visioconference software"
  },
  {
    "objectID": "content/prerequisites.html#remote-configuration",
    "href": "content/prerequisites.html#remote-configuration",
    "title": "Prerequisites",
    "section": "Remote configuration",
    "text": "Remote configuration\nThe AWS machine is running with Ubuntu and has been set up as follows:\n## --- Clean up previous R installs and system libraries\nsudo apt purge r-base* r-recommended r-cran-*\nsudo apt autoremove\nsudo apt update\nsudo apt upgrade\nsudo apt update\n\n## --- Libraries\nsudo apt update\nsudo apt install libc6 libicu60 -y \nsudo apt install -y \\\n    gcc g++ perl python3 python3-pip \\\n    automake make cmake less vim nano fort77 \\\n    wget git curl bzip2 gfortran unzip ftp \\\n    libpng-dev libjpeg-dev \\\n    texlive-latex-base default-jre build-essential \\\n    libbz2-dev liblzma-dev libtool \\\n    libxml2 libxml2-dev zlib1g-dev \\\n    libdb-dev libglu1-mesa-dev zlib1g-dev  \\\n    libncurses5-dev libghc-zlib-dev libncurses-dev \\\n    libpcre3-dev libxml2-dev \\\n    libblas-dev libzmq3-dev libreadline-dev libssl-dev \\\n    libcurl4-openssl-dev libx11-dev libxt-dev \\\n    x11-common libcairo2-dev \\\n    libreadline6-dev libgsl0-dev \\\n    libeigen3-dev libboost-all-dev \\\n    libgtk2.0-dev xvfb xauth xfonts-base \\\n    apt-transport-https libhdf5-serial-dev \\\n    libudunits2-dev libgdal-dev libgeos-dev libproj-dev \\\n    libv8-dev \\\n    libmagick++-dev \\\n    libharfbuzz-dev libfribidi-dev \\\n    fftw3\n\n## --- R base install \nsudo add-apt-repository \"deb https://cloud.r-project.org/bin/linux/ubuntu `lsb_release -cs` -cran40/\"\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\nsudo apt update\nsudo apt install r-base r-recommended r-base-core\nThe following packages have been installed (along with their many dependencies, of course!):\n## --- Install important R packages for single-cell RNA-seq projects\n## pak \nsudo Rscript -e 'install.packages(\"pak\", repos = sprintf(\"https://r-lib.github.io/p/pak/stable/%s/%s/%s\", .Platform$pkgType, R.Version()$os, R.Version()$arch))'\n\n## CRAN packages\nsudo Rscript -e 'pak::pkg_install(c(\"tidyverse\", \"devtools\", \"umap\", \"corrplot\", \"gam\", \"ggbeeswarm\", \"ggthemes\", \"Matrix\", \"zeallot\", \"fossil\", \"rgl\", \"BiocManager\", \"Seurat\", \"rliger\", \"Signac\", \"multtest\", \"metap\", \"servr\"))'\n\n## Bioconductor Packages\nsudo Rscript -e 'pak::pkg_install(c(\"airway\", \"SingleCellExperiment\", \"scran\", \"scater\", \"batchelor\", \"DropletUtils\", \"AUCell\", \"plyranges\", \"ggraph\", \"clustree\", \"celldex\", \"SingleR\", \"slingshot\", \"tradeSeq\", \"velociraptor\", \"BUSpaRse\", \"org.Mm.eg.db\", \"org.Hs.eg.db\", \"TENxPBMCData\", \"scRNAseq\", \"scDblFinder\", \"chromVAR\", \"EnsDb.Hsapiens.v75\", \"LoomExperiment\", \"biovizBase\", \"rebook\", \"bluster\"))'\n\n## Github Packages\nsudo Rscript -e 'install.packages(\"RcppPlanc\", repos = c(linux = 'https://welch-lab.r-universe.dev/bin/linux/noble/4.4/',sources = 'https://welch-lab.r-universe.dev',cran = 'https://cloud.r-project.org'))'\n\n## For ubuntu &lt; 24.04, instal with makevars: \n\n# withr::with_makevars( c(CFLAGS = \"-w\", CXXFLAGS = \"-w\", CPPFLAGS = \"-w\", LDFLAGS = \"\"), { .... }, assignment = \"+=\")\n\n## --- Install other softwares (fastQC, samtools, cellranger and cellranger indexes, ffq)\n\n# fastqc samtools\nsudo apt install fastqc samtools python3.8\n\n# cellranger\ncd /opt/\nsudo wget -O cellranger-8.0.1.tar.gz \"https://cf.10xgenomics.com/releases/cell-exp/cellranger-8.0.1.tar.gz?Expires=1730426816&Key-Pair-Id=APKAI7S6A5RYOXBWRPDA&Signature=RCkLqP02kkVLRceyojFWbQ4eXrjemlvkAfWxSxbkad0ZqAIjtxTlSsc5Tn3x7PLj-mZiwuTjqx4o~bcR9J5fSBHdtkUrSG~MUqLxquMxcCPom3eR2Or9vdqGvk4faMhv1-jrXS8GCOD82zU8ZdhqecdE5tJdXjLHz6flWo7bQt0jqHF3-roktu0uuXHtebw586Cg39xqzMIG8x9SkeTsRGsJAKB7~jL65YKCEPpAl~QndTghDIymv43gHO8MWiQ7QLbF-nsF16uhqUJR7sAsPZSjCkKPW0GZTIpUmie1nv2OnoenOw9O6-Wj4gIBzcWVHkt-qkmPwvnF3nXq~0xUUw__\"\nsudo tar -xzvf cellranger-8.0.1.tar.gz\nsudo ln -s /opt/cellranger-8.0.1/cellranger /usr/local/bin/cellranger\nsudo wget https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-mm10-2020-A.tar.gz\nsudo tar -xzvf refdata-gex-mm10-2020-A.tar.gz\nsudo mv refdata-gex-mm10-2020-A ~/Share/\n\n## Copy Share from local to AWS\n# rsync --progress --recursive --verbose ~/Share/ physalia:\n\n# Make sure write permissions are only for the sudo owner, so that userX cannot modify or erase the Share folder and its contents\nsudo chown -R ubuntu:ubuntu ~/Share/\nsudo chmod -R 755 ~/Share\n\n# ffq\nsudo apt install python3-distutils\nsudo pip install ffq\n\n# seqkit\ncd /opt/\nsudo wget -O seqkit_linux_amd64.tar.gz https://github.com/shenwei356/seqkit/releases/download/v2.4.0/seqkit_linux_amd64.tar.gz\nsudo tar -xzvf seqkit_linux_amd64.tar.gz\nsudo ln -s /opt/seqkit /usr/local/bin/seqkit\n\n# bcl2fastq\nsudo apt install alien\ncd /opt/\nsudo wget http://support.illumina.com/content/dam/illumina-support/documents/downloads/software/bcl2fastq/bcl2fastq2-v2.17.1.14-Linux-x86_64.rpm\nsudo alien bcl2fastq2-v2.17.1.14-Linux-x86_64.rpm\nsudo dpkg -i bcl2fastq2_0v2.17.1.14-2_amd64.deb\n\n## Add basilisk external dir to system-wide Renviron\nsudo echo \"BASILISK_EXTERNAL_DIR=/opt/basilisk_envs\" &gt;&gt; /etc/R/Renviron"
  },
  {
    "objectID": "content/day1/Lecture1_introduction.html",
    "href": "content/day1/Lecture1_introduction.html",
    "title": "1  Lecture 1 - Introduction to scRNAseq analysis",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6 - Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8 - Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-faba582bb439d5cd836a674b446052c1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-d702434cf0014de2f5f0b39b820ea109\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/prerequisites.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Prerequisites&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day1/Lecture2_Bcl2matrix.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;2&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day1/Lecture2_Bcl2matrix.html",
    "href": "content/day1/Lecture2_Bcl2matrix.html",
    "title": "2  Lecture 2 - From sequencing reads to expression matrices",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-faba582bb439d5cd836a674b446052c1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-f644ab270ec942bc34c221332a0c9854\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day1/Lecture1_introduction.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;1&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day1/Lab1_Intro.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;3&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#connect-to-rstudio-server",
    "href": "content/day1/Lab1_Intro.html#connect-to-rstudio-server",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.1 Connect to RStudio Server",
    "text": "3.1 Connect to RStudio Server\nMost of single-cell RNA-seq analysis takes place either in python or in R. Here, we focus on how to leverage R to investigate scRNAseq data. RStudio is an IDE (Integrated Development Environment, in other words: a nice graphical interface to run R-related commands).\nFor this workshop, we have installed R and RStudio on AWS. We can directly use RStudio (actually, RStudio-server since it is installed on an AWS remote server). Simply open a browser and copy-paste the following address:\n\n\nhttp://35.87.99.161:8787\n\n\nAn RStudio log in page will appear; to log in, use your user ID for both ID and password.\nNotice how when you log in Rstudio, there are multiple panels. Familiarize yourself with the different panels.\nThe interactive R console is generally found in the bottom left corner of RStudio(though it may be in another corner sometimes). All the rest (history panel, environment panel, directory explorer panel, editor panel) are extra features provided by RStudio.\n\n\n\n\n\n\nSome useful commands in R:\n\n\n\nWithin the R console, you can safely use R-dedicated commands. Do you know the most common ones? The semantics are a different from the terminal commands you may be used to…\n\n\n\nR\n\ngetwd() # equivalent of `pwd` in terminal\ndir.create('~/data/') # equivalent of `mkdir ~/data/` in terminal\nsetwd(\"~/data/\") # equivalent of `cd ~/data/` in terminal\nlist.files(\"~/data/\") # equivalent of `ls` in terminal\ndownload.file(\"...\") # equivalent of `wget ...` in terminal"
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#use-a-aws-terminal-within-rstudio",
    "href": "content/day1/Lab1_Intro.html#use-a-aws-terminal-within-rstudio",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.2 Use a AWS terminal within RStudio",
    "text": "3.2 Use a AWS terminal within RStudio\nA general issue with bioinformatic analyses stems from the fact that nobody works in the same environment:\n\nAre you working on Mac? Linux? Windows?\nDo you have a lot of computational power? Perhaps a GPU card?\nAre you connected to the Internet? With a fast connection? Are you working behind a proxy?\n\nTo ensure that we are all working in the same environment, we rely on AWS (Amazon Web Services) EC2 (Elastic Cloud 2) instances. EC2 instances are “virtual” computers to which you can connect remotely, from a local computer.\nThe instance is common for everybody. We are thus all sharing the same “computer”; this means:\n\nShared resources\nSame access to shared files\nSame access to system-wide softwares and conda environments\n\nThe easiest way for us to launch bash commands from a terminal in AWS is to do it through RStudio: You can open up a terminal directly from within RStudio as follow: go to Tools &gt; Terminal &gt; New terminal. This should open up a new tab in the bottom left corner (next to the R console).\n\n\n\n\n\n\nR console versus terminal:\n\n\n\nFrom here onwards, be sure you completely understand the difference between “R console” and “terminal (or shell)”. They are entirely different things, and can be both accessed within RStudio. It is crucial you understand the difference between the two to not get confused for the rest of the course."
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#basic-terminal-commands",
    "href": "content/day1/Lab1_Intro.html#basic-terminal-commands",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.3 Basic terminal commands",
    "text": "3.3 Basic terminal commands\nThe same bash commands are available in AWS terminal, regardless of whether you access the terminal from RStudio or through ssh.\nOne can list files, download files, check help pages, …, just like in R.\n\nCheck the your present directory\n\n\n\n\nbash\n\npwd\n\n\n\nCheck history\n\n\n\n\nbash\n\nhistory\n\n\n\nput history into a history.txt file\n\n\n\n\nbash\n\nhistory &gt; history.txt\n\n\n\nmake a new folder called data\n\n\n\n\nbash\n\nmkdir data\n\n\n\nGo to the new data directory\n\n\n\n\nbash\n\ncd data\n\n\n\nmove history.txt file into data directory\n\n\n\n\nbash\n\nmv ../history.txt ./\n\n\n\ncheck manual page of wget command (hit q to exit)\n\n\n\n\nbash\n\nman wget\n\n\n\ncheck specific help for cellranger command and subcommands\n\n\n\n\nbash\n\ncellranger --help\ncellranger count --help\n\n\n\nredirect wget help output into a file called cellranger-help.txt\n\n\n\n\n\nbash\n\ncellranger count --help &gt; cellranger-help.txt\n\n\n\nDownload a file from Internet with wget\n\n\n\n\n\nbash\n\nwget https://cf.10xgenomics.com/supp/cell-exp/cellranger-tiny-bcl-1.2.0.tar.gz\n\n\n\nList all files in a folder\n\n\n\n\nbash\n\nls -l ~/Share/\n\n\n\n\n\n\n\n\nTip\n\n\n\nDownload the git repository for this course from GitHub:\n\n\n\nbash\n\ngit clone https://github.com/js2264/scRNAseq_Physalia_2024.git\n\n\nThis downloads the repository for this course to your home folder on the AWS machine.\nTo get it on your local computer (to save the lectures and exercises), go to the GitHub repo page, click on the green Code button, then Download ZIP. Beware, the download may take a significant time based on your internet connection (several hundreds MB)."
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#single-cell-rna-seq-datasets",
    "href": "content/day1/Lab1_Intro.html#single-cell-rna-seq-datasets",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.4 Single-cell RNA-seq datasets",
    "text": "3.4 Single-cell RNA-seq datasets\n\n“This is a course about single-cell RNA-seq analysis, after all, so where is my data?”\n\nOk, “your” data is (most likely) yet to be sequenced! Or maybe you’re interested in digging already existing databases! I mean, who isn’t interested in this mind-blowing achievement from 10X Genomics??\nHuman Cell Atlas is probably a good place to start digging, if you are interested in mammal-related studies. For instance, let’s say I am interested in epididymis differentiation. Boom: here is an entry from the HCA focusing on epididymis: link to HCA data portal.\n\n3.4.1 Raw fastq reads from GEO\nHere is the link to the actual paper studying epididymis:An atlas of human proximal epididymis reveals cell-specific functions and distinct roles for CFTR.\n\n\n\n\n\n\nQuestion\n\n\n\nFind and check out the corresponding GEO entries for this study. What type of sequencing data is available?\n\n\n\n\n\n\nTip\n\n\n\nHere is the link to the GEO page: link.\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCan you find links to download the raw data from this paper?\n\n\nThere are several ways to find this information, e.g. ffq command line tool, or using the web-based sra-explorer page (here). You generally will need the GEO corresponding ID or SRA project ID (e.g. SRPxxxxxx…).\n\n\n\n\n\n\nQuestion\n\n\n\nTry to install the ffq tool from the Patcher lab.\n\n\n\n\n\n\nInstalling conda packages\n\n\n\nconda-based environments allow easy installs of packages such as ffq. Your (base) conda environment should be active by default, and you will only have to type:\n\npip install ffq\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCheck ffq help and try fetching metadata for the GSE ID GSE148963.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbash\n\nffq --help\nffq -t GSE GSE148963 &gt; GSE148963_search.txt\nhead -n 30 GSE148963_search.txt\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCan you find the links to raw data associated with the GSE148963 GEO ID?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nYou can use a grep command: grep returns the lines which match a given pattern (e.g. a link…)!\n\n\n\nbash\n\ngrep 'ftp://' GSE148963_search.txt\n\n\nAnd with a bit of sed magick…\n\n\n\nbash\n\ngrep 'ftp://' GSE148963_search.txt | sed 's,.*ftp:,ftp:,' | sed 's,\".*,,' | grep \".fastq\" &gt; GSE148963_fastqlist.txt\n## `ffq` looks through GEO repository to fing metadata associated with the `GSE148963` entry (including downloading links)\n## grep 'ftp://' recovers the text lines that contain downloading links\n## the `sed` commands clean up the text lines\n## the `wget` command downloads locally the links listed in the generated file (GSE148963_fastqlist.txt)\n# wget -i GSE148963_fastqlist.txt ## Do not run, it would take too long...\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nA subset of the reads has been downloaded and put in the ~/Share/ folder. Have a look at it!\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbash\n\nzcat ~/Share/SRR11575369_1.fq.gz | head -n 12\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nTry and understand the structure of the fq.gz file. What is the meaning of each line?\nHow many reads are there in the fq.gz file? And how long are they? Can you get a summary of what is in this file? All of these questions can be quickly answered using the seqkit tool:\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbash\n\nseqkit --help\nseqkit stats --help\nseqkit stat ~/Share/SRR11575369_1.fq.gz\n\n\n\n\n\n\n\n\n3.4.2 Processed count matrices\nMany times, researchers will provide a filtered count matrix when they publish scRNAseq experiments (along with mandatory raw fastq data, of course). It’s way lighter than fastq reads, and you can go ahead with downstream analyses a lot quicker. So how do you get these matrices? Human Cell Atlas Consortium provides many processed datasets. For instance, in our case, the Leir et al study is available at the following link. GEO also hosts processed files.\n\nFind GEO-hosted processed files for the Leir et al study. \n\nYou can download some of the processed files available in GEO from the following webpage. Scrolling down to the bottom of the page, there is a box labelled “Supplementary data”. By clicking on “(custom)”, a list of extra supplementary files will appear.\n\nDownload and check the content of the count matrix, the genes and the barcodes files. \nWhat type of information does each file contain? How is it formatted? is it easily imported in R? \nHow many cells were sequenced? How many genes were counted? \nIs it easy to interpret the count matrix? Why is it in such format? \nComment on the file sizes between processed count matrix files and raw reads."
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#bonus",
    "href": "content/day1/Lab1_Intro.html#bonus",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.5 Bonus",
    "text": "3.5 Bonus\nFor those of you who are already familiar with the basics, you can fast-forward through this lab and start working on scRNAseq data directly. The script in bin/prepare_Ernst.R is a template to process a publicly available scRNAseq dataset. You can start exploring it to see if you understsand the different chunks of code and their importance. All the content from this template will eventually be covered in the next labs."
  },
  {
    "objectID": "content/day1/Lab2_processingreads.html#demultiplexing-sequencing-data-with-cellranger-mkfastq",
    "href": "content/day1/Lab2_processingreads.html#demultiplexing-sequencing-data-with-cellranger-mkfastq",
    "title": "\n4  Lab 2: From .bcl to count matrix\n",
    "section": "\n4.1 Demultiplexing sequencing data with cellranger mkfastq\n",
    "text": "4.1 Demultiplexing sequencing data with cellranger mkfastq\n\nNavigate to your terminal in RStudio on AWS.\nGo to the cellranger mkfastq page and read the Overview.\nFor this workshop, we are going to look at a toy dataset provided by 10x Genomics. The dataset is cellranger-tiny-bcl-1.2.0, provided in the ~/Share/data_wrangling/ folder. With the cellranger-tiny-bcl-1.2.0 dataset, we have a samplesheet file cellranger-tiny-bcl-simple-1.2.0.csv that contains the sample information.\n\n\n\n\n\n\nQuestion\n\n\n\nGo to the Terminal tab in your RStudio and take a look at the 10x samplesheet .csv file\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbash\n\ncat ~/Share/data_wrangling/cellranger-tiny-bcl-simple-1.2.0.csv\n\n\nLane,Sample,Index\n1,test_sample,SI-GA-E3\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nNext, explore the contents of the sequencing directory:\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbash\n\nls -l ~/Share/data_wrangling/cellranger-tiny-bcl-1.2.0\n\n\ntotal 32\ndrwxr-xr-x  6 jacques  staff   192 Oct 29 10:54 Config\ndrwxr-xr-x  3 jacques  staff    96 Oct 29 10:54 Data\ndrwxr-xr-x  9 jacques  staff   288 Oct 29 10:54 InterOp\n-rw-r--r--  1 jacques  staff    48 Jun  7  2023 RTAComplete.txt\n-rw-r--r--  1 jacques  staff   673 Jun  7  2023 RunInfo.xml\n-rw-r--r--  1 jacques  staff  5366 Jun  7  2023 runParameters.xml\n\n\n\n\n\n\n\nNow we can demultiplex our bcl files by running the following command in the terminal. To do that, we will use the cellranger mkfastq command.\n\n\n\nbash\n\ncellranger mkfastq --help\n\n\n\n/opt/cellranger/bin\n\ncellranger mkfastq (cellranger-5.0.1)\nCopyright (c) 2020 10x Genomics, Inc.  All rights reserved.\n-------------------------------------------------------------------------------\n\nRun Illumina demultiplexer on sample sheets that contain 10x-specific sample \nindex sets, and generate 10x-specific quality metrics after the demultiplex.  \nAny bcl2fastq argument will work (except a few that are set by the pipeline \nto ensure proper trimming and sample indexing). The FASTQ output generated \nwill be the same as when running bcl2fastq directly.\n\nThese bcl2fastq arguments are overridden by this pipeline:\n    --fastq-cluster-count\n    --minimum-trimmed-read-length\n    --mask-short-adapter-reads\n\nUsage:\n    cellranger mkfastq --run=PATH [options]\n    cellranger mkfastq -h | --help | --version\n\nRequired:\n    --run=PATH          Path of Illumina BCL run folder.\n\nOptional:\n# Sample Sheet\n    --id=NAME           Name of the folder created by mkfastq. If not supplied,\n                            will default to the name of the flowcell referred to\n                            by the --run argument.\n    --csv=PATH\n    --samplesheet=PATH\n    --sample-sheet=PATH\n                        Path to the sample sheet. The sample sheet can either be\n                            a simple CSV with lane, sample and index columns, or\n                            an Illumina Experiment Manager-compatible sample\n                            sheet. Sample sheet indexes can refer to 10x sample\n                            index set names (e.g., SI-GA-A12).\n    --simple-csv=PATH   Deprecated. Same meaning as --csv.\n    --qc                Deprecated: will be removed in a future version.\n                        Calculate both sequencing and 10x-specific metrics,\n                            including per-sample barcode matching rate. Will not\n                            be performed unless this flag is specified.\n    --force-single-index\n                        If 10x-supplied i7/i5 paired indices are specified,\n                            but the flowcell was run with only one sample\n                            index, allow the demultiplex to proceed using\n                                the i7 half of the sample index pair.\n    --filter-single-index\n                        Only demultiplex samples identified\n                            by an i7-only sample index, ignoring dual-indexed\n                            samples.  Dual-indexed samples will not be\n                            demultiplexed.\n    --filter-dual-index\n                        Only demultiplex samples identified\n                          by i7/i5 dual-indices (e.g., SI-TT-A6), ignoring single-\n                          index samples.  Single-index samples will not be \n                          demultiplexed.\n    --rc-i2-override=BOOL\n                        Indicates if the bases in the I2 read are emitted as \n                          reverse complement by the sequencing workflow.\n                          Set to 'true' for Workflow A / NovaSeq Reagent Kit v1.5\n                          or greater. Set to 'false' for Wokflow B / older NovaSeq\n                          Reagent Kits. NOTE: this parameter is autodetected based \n                          and should only be passed in special circumstances.\n    \n# bcl2fastq Pass-Through\n    --lanes=NUMS        Comma-delimited series of lanes to demultiplex. Shortcut\n                            for the --tiles argument.\n    --use-bases-mask=MASK\n                        Same as bcl2fastq; override the read lengths as\n                            specified in RunInfo.xml. See Illumina bcl2fastq\n                            documentation for more information.\n    --delete-undetermined\n                        Delete the Undetermined FASTQ files left by bcl2fastq\n                            Useful if your sample sheet is only expected to\n                            match a subset of the flowcell.\n    --output-dir=PATH   Same as in bcl2fastq. Folder where FASTQs, reports and\n                            stats will be generated.\n    --project=NAME      Custom project name, to override the samplesheet or to\n                            use in conjunction with the --csv argument.\n\n# Martian Runtime\n    --jobmode=MODE      Job manager to use. Valid options: local (default), sge,\n                            lsf, or a .template file\n    --localcores=NUM    Set max cores the pipeline may request at one time. Only\n                            applies to local jobs.\n    --localmem=NUM      Set max GB the pipeline may request at one time. Only\n                            applies to local jobs.\n    --localvmem=NUM     Set max virtual address space in GB for the pipeline.\n                            Only applies to local jobs.\n    --mempercore=NUM    Reserve enough threads for each job to ensure enough\n                        memory will be available, assuming each core on your\n                        cluster has at least this much memory available. Only\n                            applies in cluster jobmodes.\n    --maxjobs=NUM       Set max jobs submitted to cluster at one time. Only\n                            applies in cluster jobmodes.\n    --jobinterval=NUM   Set delay between submitting jobs to cluster, in ms.\n                            Only applies in cluster jobmodes.\n    --overrides=PATH    The path to a JSON file that specifies stage-level\n                            overrides for cores and memory. Finer-grained\n                            than --localcores, --mempercore and --localmem.\n                            Consult the 10x support website for an example\n                            override file.\n\n    --uiport=PORT       Serve web UI at http://localhost:PORT\n    --disable-ui        Do not serve the UI.\n    --noexit            Keep web UI running after pipestance completes or fails.\n    --nopreflight       Skip preflight checks.\n\n    -h --help           Show this message.\n    --version           Show version.\n\nIf you demultiplexed with 'cellranger mkfastq' or directly with Illumina\nbcl2fastq, then set --fastqs to the project folder containing FASTQ files. In\naddition, set --sample to the name prefixed to the FASTQ files comprising\nyour sample. For example, if your FASTQs are named:\n    subject1_S1_L001_R1_001.fastq.gz\nthen set --sample=subject1\n\n\n\n\n\n\n\nQuestion\n\n\n\nWhat is the purpose of --id, --run, and --csv arguments ?\nChoose these arguments wisely and execute the command to demultiplex the sequencing data.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbash\n\ncellranger mkfastq --id tiny-bcl --run ~/Share/data_wrangling/cellranger-tiny-bcl-1.2.0 --csv ~/Share/data_wrangling/cellranger-tiny-bcl-simple-1.2.0.csv\n\n\n\n/opt/cellranger/bin\ncellranger mkfastq (cellranger-5.0.1)\nCopyright (c) 2020 10x Genomics, Inc.  All rights reserved.\n-------------------------------------------------------------------------------\n\nMartian Runtime - v4.0.2\nServing UI at http://alcide:36825?auth=0r06HTBMZxdlUuIo9SDR6HlYjSyn7ohyqq9S6lsPlYA\n\nRunning preflight checks (please wait)...\nChecking run folder...\nChecking RunInfo.xml...\nChecking system environment...\nEmitting run information...\nChecking read specification...\nChecking samplesheet specs...\n2024-10-29 11:42:56 [runtime] (ready)           ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.PREPARE_SAMPLESHEET\n2024-10-29 11:42:56 [runtime] (run:local)       ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.PREPARE_SAMPLESHEET.fork0.chnk0.main\n...\n2024-10-29 11:43:00 [runtime] (split_complete)  ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.MERGE_FASTQS_BY_LANE_SAMPLE\n2024-10-29 11:43:00 [runtime] (run:local)       ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.MERGE_FASTQS_BY_LANE_SAMPLE.fork0.chnk0.main\n2024-10-29 11:43:00 [runtime] (chunks_complete) ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.MERGE_FASTQS_BY_LANE_SAMPLE\n2024-10-29 11:43:00 [runtime] (run:local)       ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.MERGE_FASTQS_BY_LANE_SAMPLE.fork0.join\n2024-10-29 11:43:00 [runtime] (join_complete)   ID.tiny-bcl.MAKE_FASTQS_CS.MAKE_FASTQS.MERGE_FASTQS_BY_LANE_SAMPLE\n\nOutputs:\n- Run QC metrics:        null\n- FASTQ output folder:   /home/rsg/tiny-bcl/outs/fastq_path\n- Interop output folder: /home/rsg/tiny-bcl/outs/interop_path\n- Input samplesheet:     /home/rsg/tiny-bcl/outs/input_samplesheet.csv\n\nWaiting 6 seconds for UI to do final refresh.\nPipestance completed successfully!\n\n2024-10-29 11:43:06 Shutting down.\nSaving pipestance info to \"tiny-bcl/tiny-bcl.mri.tgz\"\n\n\n\n\n\n\nThe output folders can be viewed by running the ls command:\n\n\n\nbash\n\nls -l ~/tiny-bcl/outs/fastq_path/H35KCBCXY/test_sample\n\n\ntotal 96296\n-rw-r--r--  1 jacques  staff   3930346 Oct 30 23:46 test_sample_S1_L001_I1_001.fastq.gz\n-rw-r--r--  1 jacques  staff  11093755 Oct 30 23:46 test_sample_S1_L001_R1_001.fastq.gz\n-rw-r--r--  1 jacques  staff  34273874 Oct 30 23:46 test_sample_S1_L001_R2_001.fastq.gz\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nLook at the first reads listed in index read (I1), read 1 (R1), and read (R2) files.\nWhat is the purpose of the index read? What does it contain?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbash\n\nzcat tiny-bcl/outs/fastq_path/H35KCBCXY/test_sample/test_sample_S1_L001_I1_001.fastq.gz | head -n 12\n\n\n\n@D00547:905:H35KCBCXY:1:1101:1284:1973 1:N:0:AGGTATTG\nAGGTATTG\n+\nGGGGGIII\n@D00547:905:H35KCBCXY:1:1101:1729:1981 1:N:0:AGGTATTG\nAGGTATTG\n+\nGAGGGIIG\n@D00547:905:H35KCBCXY:1:1101:2005:1944 1:N:0:AGGTATTG\nAGGTATTG\n+\nAA&lt;G.A.G\n\n\n\n\n\n\nOpen the html file tiny-bcl/outs/fastq_path/Reports/html/index.html by navigating to the file in RStudio, using the Files Tab. When you click on the file, select the option to View in Web Browser. Take some time to explore the demultiplexed outputs."
  },
  {
    "objectID": "content/day1/Lab2_processingreads.html#generating-gene-count-matrices-with-cellranger-count",
    "href": "content/day1/Lab2_processingreads.html#generating-gene-count-matrices-with-cellranger-count",
    "title": "\n4  Lab 2: From .bcl to count matrix\n",
    "section": "\n4.2 Generating gene count matrices with cellranger count\n",
    "text": "4.2 Generating gene count matrices with cellranger count\n\nGo to the cellranger count algorithm overview and read the section on Alignment (Read Trimming, Genome Alignment, MAPQ adjustment, Transcriptome Alignment, UMI Counting).\nIn bash, the cellranger count command is used to generate gene count matrices from the demultiplexed reads.\n\n\n\nbash\n\ncellranger count --help\n\n\n\ncellranger-count \nCount gene expression (targeted or whole-transcriptome) and/or feature barcode reads from a single sample and GEM well\n\nUSAGE:\n    cellranger count [FLAGS] [OPTIONS] --id &lt;ID&gt; --transcriptome &lt;PATH&gt;\n\nFLAGS:\n        --no-target-umi-filter    Turn off the target UMI filtering subpipeline\n        --no-bam                  Do not generate a bam file\n        --nosecondary             Disable secondary analysis, e.g. clustering. Optional\n        --include-introns         Include intronic reads in count\n        --no-libraries            Proceed with processing using a --feature-ref but no Feature Barcode libraries specified with the 'libraries' flag\n        --dry                     Do not execute the pipeline. Generate a pipeline invocation (.mro) file and stop\n        --disable-ui              Do not serve the web UI\n        --noexit                  Keep web UI running after pipestance completes or fails\n        --nopreflight             Skip preflight checks\n    -h, --help                    Prints help information\n\nOPTIONS:\n        --id &lt;ID&gt;                 A unique run id and output folder name [a-zA-Z0-9_-]+\n        --description &lt;TEXT&gt;      Sample description to embed in output files\n        --transcriptome &lt;PATH&gt;    Path of folder containing 10x-compatible transcriptome reference\n        --fastqs &lt;PATH&gt;...        Path to input FASTQ data\n        --project &lt;TEXT&gt;          Name of the project folder within a mkfastq or bcl2fastq-generated folder to pick FASTQs from\n        --sample &lt;PREFIX&gt;...      Prefix of the filenames of FASTQs to select\n        --lanes &lt;NUMS&gt;...         Only use FASTQs from selected lanes\n        --libraries &lt;CSV&gt;         CSV file declaring input library data sources\n        --feature-ref &lt;CSV&gt;       Feature reference CSV file, declaring Feature Barcode constructs and associated barcodes\n        --target-panel &lt;CSV&gt;      The target panel CSV file declaring the target panel used, if any\n        --expect-cells &lt;NUM&gt;      Expected number of recovered cells\n        --force-cells &lt;NUM&gt;       Force pipeline to use this number of cells, bypassing cell detection\n        --r1-length &lt;NUM&gt;         Hard trim the input Read 1 to this length before analysis\n        --r2-length &lt;NUM&gt;         Hard trim the input Read 2 to this length before analysis\n        --chemistry &lt;CHEM&gt;        Assay configuration. NOTE: by default the assay configuration is detected automatically, which is the recommened mode. You usually will not\n                                  need to specify a chemistry. Options are: 'auto' for autodetection, 'threeprime' for Single Cell 3', 'fiveprime' for  Single Cell 5',\n                                  'SC3Pv1' or 'SC3Pv2' or 'SC3Pv3' for Single Cell 3' v1/v2/v3, 'SC5P-PE' or 'SC5P-R2' for Single Cell 5', paired-end/R2-only, 'SC-FB' for\n                                  Single Cell Antibody-only 3' v2 or 5' [default: auto]\n        --jobmode &lt;MODE&gt;          Job manager to use. Valid options: local (default), sge, lsf, slurm or a .template file. Search for help on \"Cluster Mode\" at\n                                  support.10xgenomics.com for more details on configuring the pipeline to use a compute cluster [default: local]\n        --localcores &lt;NUM&gt;        Set max cores the pipeline may request at one time. Only applies to local jobs\n        --localmem &lt;NUM&gt;          Set max GB the pipeline may request at one time. Only applies to local jobs\n        --localvmem &lt;NUM&gt;         Set max virtual address space in GB for the pipeline. Only applies to local jobs\n        --mempercore &lt;NUM&gt;        Reserve enough threads for each job to ensure enough memory will be available, assuming each core on your cluster has at least this much\n                                  memory available. Only applies in cluster jobmodes\n        --maxjobs &lt;NUM&gt;           Set max jobs submitted to cluster at one time. Only applies in cluster jobmodes\n        --jobinterval &lt;NUM&gt;       Set delay between submitting jobs to cluster, in ms. Only applies in cluster jobmodes\n        --overrides &lt;PATH&gt;        The path to a JSON file that specifies stage-level overrides for cores and memory. Finer-grained than --localcores, --mempercore and\n                                  --localmem. Consult the 10x support website for an example override file\n        --uiport &lt;PORT&gt;           Serve web UI at http://localhost:PORT\n\nNow, we will generate a gene count matrix for the test_sample reads using cellranger count and the transcriptome reference provided in ~/Share/refdata-gex-mm10-2020-A/\n\n\n\n\n\n\nQuestion\n\n\n\nWhat is the purpose of the --id, --transcriptome, --fastqs, --sample, and --create-bam arguments?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbash\n\ncellranger count --id counts --transcriptome ~/Share/refdata-gex-mm10-2020-A/ --fastqs tiny-bcl/outs/fastq_path/H35KCBCXY/test_sample --sample test_sample --create-bam true\n\n\n\nMartian Runtime - v4.0.2\nServing UI at http://alcide:35163?auth=IERAjMung3pm8corwsthsKjEue66fJwPDK0-5l-CLCo\n\nRunning preflight checks (please wait)...\n\nChecking sample info...\nChecking FASTQ folder...\nChecking reference...\nChecking reference_path (~/Share/refdata-gex-mm10-2020-A) on alcide...\nChecking chemistry...\nChecking optional arguments...\n\nmrc: v4.0.2\n\nmrp: v4.0.2\n\nAnaconda: \nnumpy: 1.15.4\n\nscipy: 1.1.0\n\npysam: 0.16.0.1\n\nh5py: 2.8.0\n\npandas: 0.24.2\n\nSTAR: 2.7.2a\n\nsamtools: samtools 1.10\nUsing htslib 1.10.2\nCopyright (C) 2019 Genome Research Ltd.\n\n2024-10-29 17:18:47 [runtime] (ready)           ID.counts.SC_RNA_COUNTER_CS.SC_MULTI_CORE.MAKE_FULL_CONFIG._MAKE_VDJ_CONFIG\n2024-10-29 17:18:47 [runtime] (run:local)       ID.counts.SC_RNA_COUNTER_CS.SC_MULTI_CORE.MAKE_FULL_CONFIG._MAKE_VDJ_CONFIG.fork0.chnk0.main\n2024-10-29 17:18:47 [runtime] (ready)           ID.counts.SC_RNA_COUNTER_CS.FULL_COUNT_INPUTS.WRITE_GENE_INDEX\n\n...\n...\n...\n\n2024-10-29 17:25:30 [runtime] (run:local)       ID.counts.SC_RNA_COUNTER_CS.SC_MULTI_CORE.MULTI_REPORTER.CLOUPE_PREPROCESS.fork0.chnk0.main\n2024-10-29 17:25:32 [runtime] (chunks_complete) ID.counts.SC_RNA_COUNTER_CS.SC_MULTI_CORE.MULTI_REPORTER.CLOUPE_PREPROCESS\n2024-10-29 17:25:32 [runtime] (run:local)       ID.counts.SC_RNA_COUNTER_CS.SC_MULTI_CORE.MULTI_REPORTER.CLOUPE_PREPROCESS.fork0.join\n2024-10-29 17:25:33 [runtime] (join_complete)   ID.counts.SC_RNA_COUNTER_CS.SC_MULTI_CORE.MULTI_REPORTER.CLOUPE_PREPROCESS\n\nOutputs:\n- Run summary HTML:                         /home/rsg/counts/outs/web_summary.html\n- Run summary CSV:                          /home/rsg/counts/outs/metrics_summary.csv\n- BAM:                                      /home/rsg/counts/outs/possorted_genome_bam.bam\n- BAM index:                                /home/rsg/counts/outs/possorted_genome_bam.bam.bai\n- Filtered feature-barcode matrices MEX:    /home/rsg/counts/outs/filtered_feature_bc_matrix\n- Filtered feature-barcode matrices HDF5:   /home/rsg/counts/outs/filtered_feature_bc_matrix.h5\n- Unfiltered feature-barcode matrices MEX:  /home/rsg/counts/outs/raw_feature_bc_matrix\n- Unfiltered feature-barcode matrices HDF5: /home/rsg/counts/outs/raw_feature_bc_matrix.h5\n- Secondary analysis output CSV:            /home/rsg/counts/outs/analysis\n- Per-molecule read information:            /home/rsg/counts/outs/molecule_info.h5\n- CRISPR-specific analysis:                 null\n- Loupe Browser file:                       /home/rsg/counts/outs/cloupe.cloupe\n- Feature Reference:                        null\n- Target Panel File:                        null\n\nWaiting 6 seconds for UI to do final refresh.\nPipestance completed successfully!\n\n2024-10-29 17:25:39 Shutting down.\n\n\n\n\n\n\nWhile the count command is running, read about the format of the feature-barcode matrices.\nOnce the count command is finished running, the pipeline outputs can be viewed with ls:\n\n\n\nbash\n\nls -l ~/counts/outs\n\n\ntotal 119792\ndrwxr-xr-x  7 jacques  staff       224 Oct 30 23:51 analysis\n-rw-r--r--  1 jacques  staff   2522877 Oct 30 23:51 cloupe.cloupe\ndrwxr-xr-x  5 jacques  staff       160 Oct 30 23:51 filtered_feature_bc_matrix\n-rw-r--r--  1 jacques  staff    489402 Oct 30 23:51 filtered_feature_bc_matrix.h5\n-rw-r--r--  1 jacques  staff       627 Oct 30 23:51 metrics_summary.csv\n-rw-r--r--  1 jacques  staff   2885171 Oct 30 23:51 molecule_info.h5\n-rw-r--r--  1 jacques  staff  47264234 Oct 30 23:51 possorted_genome_bam.bam\n-rw-r--r--  1 jacques  staff   1744960 Oct 30 23:51 possorted_genome_bam.bam.bai\ndrwxr-xr-x  5 jacques  staff       160 Oct 30 23:51 raw_feature_bc_matrix\n-rw-r--r--  1 jacques  staff   3557585 Oct 30 23:51 raw_feature_bc_matrix.h5\n-rw-r--r--  1 jacques  staff   2848576 Oct 30 23:51 web_summary.html\n\n\nCan you locate the feature-barcode matrices? What is the difference between the raw_feature_bc_matrix and filtered_feature_bc_matrix data types?\nNow open the html file counts/outs/web_summary.html by navigating to the file in RStudio, using the Files Tab. When you click on the file, select the option to View in Web Browser. Take some time to explore the gene expression matrix outputs."
  },
  {
    "objectID": "content/day2/Lecture3_qualitycontrol.html",
    "href": "content/day2/Lecture3_qualitycontrol.html",
    "title": "5  Lecture 3 - Quality control for scRNA-Seq data",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-5d0d9e50bf708684c2c6e57b56ae9e8c\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-2182f5fd58986bf0e5294183693aba37\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day1/Lab2_processingreads.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;4&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day2/Lab3_Rbioc.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;6&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html#installing-packages-in-r",
    "href": "content/day2/Lab3_Rbioc.html#installing-packages-in-r",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "\n6.1 Installing packages in R\n",
    "text": "6.1 Installing packages in R\n\n\n“Hey, I’ve heard so many good things about this piece of software, it’s called ‘slingshot’? Heard of it? I really want to try it out on my dataset!!”\n\nOr, in other words: “how do I install this or that brand new cutting-edge fancy package?”\nR works with packages, available from different sources:\n\n\nCRAN, the R developer team and official package provider: CRAN (which can probably win the title of “the worst webpage ever designed that survived until 2023”).\n\nBioconductor, another package provider, with a primary focus on genomic-related packages: Bioconductor.\nOther unofficial sources, such as GitHub.\n\nLet’s start by going over package installation.\n\n\n\n\n\n\nQuestion\n\n\n\nInstall mgcv, HCAData and revelio packages. Each of these three packages is available from a different source:\n\n\nmgcv is a CRAN package\n\nHCAData is a Bioconductor package\n\nrevelio is a GitHub package\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ninstall.packages('mgcv')\n\n\n\nInstalling package into ‘/home/rsg/R/x86_64-pc-linux-gnu-library/4.4’\n(as ‘lib’ is unspecified)\n\ntrying URL 'https://cloud.r-project.org/src/contrib/mgcv_1.9-1.tar.gz'\nContent type 'application/x-gzip' length 1083217 bytes (1.0 MB)\n==================================================\ndownloaded 1.0 MB\n\n* installing *source* package ‘mgcv’ ...\n** package ‘mgcv’ successfully unpacked and MD5 sums checked\n** using staged installation\n** libs\nusing C compiler: ‘gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0’\ngcc -I\"/usr/share/R/include\" -DNDEBUG      -fopenmp -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-4dpK2T/r-base-4.4.1=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c coxph.c -o coxph.o\n\n...\n\ninstalling to /home/rsg/R/x86_64-pc-linux-gnu-library/4.4/00LOCK-mgcv/00new/mgcv/libs\n** R\n** data\n** inst\n** byte-compile and prepare package for lazy loading\n\n** help\n*** installing help indices\n** building package indices\n** testing if installed package can be loaded from temporary location\n** checking absolute paths in shared objects and dynamic libraries\n** testing if installed package can be loaded from final location\n** testing if installed package keeps a record of temporary installation path\n* DONE (mgcv)\n\nThe downloaded source packages are in\n        ‘/tmp/RtmpHmbVYD/downloaded_packages’\n\n\n\n\nR\n\nBiocManager::install('HCAData')\n\n\n\n'getOption(\"repos\")' replaces Bioconductor standard repositories, see 'help(\"repositories\", package = \"BiocManager\")' for details.\nReplacement repositories:\n    CRAN: https://cloud.r-project.org\nBioconductor version 3.19 (BiocManager 1.30.23), R 4.4.1 (2024-06-14)\nInstalling package(s) 'HCAData'\ntrying URL 'https://bioconductor.org/packages/3.19/data/experiment/src/contrib/HCAData_1.20.0.tar.gz'\nContent type 'application/x-gzip' length 1542758 bytes (1.5 MB)\n==================================================\ndownloaded 1.5 MB\n\n* installing *source* package ‘HCAData’ ...\n** using staged installation\n** R\n** inst\n** byte-compile and prepare package for lazy loading\n\n...\n\n** byte-compile and prepare package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** installing vignettes\n** testing if installed package can be loaded from temporary location\n** testing if installed package can be loaded from final location\n** testing if installed package keeps a record of temporary installation path\n* DONE (HCAData)\n\nThe downloaded source packages are in\n        ‘/tmp/RtmpHmbVYD/downloaded_packages’\n\n\n\n\nR\n\ndevtools::install_github('danielschw188/Revelio')\n\n\n\nUsing github PAT from envvar GITHUB_PAT. Use `gitcreds::gitcreds_set()` and unset GITHUB_PAT in .Renviron (or elsewhere) if you want to use the more secure git credential store instead.\nDownloading GitHub repo danielschw188/Revelio@HEAD\nThese packages have more recent versions available.\nIt is recommended to update all of them.\n\n...\n\n** data\n*** moving datasets to lazyload DB\n** byte-compile and prepare package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** testing if installed package can be loaded from temporary location\n** testing if installed package can be loaded from final location\n** testing if installed package keeps a record of temporary installation path\n* DONE (Revelio)\n\n\n\n\n\n\nPackage help pages are available at different places, depending on their source. That being said, there is a place I like to go to easily find information related to most packages:\nhttps://rdrr.io/\nFor instance, check out Revelio package help pages.\n\nWhat is this package designed for?\nWhat are its main functions? What type of input does it require?"
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html#basic-r-and-bioconductor-classes",
    "href": "content/day2/Lab3_Rbioc.html#basic-r-and-bioconductor-classes",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "\n6.2 Basic R and Bioconductor classes",
    "text": "6.2 Basic R and Bioconductor classes\nWhile CRAN is a repository of general-purpose packages, Bioconductor is the greatest source of analytical tools, data and workflows dedicated to genomic projects in R. Read more about Bioconductor to fully understand how it builds up on top of R general features, especially with the specific classes it introduces.\nThe two main concepts behind Bioconductor’s success are the non-redundant classes of objects it provides and their inter-operability. Huber et al., Nat. Methods 2015 summarizes it well.\n\n6.2.1 Important R concepts:\n\n6.2.1.1 tibble tables:\ntibbles are built on the fundamental data.frame objects. They follow “tidy” concepts, all gathered in a common tidyverse. This set of key concepts help general data investigation and data visualization through a set of associated packages such as ggplot2.\n\n\n\nR\n\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndat &lt;- tibble(\n    x = 1:5, \n    y = 1, \n    z = x ^ 2 + y, \n    class = c('a', 'a', 'b', 'b', 'c')\n)\ndat\n\n# A tibble: 5 × 4\n      x     y     z class\n  &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n1     1     1     2 a    \n2     2     1     5 a    \n3     3     1    10 b    \n4     4     1    17 b    \n5     5     1    26 c    \n\n\n\nImport a text file into tibbles\n\ntibbles can be created from text files (or Excel files) using the readr package (part of tidyverse)\n\n\n\nR\n\ngenes &lt;- read_tsv('~/Share/GSM4486714_AXH009_genes.tsv', col_names = c('ID', 'Symbol'))\n\n\nRows: 32738 Columns: 2\n── Column specification ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): ID, Symbol\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ngenes\n\n# A tibble: 32,738 × 2\n   ID              Symbol       \n   &lt;chr&gt;           &lt;chr&gt;        \n 1 ENSG00000243485 MIR1302-10   \n 2 ENSG00000237613 FAM138A      \n 3 ENSG00000186092 OR4F5        \n 4 ENSG00000238009 RP11-34P13.7 \n 5 ENSG00000239945 RP11-34P13.8 \n 6 ENSG00000237683 AL627309.1   \n 7 ENSG00000239906 RP11-34P13.14\n 8 ENSG00000241599 RP11-34P13.9 \n 9 ENSG00000228463 AP006222.2   \n10 ENSG00000237094 RP4-669L17.10\n# ℹ 32,728 more rows\n\n\n\n6.2.1.2 Handling of tibbles:\ntibbles can be readily “sliced” (i.e. selecting rows by number/name), “filtered” (i.e. selecting rows by condition) and columns can be “selected”. All these operations are performed using verbs (most of them provided by the dplyr package, part of tidyverse).\n\n\n\nR\n\nslice(genes, 1:4)\n\n\n# A tibble: 4 × 2\n  ID              Symbol      \n  &lt;chr&gt;           &lt;chr&gt;       \n1 ENSG00000243485 MIR1302-10  \n2 ENSG00000237613 FAM138A     \n3 ENSG00000186092 OR4F5       \n4 ENSG00000238009 RP11-34P13.7\n\nfilter(genes, Symbol == 'CCDC67')\n\n# A tibble: 1 × 2\n  ID              Symbol\n  &lt;chr&gt;           &lt;chr&gt; \n1 ENSG00000165325 CCDC67\n\nfilter(genes, grepl('^CCDC.*', Symbol))\n\n# A tibble: 159 × 2\n   ID              Symbol  \n   &lt;chr&gt;           &lt;chr&gt;   \n 1 ENSG00000162592 CCDC27  \n 2 ENSG00000160050 CCDC28B \n 3 ENSG00000186409 CCDC30  \n 4 ENSG00000177868 CCDC23  \n 5 ENSG00000159214 CCDC24  \n 6 ENSG00000236624 CCDC163P\n 7 ENSG00000159588 CCDC17  \n 8 ENSG00000122483 CCDC18  \n 9 ENSG00000213085 CCDC19  \n10 ENSG00000117477 CCDC181 \n# ℹ 149 more rows\n\nfilter(genes, grepl('^CCDC.*', Symbol), grepl('.*5$', Symbol))\n\n# A tibble: 9 × 2\n  ID              Symbol \n  &lt;chr&gt;           &lt;chr&gt;  \n1 ENSG00000136710 CCDC115\n2 ENSG00000183323 CCDC125\n3 ENSG00000147419 CCDC25 \n4 ENSG00000149548 CCDC15 \n5 ENSG00000139537 CCDC65 \n6 ENSG00000151838 CCDC175\n7 ENSG00000159625 CCDC135\n8 ENSG00000160994 CCDC105\n9 ENSG00000161609 CCDC155\n\nselect(genes, 1)\n\n# A tibble: 32,738 × 1\n   ID             \n   &lt;chr&gt;          \n 1 ENSG00000243485\n 2 ENSG00000237613\n 3 ENSG00000186092\n 4 ENSG00000238009\n 5 ENSG00000239945\n 6 ENSG00000237683\n 7 ENSG00000239906\n 8 ENSG00000241599\n 9 ENSG00000228463\n10 ENSG00000237094\n# ℹ 32,728 more rows\n\nselect(genes, ID)\n\n# A tibble: 32,738 × 1\n   ID             \n   &lt;chr&gt;          \n 1 ENSG00000243485\n 2 ENSG00000237613\n 3 ENSG00000186092\n 4 ENSG00000238009\n 5 ENSG00000239945\n 6 ENSG00000237683\n 7 ENSG00000239906\n 8 ENSG00000241599\n 9 ENSG00000228463\n10 ENSG00000237094\n# ℹ 32,728 more rows\n\nselect(genes, matches('Sym.*'))\n\n# A tibble: 32,738 × 1\n   Symbol       \n   &lt;chr&gt;        \n 1 MIR1302-10   \n 2 FAM138A      \n 3 OR4F5        \n 4 RP11-34P13.7 \n 5 RP11-34P13.8 \n 6 AL627309.1   \n 7 RP11-34P13.14\n 8 RP11-34P13.9 \n 9 AP006222.2   \n10 RP4-669L17.10\n# ℹ 32,728 more rows\n\n\nColumns can also be quickly added/modified using the mutate verb.\n\n\n\nR\n\nmutate(genes, chr = sample(1:22, n(), replace = TRUE))\n\n\n# A tibble: 32,738 × 3\n   ID              Symbol          chr\n   &lt;chr&gt;           &lt;chr&gt;         &lt;int&gt;\n 1 ENSG00000243485 MIR1302-10       15\n 2 ENSG00000237613 FAM138A          18\n 3 ENSG00000186092 OR4F5            21\n 4 ENSG00000238009 RP11-34P13.7      1\n 5 ENSG00000239945 RP11-34P13.8      9\n 6 ENSG00000237683 AL627309.1       20\n 7 ENSG00000239906 RP11-34P13.14    15\n 8 ENSG00000241599 RP11-34P13.9     15\n 9 ENSG00000228463 AP006222.2        4\n10 ENSG00000237094 RP4-669L17.10    10\n# ℹ 32,728 more rows\n\n\n\n6.2.1.3 |&gt; pipe:\nActions on tibbles can be piped as a chain with |&gt;, just like | pipes stdout as the stdin of the next command in bash. In this case, the first argument is always the output of the previous function and is ommited. Because tidyverse functions generally return a modified version of the input, pipping works remarkably well in such context.\n\n\n\nR\n\nread_tsv('~/Share/GSM4486714_AXH009_genes.tsv', col_names = c('ID', 'Symbol')) |&gt; \n    mutate(chr = sample(1:22, n(), replace = TRUE)) |&gt; \n    filter(chr == 2, grepl('^CCDC.*', Symbol)) |&gt; \n    select(ID) |&gt; \n    slice_head(n = 3)\n\n\nRows: 32738 Columns: 2\n── Column specification ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): ID, Symbol\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 3 × 1\n  ID             \n  &lt;chr&gt;          \n1 ENSG00000117477\n2 ENSG00000173421\n3 ENSG00000229140\n\n\n\n6.2.2 Important Bioconductor concepts:\n\n6.2.2.1 SummarizedExperiment class:\nThe most fundamental class used to hold the content of large-scale quantitative analyses, such as counts of RNA-seq experiments, or high-throughput cytometry experiments or proteomics experiments.\n\nMake sure you understand the structure of objects from this class. A dedicated workshop that I would recommend quickly going over is available here. Generally speaking, a SummarizedExperiment object contains matrix-like objects (the assays), with rows representing features (e.g. genes, transcripts, …) and each column representing a sample. Information specific to genes and samples are stored in “parallel” data frames, for example to store gene locations, tissue of expression, biotypes (for genes) or batch, generation date, or machine ID (for samples). On top of that, metadata are also stored in the object (to store description of a project, …).\nAn important difference with S3 list-like objects usually used in R is that most of the underlying data (organized in precisely structured \"slots\") is accessed using getter functions, rather than the familiar $ or [. Here are some important getters:\n\n\nassay(), assays(): Extrant matrix-like or list of matrix-like objects of identical dimensions. Since the objects are matrix-like, dim(), dimnames(), and 2-dimensional [, [&lt;- methods are available.\n\ncolData(): Annotations on each column (as a DataFrame): usually, description of each sample\n\nrowData(): Annotations on each row (as a DataFrame): usually, description of each gene\n\nmetadata(): List of unstructured metadata describing the overall content of the object.\n\nLet’s dig into an example (you may need to install the airway package from Bioconductor…)\n\n\n\nR\n\nlibrary(SummarizedExperiment)\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'matrixStats'\n\n\nThe following object is masked from 'package:dplyr':\n\n    count\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, colCounts, colCummaxs, colCummins, colCumprods, colCumsums, colDiffs, colIQRDiffs, colIQRs, colLogSumExps,\n    colMadDiffs, colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, colSums2, colTabulates,\n    colVarDiffs, colVars, colWeightedMads, colWeightedMeans, colWeightedMedians, colWeightedSds, colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, rowCollapse,\n    rowCounts, rowCummaxs, rowCummins, rowCumprods, rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, rowWeightedMads, rowWeightedMeans,\n    rowWeightedMedians, rowWeightedSds, rowWeightedVars\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following objects are masked from 'package:lubridate':\n\n    intersect, setdiff, union\n\n\nThe following objects are masked from 'package:dplyr':\n\n    combine, intersect, setdiff, union\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted,\n    lapply, Map, mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, table, tapply, union, unique,\n    unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following objects are masked from 'package:lubridate':\n\n    second, second&lt;-\n\n\nThe following objects are masked from 'package:dplyr':\n\n    first, rename\n\n\nThe following object is masked from 'package:tidyr':\n\n    expand\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\n\nAttaching package: 'IRanges'\n\n\nThe following object is masked from 'package:lubridate':\n\n    %within%\n\n\nThe following objects are masked from 'package:dplyr':\n\n    collapse, desc, slice\n\n\nThe following object is masked from 'package:purrr':\n\n    reduce\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with 'browseVignettes()'. To cite Bioconductor, see 'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\nlibrary(airway)\ndata(airway)\nairway\n\nclass: RangedSummarizedExperiment \ndim: 63677 8 \nmetadata(1): ''\nassays(1): counts\nrownames(63677): ENSG00000000003 ENSG00000000005 ... ENSG00000273492 ENSG00000273493\nrowData names(10): gene_id gene_name ... seq_coord_system symbol\ncolnames(8): SRR1039508 SRR1039509 ... SRR1039520 SRR1039521\ncolData names(9): SampleName cell ... Sample BioSample\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nWhat are the dimensions of the dataset? What type of quantitative data is stored? Which features are assessed?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndim(airway)\n\n\n[1] 63677     8\n\nrowData(airway)\n\nDataFrame with 63677 rows and 10 columns\n                        gene_id     gene_name  entrezid   gene_biotype gene_seq_start gene_seq_end              seq_name seq_strand seq_coord_system        symbol\n                    &lt;character&gt;   &lt;character&gt; &lt;integer&gt;    &lt;character&gt;      &lt;integer&gt;    &lt;integer&gt;           &lt;character&gt;  &lt;integer&gt;        &lt;integer&gt;   &lt;character&gt;\nENSG00000000003 ENSG00000000003        TSPAN6        NA protein_coding       99883667     99894988                     X         -1               NA        TSPAN6\nENSG00000000005 ENSG00000000005          TNMD        NA protein_coding       99839799     99854882                     X          1               NA          TNMD\nENSG00000000419 ENSG00000000419          DPM1        NA protein_coding       49551404     49575092                    20         -1               NA          DPM1\nENSG00000000457 ENSG00000000457         SCYL3        NA protein_coding      169818772    169863408                     1         -1               NA         SCYL3\nENSG00000000460 ENSG00000000460      C1orf112        NA protein_coding      169631245    169823221                     1          1               NA      C1orf112\n...                         ...           ...       ...            ...            ...          ...                   ...        ...              ...           ...\nENSG00000273489 ENSG00000273489 RP11-180C16.1        NA      antisense      131178723    131182453                     7         -1               NA RP11-180C16.1\nENSG00000273490 ENSG00000273490        TSEN34        NA protein_coding       54693789     54697585 HSCHR19LRC_LRC_J_CTG1          1               NA        TSEN34\nENSG00000273491 ENSG00000273491  RP11-138A9.2        NA        lincRNA      130600118    130603315          HG1308_PATCH          1               NA  RP11-138A9.2\nENSG00000273492 ENSG00000273492    AP000230.1        NA        lincRNA       27543189     27589700                    21          1               NA    AP000230.1\nENSG00000273493 ENSG00000273493  RP11-80H18.4        NA        lincRNA       58315692     58315845                     3          1               NA  RP11-80H18.4\n\ncolData(airway)\n\nDataFrame with 8 rows and 9 columns\n           SampleName     cell      dex    albut        Run avgLength Experiment    Sample    BioSample\n             &lt;factor&gt; &lt;factor&gt; &lt;factor&gt; &lt;factor&gt;   &lt;factor&gt; &lt;integer&gt;   &lt;factor&gt;  &lt;factor&gt;     &lt;factor&gt;\nSRR1039508 GSM1275862  N61311     untrt    untrt SRR1039508       126  SRX384345 SRS508568 SAMN02422669\nSRR1039509 GSM1275863  N61311     trt      untrt SRR1039509       126  SRX384346 SRS508567 SAMN02422675\nSRR1039512 GSM1275866  N052611    untrt    untrt SRR1039512       126  SRX384349 SRS508571 SAMN02422678\nSRR1039513 GSM1275867  N052611    trt      untrt SRR1039513        87  SRX384350 SRS508572 SAMN02422670\nSRR1039516 GSM1275870  N080611    untrt    untrt SRR1039516       120  SRX384353 SRS508575 SAMN02422682\nSRR1039517 GSM1275871  N080611    trt      untrt SRR1039517       126  SRX384354 SRS508576 SAMN02422673\nSRR1039520 GSM1275874  N061011    untrt    untrt SRR1039520       101  SRX384357 SRS508579 SAMN02422683\nSRR1039521 GSM1275875  N061011    trt      untrt SRR1039521        98  SRX384358 SRS508580 SAMN02422677\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCan you create a subset of the data corresponding to LRG genes in untreated samples?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nuntreated_LRG &lt;- airway[grepl('^LRG_', rownames(airway)), airway$dex == 'untrt']\nuntreated_LRG\n\n\nclass: RangedSummarizedExperiment \ndim: 0 4 \nmetadata(1): ''\nassays(1): counts\nrownames(0):\nrowData names(10): gene_id gene_name ... seq_coord_system symbol\ncolnames(4): SRR1039508 SRR1039512 SRR1039516 SRR1039520\ncolData names(9): SampleName cell ... Sample BioSample\n\n\n\n\n\n\n\n\n6.2.2.2 GenomicRanges class (a.k.a. GRanges):\nGenomicRanges are a type of IntervalRanges, they are useful to describe genomic intervals. Each entry in a GRanges object has a seqnames(), a start() and an end() coordinates, a strand(), as well as associated metadata (mcols()). They can be built from scratch using tibbles converted with makeGRangesFromDataFrame().\n\n\n\nR\n\nlibrary(GenomicRanges)\ngr &lt;- read_tsv('~/Share/GSM4486714_AXH009_genes.tsv', col_names = c('ID', 'Symbol')) |&gt; \n    mutate(\n        chr = sample(1:22, n(), replace = TRUE), \n        start = sample(1:1000, n(), replace = TRUE),\n        end = sample(10000:20000, n(), replace = TRUE),\n        strand = sample(c('-', '+'), n(), replace = TRUE)\n    ) |&gt; \n    makeGRangesFromDataFrame(keep.extra.columns = TRUE)\n\n\nRows: 32738 Columns: 2\n── Column specification ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): ID, Symbol\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ngr\n\nGRanges object with 32738 ranges and 2 metadata columns:\n          seqnames    ranges strand |              ID       Symbol\n             &lt;Rle&gt; &lt;IRanges&gt;  &lt;Rle&gt; |     &lt;character&gt;  &lt;character&gt;\n      [1]       12 789-11554      - | ENSG00000243485   MIR1302-10\n      [2]        2 483-10455      - | ENSG00000237613      FAM138A\n      [3]        1 928-18540      + | ENSG00000186092        OR4F5\n      [4]       17 583-13775      + | ENSG00000238009 RP11-34P13.7\n      [5]       20 556-16032      - | ENSG00000239945 RP11-34P13.8\n      ...      ...       ...    ... .             ...          ...\n  [32734]       18 105-16111      - | ENSG00000215635   AC145205.1\n  [32735]       12  20-11980      - | ENSG00000268590        BAGE5\n  [32736]        7 560-10165      - | ENSG00000251180   CU459201.1\n  [32737]       11  57-13558      + | ENSG00000215616   AC002321.2\n  [32738]        4 880-19993      - | ENSG00000215611   AC002321.1\n  -------\n  seqinfo: 22 sequences from an unspecified genome; no seqlengths\n\nmcols(gr)\n\nDataFrame with 32738 rows and 2 columns\n                   ID       Symbol\n          &lt;character&gt;  &lt;character&gt;\n1     ENSG00000243485   MIR1302-10\n2     ENSG00000237613      FAM138A\n3     ENSG00000186092        OR4F5\n4     ENSG00000238009 RP11-34P13.7\n5     ENSG00000239945 RP11-34P13.8\n...               ...          ...\n32734 ENSG00000215635   AC145205.1\n32735 ENSG00000268590        BAGE5\n32736 ENSG00000251180   CU459201.1\n32737 ENSG00000215616   AC002321.2\n32738 ENSG00000215611   AC002321.1\n\n\nJust like tidyverse in R, tidy functions are provided for GRanges by the plyranges package.\n\n\n\nR\n\nlibrary(plyranges)\n\n\n\nAttaching package: 'plyranges'\n\n\nThe following object is masked from 'package:IRanges':\n\n    slice\n\n\nThe following objects are masked from 'package:dplyr':\n\n    between, n, n_distinct\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\ngr |&gt; \n    filter(start &lt; 400, end &gt; 12000, end &lt; 15000) |&gt; \n    seqnames() |&gt; \n    table()\n\n\n  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22 \n185 172 201 181 173 166 165 183 169 167 211 188 191 194 162 202 180 205 173 167 196 168 \n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCan you find a way to easily read common input files such as bed files into GRanges?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(rtracklayer)\ngenes2 &lt;- import('~/Share/GRCm39_genes.bed')\ngenes2\n\n\nGRanges object with 53700 ranges and 2 metadata columns:\n          seqnames            ranges strand |               name     score\n             &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; |        &lt;character&gt; &lt;numeric&gt;\n      [1]        1   3143476-3144545      + | ENSMUSG00000102693         0\n      [2]        1   3172239-3172348      + | ENSMUSG00000064842         0\n      [3]        1   3276124-3741721      - | ENSMUSG00000051951         0\n      [4]        1   3322980-3323459      + | ENSMUSG00000102851         0\n      [5]        1   3435954-3438772      - | ENSMUSG00000103377         0\n      ...      ...               ...    ... .                ...       ...\n  [53696]        Y 90763696-90766736      - | ENSMUSG00000095366         0\n  [53697]        Y 90764326-90774754      + | ENSMUSG00000095134         0\n  [53698]        Y 90796007-90827734      + | ENSMUSG00000096768         0\n  [53699]        Y 90848682-90855309      + | ENSMUSG00000099871         0\n  [53700]        Y 90850138-90850446      - | ENSMUSG00000096850         0\n  -------\n  seqinfo: 36 sequences from an unspecified genome; no seqlengths\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nHow would you have proceeded without rtracklayer? Check the start coordinates: what do you see? Comment on the interest of using Bioconductor.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(rtracklayer)\ngenes2_manual &lt;- read_tsv('~/Share/GRCm39_genes.bed', col_names = FALSE) |&gt; \n    drop_na() |&gt;\n    purrr::set_names(c('chr', 'start', 'stop', 'id', 'score', 'strand')) |&gt; \n    makeGRangesFromDataFrame(keep.extra.columns = TRUE)\n\n\nRows: 53700 Columns: 6\n── Column specification ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (3): X1, X4, X6\ndbl (3): X2, X3, X5\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ngenes2_manual\n\nGRanges object with 53700 ranges and 2 metadata columns:\n          seqnames            ranges strand |                 id     score\n             &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; |        &lt;character&gt; &lt;numeric&gt;\n      [1]        1   3143475-3144545      + | ENSMUSG00000102693         0\n      [2]        1   3172238-3172348      + | ENSMUSG00000064842         0\n      [3]        1   3276123-3741721      - | ENSMUSG00000051951         0\n      [4]        1   3322979-3323459      + | ENSMUSG00000102851         0\n      [5]        1   3435953-3438772      - | ENSMUSG00000103377         0\n      ...      ...               ...    ... .                ...       ...\n  [53696]        Y 90763695-90766736      - | ENSMUSG00000095366         0\n  [53697]        Y 90764325-90774754      + | ENSMUSG00000095134         0\n  [53698]        Y 90796006-90827734      + | ENSMUSG00000096768         0\n  [53699]        Y 90848681-90855309      + | ENSMUSG00000099871         0\n  [53700]        Y 90850137-90850446      - | ENSMUSG00000096850         0\n  -------\n  seqinfo: 36 sequences from an unspecified genome; no seqlengths\n\nhead(start(genes2))\n\n[1] 3143476 3172239 3276124 3322980 3435954 3445779\n\nhead(start(genes2_manual))\n\n[1] 3143475 3172238 3276123 3322979 3435953 3445778"
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html#cran-bioconductor-approaches-to-scrnaseq",
    "href": "content/day2/Lab3_Rbioc.html#cran-bioconductor-approaches-to-scrnaseq",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "\n6.3 CRAN & Bioconductor approaches to scRNAseq",
    "text": "6.3 CRAN & Bioconductor approaches to scRNAseq\n\n6.3.1 scRNAseq in Bioconductor\nFor single-cell RNA-seq projects, Bioconductor has been introducting new classes and standards very rapidly in the past few years. Notably, several packages are increasingly becoming central for single-cell analysis:\n\nSingleCellExperiment\nscater\nscran\nscuttle\nbatchelor\nSingleR\nbluster\nDropletUtils\nslingshot\ntradeSeq\n…\n\nSingleCellExperiment is the fundamental class designed to contain single-cell (RNA-seq) data in Bioconductor ecosystem. It is a modified version of the SummarizedExperiment object, so most of the getters/setters are shared with this class.\n\n\n\n\nR\n\nlibrary(SingleCellExperiment)\nsource('~/Share/bin/prepare_Nestorowa.R') # Adapted from Nestorowa et al., Blood 2016 (doi: 10.1182/blood-2016-05-716480)\n\n\nloading from cache\n\n\nrequire(\"ensembldb\")\n\nsce\n\nclass: SingleCellExperiment \ndim: 500 1920 \nmetadata(0):\nassays(2): counts logcounts\nrownames(500): ENSMUSG00000076609 ENSMUSG00000021250 ... ENSMUSG00000026000 ENSMUSG00000005982\nrowData names(0):\ncolnames(1920): HSPC_007 HSPC_013 ... Prog_852 Prog_810\ncolData names(11): gate broad ... label sizeFactor\nreducedDimNames(1): diffusion\nmainExpName: endogenous\naltExpNames(0):\n\nclass(sce)\n\n[1] \"SingleCellExperiment\"\nattr(,\"package\")\n[1] \"SingleCellExperiment\"\n\n\nSeveral slots can be accessed in a SingleCellExperiment object, just like the SummarizedExperiment object it’s been adapted from:\n\n\n\nR\n\ncolData(sce)\n\n\nDataFrame with 1920 rows and 11 columns\n                gate       broad   broad.mpp        fine    fine.mpp     ESLAM      HSC1 projected             metrics       label sizeFactor\n         &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;logical&gt; &lt;logical&gt; &lt;logical&gt;         &lt;DataFrame&gt; &lt;character&gt;  &lt;numeric&gt;\nHSPC_007        HSPC          NA          NA          NA          NA     FALSE     FALSE     FALSE 194829:  5022:0:...        HSPC  0.0272469\nHSPC_013        HSPC        LMPP          NA        LMPP          NA     FALSE     FALSE     FALSE 110530: 15271:0:...        HSPC  0.0904215\nHSPC_019        HSPC        LMPP          NA          NA          NA     FALSE     FALSE     FALSE  86825:  2708:0:...        HSPC  0.0199211\nHSPC_025        HSPC         MPP        MPP1          NA          NA     FALSE     FALSE     FALSE 212206:107278:0:...        HSPC  0.5217920\nHSPC_031        HSPC         MPP       STHSC          NA          NA     FALSE     FALSE     FALSE 690411:227480:0:...        HSPC  1.1062306\n...              ...         ...         ...         ...         ...       ...       ...       ...                 ...         ...        ...\nProg_834        Prog         CMP          NA          NA          NA     FALSE     FALSE     FALSE 471273:296060:0:...        Prog   1.668383\nProg_840        Prog         GMP          NA         GMP          NA     FALSE     FALSE     FALSE 421195:317394:0:...        Prog   1.728596\nProg_846        Prog         GMP          NA          NA          NA     FALSE     FALSE     FALSE 337564:253387:0:...        Prog   1.282827\nProg_852        Prog         MEP          NA         MEP          NA     FALSE     FALSE     FALSE 200193:136478:0:...        Prog   0.643172\nProg_810        Prog         CMP          NA         CMP          NA     FALSE     FALSE     FALSE 857257:396247:0:...        Prog   2.614351\n\nrowData(sce)\n\nDataFrame with 500 rows and 0 columns\n\nmetadata(sce)\n\nlist()\n\ndim(sce)\n\n[1]  500 1920\n\nassays(sce)\n\nList of length 2\nnames(2): counts logcounts\n\n\nQuantitative metrics for scRNAseq studies can also be stored in assays:\n\n\n\nR\n\nassays(sce)\n\n\nList of length 2\nnames(2): counts logcounts\n\nassay(sce, 'counts')[1:10, 1:10]\n\n10 x 10 sparse Matrix of class \"dgCMatrix\"\n\n\n  [[ suppressing 10 column names 'HSPC_007', 'HSPC_013', 'HSPC_019' ... ]]\n\n\n                                                            \nENSMUSG00000076609 30  16  7   17  19   11 1359   13  15   6\nENSMUSG00000021250  3   2  4    .   1    3  118    2  69  41\nENSMUSG00000076617 40  54 13   29 298  417 1107    9  16  15\nENSMUSG00000075602  3 248  7  537 640    7  300 1530 324 971\nENSMUSG00000006389  3   4  1 1171   6    2  271 5497 293 192\nENSMUSG00000041481  3   .  1    3   1    3  177    5   1 192\nENSMUSG00000024190  1  29  1 1733   1    5   20    3   1   1\nENSMUSG00000003949  4  15  3  175 915 1131   41 1465 330 258\nENSMUSG00000052684  1   4  2  144  82    5  142  578   .  78\nENSMUSG00000026358  .  27  6  344   3    9    3 3612 185   .\n\nassay(sce, 'logcounts')[1:10, 1:10]\n\n10 x 10 sparse Matrix of class \"dgCMatrix\"\n\n\n  [[ suppressing 10 column names 'HSPC_007', 'HSPC_013', 'HSPC_019' ... ]]\n\n\n                                                                                                 \nENSMUSG00000076609 10.1060  7.4753 8.4610  5.0695 4.18392  4.4846 13.0580  2.79276 4.9075  4.2566\nENSMUSG00000021250  6.7958  4.5310 7.6567  .      0.92901  2.7725  9.5341  0.93526 7.0711  6.9632\nENSMUSG00000076617 10.5207  9.2245 9.3522  5.8222 8.07886  9.6650 12.7621  2.35193 4.9976  5.5325\nENSMUSG00000075602  6.7958 11.4219 8.4610 10.0086 9.17877  3.8689 10.8791  9.44886 9.2939 11.5179\nENSMUSG00000006389  6.7958  5.4994 5.6780 11.1326 2.68343  2.2894 10.7325 11.29248 9.1491  9.1815\nENSMUSG00000041481  6.7958  .      5.6780  2.7548 0.92901  2.7725 10.1184  1.71395 1.5530  9.1815\nENSMUSG00000024190  5.2365  8.3297 5.6780 11.6979 0.92901  3.4225  6.9829  1.24388 1.5530  2.0068\nENSMUSG00000003949  7.2076  7.3828 7.2441  8.3940 9.69372 11.1033  8.0126  9.38632 9.3203  9.6071\nENSMUSG00000052684  5.2365  5.4994 6.6639  8.1136 6.23123  3.4225  9.8009  8.04786 .       7.8856\nENSMUSG00000026358  .       8.2269 8.2393  9.3669 1.89216  4.2094  4.3091 10.68693 8.4872  .     \n\ncounts(sce)[1:10, 1:10]\n\n10 x 10 sparse Matrix of class \"dgCMatrix\"\n\n\n  [[ suppressing 10 column names 'HSPC_007', 'HSPC_013', 'HSPC_019' ... ]]\n\n\n                                                            \nENSMUSG00000076609 30  16  7   17  19   11 1359   13  15   6\nENSMUSG00000021250  3   2  4    .   1    3  118    2  69  41\nENSMUSG00000076617 40  54 13   29 298  417 1107    9  16  15\nENSMUSG00000075602  3 248  7  537 640    7  300 1530 324 971\nENSMUSG00000006389  3   4  1 1171   6    2  271 5497 293 192\nENSMUSG00000041481  3   .  1    3   1    3  177    5   1 192\nENSMUSG00000024190  1  29  1 1733   1    5   20    3   1   1\nENSMUSG00000003949  4  15  3  175 915 1131   41 1465 330 258\nENSMUSG00000052684  1   4  2  144  82    5  142  578   .  78\nENSMUSG00000026358  .  27  6  344   3    9    3 3612 185   .\n\nlogcounts(sce)[1:10, 1:10]\n\n10 x 10 sparse Matrix of class \"dgCMatrix\"\n\n\n  [[ suppressing 10 column names 'HSPC_007', 'HSPC_013', 'HSPC_019' ... ]]\n\n\n                                                                                                 \nENSMUSG00000076609 10.1060  7.4753 8.4610  5.0695 4.18392  4.4846 13.0580  2.79276 4.9075  4.2566\nENSMUSG00000021250  6.7958  4.5310 7.6567  .      0.92901  2.7725  9.5341  0.93526 7.0711  6.9632\nENSMUSG00000076617 10.5207  9.2245 9.3522  5.8222 8.07886  9.6650 12.7621  2.35193 4.9976  5.5325\nENSMUSG00000075602  6.7958 11.4219 8.4610 10.0086 9.17877  3.8689 10.8791  9.44886 9.2939 11.5179\nENSMUSG00000006389  6.7958  5.4994 5.6780 11.1326 2.68343  2.2894 10.7325 11.29248 9.1491  9.1815\nENSMUSG00000041481  6.7958  .      5.6780  2.7548 0.92901  2.7725 10.1184  1.71395 1.5530  9.1815\nENSMUSG00000024190  5.2365  8.3297 5.6780 11.6979 0.92901  3.4225  6.9829  1.24388 1.5530  2.0068\nENSMUSG00000003949  7.2076  7.3828 7.2441  8.3940 9.69372 11.1033  8.0126  9.38632 9.3203  9.6071\nENSMUSG00000052684  5.2365  5.4994 6.6639  8.1136 6.23123  3.4225  9.8009  8.04786 .       7.8856\nENSMUSG00000026358  .       8.2269 8.2393  9.3669 1.89216  4.2094  4.3091 10.68693 8.4872  .     \n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCheck the colData() output of the sce object. What information is stored there? How can you access the different objects stored in colData?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncolData(sce)\n\n\nDataFrame with 1920 rows and 11 columns\n                gate       broad   broad.mpp        fine    fine.mpp     ESLAM      HSC1 projected             metrics       label sizeFactor\n         &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;logical&gt; &lt;logical&gt; &lt;logical&gt;         &lt;DataFrame&gt; &lt;character&gt;  &lt;numeric&gt;\nHSPC_007        HSPC          NA          NA          NA          NA     FALSE     FALSE     FALSE 194829:  5022:0:...        HSPC  0.0272469\nHSPC_013        HSPC        LMPP          NA        LMPP          NA     FALSE     FALSE     FALSE 110530: 15271:0:...        HSPC  0.0904215\nHSPC_019        HSPC        LMPP          NA          NA          NA     FALSE     FALSE     FALSE  86825:  2708:0:...        HSPC  0.0199211\nHSPC_025        HSPC         MPP        MPP1          NA          NA     FALSE     FALSE     FALSE 212206:107278:0:...        HSPC  0.5217920\nHSPC_031        HSPC         MPP       STHSC          NA          NA     FALSE     FALSE     FALSE 690411:227480:0:...        HSPC  1.1062306\n...              ...         ...         ...         ...         ...       ...       ...       ...                 ...         ...        ...\nProg_834        Prog         CMP          NA          NA          NA     FALSE     FALSE     FALSE 471273:296060:0:...        Prog   1.668383\nProg_840        Prog         GMP          NA         GMP          NA     FALSE     FALSE     FALSE 421195:317394:0:...        Prog   1.728596\nProg_846        Prog         GMP          NA          NA          NA     FALSE     FALSE     FALSE 337564:253387:0:...        Prog   1.282827\nProg_852        Prog         MEP          NA         MEP          NA     FALSE     FALSE     FALSE 200193:136478:0:...        Prog   0.643172\nProg_810        Prog         CMP          NA         CMP          NA     FALSE     FALSE     FALSE 857257:396247:0:...        Prog   2.614351\n\nlapply(colData(sce), class)\n\n$gate\n[1] \"character\"\n\n$broad\n[1] \"character\"\n\n$broad.mpp\n[1] \"character\"\n\n$fine\n[1] \"character\"\n\n$fine.mpp\n[1] \"character\"\n\n$ESLAM\n[1] \"logical\"\n\n$HSC1\n[1] \"logical\"\n\n$projected\n[1] \"logical\"\n\n$metrics\n[1] \"DFrame\"\nattr(,\"package\")\n[1] \"S4Vectors\"\n\n$label\n[1] \"character\"\n\n$sizeFactor\n[1] \"numeric\"\n\nhead(colData(sce)[[1]])\n\n[1] \"HSPC\" \"HSPC\" \"HSPC\" \"HSPC\" \"HSPC\" \"HSPC\"\n\nhead(colData(sce)[['FACS']])\n\nNULL\n\nhead(sce$sizeFactor)\n\nHSPC_007 HSPC_013 HSPC_019 HSPC_025 HSPC_031 HSPC_037 \n0.027247 0.090422 0.019921 0.521792 1.106231 0.514315 \n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nAre there any reduced dimensionality representation of the data stored in the sce object? How can we run a PCA using normalized counts?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nreducedDims(sce)\n\n\nList of length 1\nnames(1): diffusion\n\npca &lt;- prcomp(t(logcounts(sce)))\nnames(pca)\n\n[1] \"sdev\"     \"rotation\" \"center\"   \"scale\"    \"x\"       \n\ndim(pca$x)\n\n[1] 1920  500\n\nhead(pca$x[, 1:50])\n\n              PC1      PC2      PC3      PC4     PC5      PC6        PC7     PC8     PC9      PC10     PC11    PC12     PC13      PC14     PC15    PC16      PC17     PC18      PC19     PC20      PC21\nHSPC_007   5.5957 -3.38018   9.9597 13.13023  3.7096 10.32141   3.764118  3.7285  8.0435 -10.48526  1.15326  4.1454  -5.2693 -1.813323 -0.97617  4.7550   3.11405 -1.74971  2.479306  6.36876  3.063672\nHSPC_013 -12.1968 -5.40485   1.5587 13.77344 -1.3253 -0.94266   0.426347 -1.2937  4.5126  -8.51455  4.07508  3.2265  -2.3242 -6.277261  0.83638 -1.1571  -2.58356  2.27125 -7.971672  2.78289 -1.501527\nHSPC_019  -3.5459  7.74575   5.3837 -0.69904  3.9597  0.25072   5.827758  5.6821  4.6550  -6.72713  5.06253  1.6937 -10.8387 -0.068593 -6.44997 -8.0882  -1.97497  0.23654  0.067473 -0.22922  1.049034\nHSPC_025 -25.0520  5.25948   4.2798 13.99371 -1.7324 -5.80749   0.067956 -5.3545 -2.5282  -4.97378 -0.77335 -2.2739   6.4097 -3.363907  2.04061  5.8590 -10.45179  9.55541  2.684936  2.26075  4.727528\nHSPC_031 -16.1440  8.09702 -10.0759  4.31911  2.7599 -6.63687  -8.269004  1.9340  2.4052  -0.78640  5.34394 12.1510  -6.0860  5.866753 -0.35564 -2.5135  -1.12345  9.87570 -5.632063 -5.99195  0.055566\nHSPC_037 -20.4713 -0.66065  -7.4788 14.13894  7.8887  0.82878 -10.215540 -1.1051  3.3203   0.89116 10.82329 -1.3852  -6.6037 -2.795674  3.17142  9.6886  -0.79144  2.22416  3.350303 10.48825  7.977354\n            PC22     PC23     PC24    PC25      PC26    PC27     PC28      PC29     PC30    PC31     PC32      PC33    PC34      PC35     PC36     PC37    PC38     PC39    PC40    PC41     PC42\nHSPC_007  3.0668 -4.98611 -2.44344 -4.4294 -4.793706 -3.7329  2.63928   0.10687 -4.45481 -5.4965 -1.38617  -0.47128  7.0242 -3.064532 -6.12037 -6.24617 -0.6804  -3.3962 -1.5903  4.1173  6.51825\nHSPC_013  4.9239 -0.80967 -2.46145 -3.2220 -0.050257  2.9270  2.57239  -3.69495 -3.27098  1.1131  1.38702   4.07027 -5.2938 -4.267308  2.19268 -0.89853  1.7735   2.0599 -2.7113  1.5901 -4.90143\nHSPC_019  4.0552  0.50168 -0.40174 -7.7278  5.796156  5.3452  5.36809 -10.29223  8.39879 -2.8710  3.38587  -4.43033  6.4016 -0.261125  5.56004 -0.21594  5.5926  -2.6249  4.4587  2.6632  4.37120\nHSPC_025  2.8838  0.75559 -2.31164  5.6351  0.201399 -1.5091 -5.13768   3.25790  0.61794 -5.3367 -3.22935   1.31144  4.7864  2.222136  1.38136  0.49663  6.6661  -2.1598 -4.0360 -1.3179  0.76347\nHSPC_031 -1.0387 -5.81508  6.23710 -1.9101 10.224710  4.6615  2.47881   1.67633 -4.07955 -7.6437 -6.53825  -4.78450  1.4944 14.043554  0.43717 -2.46710 14.2073 -11.3719 -9.6034 -9.2047 -4.13460\nHSPC_037  1.5760 -3.89167 -3.24755 -3.5053 -8.775323  1.7835  0.44296   0.85686  0.13623 -1.8063  0.82291 -14.66814  1.0963  0.069053  2.66947  0.51324  5.0497   3.7888 -6.9892 -2.2889  0.13915\n              PC43   PC44    PC45     PC46     PC47     PC48     PC49     PC50\nHSPC_007 -3.642617 2.3962  4.7195  0.64813  2.23608  0.11513 -3.67102 -3.04973\nHSPC_013 -5.056999 1.8504 -1.4505  2.78728 -2.25562 -0.49966 -4.66937 -1.93109\nHSPC_019 -3.252537 3.4987  1.2089  3.95118  1.14975 -0.66164  2.54210 -9.56988\nHSPC_025 -2.772840 1.0145 -3.5630 -0.70085 -8.45979  0.23048 -0.27531  6.04259\nHSPC_031  0.087917 1.1393  7.9606  3.08551  0.87608 -2.49711  8.00412  0.62299\nHSPC_037  3.347148 7.4915  1.6934  7.40074  6.66899  1.43225 -8.25343 -2.52982\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nNow, let’s compute a UMAP embedding from this PCA and compare it to the PCA embedding.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\numap &lt;- uwot::umap(pca$x)\ncolnames(umap) &lt;- c('UMAP1', 'UMAP2')\nplot(pca$x[,1], pca$x[,2])\n\n\n\n\nplot(umap[,1], umap[,2])\n\n\n\n\n\n\n\n\n\nWe will see more advanced ways of reducing scRNAseq data dimensionality in the coming lectures and labs.\n\n6.3.2 scRNAseq in R\nSeurat is another very popular ecosystem to investigate scRNAseq data. It is primarily developed and maintained by the Sajita Lab. It originally begun as a single package aiming at encompassing “all” (most) aspects of scRNAseq analysis. However, it rapidly evolved in a much larger project, and now operates along with other “wrappers” and extensions. It also has a very extended support from the lab group. All in all, is provides a (somewhat) simple workflow to start investigating scRNAseq data.\nIt is important to chose one standard that you feel comfortable with yourself. Which standard provides the most intuitive approach for you? Do you prefer an “all-in-one, plug-n-play” workflow (Seurat-style), or a modular approach (Bioconductor-style)? Which documentation is easier to read for you, a central full-featured website with extensive examples (Seurat-style), or “programmatic”-style vignettes (Bioconductor-style)?\nThis course will mostly rely on Bioconductor-based methods, but sometimes use Seurat-based methods.s In the absence of coordination of data structures, the next best solution is to write functions to coerce an object from a certain class to another class (i.e. Seurat to SingleCellExperiment, or vice-versa). Luckily, this is quite straightforward in R for these 2 data classes:\n\n\n\nR\n\nsce_seurat &lt;- Seurat::as.Seurat(sce)\n\n\nWarning: Keys should be one or more alphanumeric characters followed by an underscore, setting key from DC to DC_\n\nsce\n\nclass: SingleCellExperiment \ndim: 500 1920 \nmetadata(0):\nassays(2): counts logcounts\nrownames(500): ENSMUSG00000076609 ENSMUSG00000021250 ... ENSMUSG00000026000 ENSMUSG00000005982\nrowData names(0):\ncolnames(1920): HSPC_007 HSPC_013 ... Prog_852 Prog_810\ncolData names(11): gate broad ... label sizeFactor\nreducedDimNames(1): diffusion\nmainExpName: endogenous\naltExpNames(0):\n\nsce_seurat\n\nAn object of class Seurat \n500 features across 1920 samples within 1 assay \nActive assay: endogenous (500 features, 0 variable features)\n 2 layers present: counts, data\n 1 dimensional reduction calculated: diffusion\n\nsce2 &lt;- Seurat::as.SingleCellExperiment(sce_seurat)\n\n\n\n\n\n\n\nQuestion\n\n\n\nDo you see any change between sce and the corresponding, “back-converted”, sce2 objects? Explain these differences.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nsce\n\n\nclass: SingleCellExperiment \ndim: 500 1920 \nmetadata(0):\nassays(2): counts logcounts\nrownames(500): ENSMUSG00000076609 ENSMUSG00000021250 ... ENSMUSG00000026000 ENSMUSG00000005982\nrowData names(0):\ncolnames(1920): HSPC_007 HSPC_013 ... Prog_852 Prog_810\ncolData names(11): gate broad ... label sizeFactor\nreducedDimNames(1): diffusion\nmainExpName: endogenous\naltExpNames(0):\n\nsce2\n\nclass: SingleCellExperiment \ndim: 500 1920 \nmetadata(0):\nassays(2): counts logcounts\nrownames(500): ENSMUSG00000076609 ENSMUSG00000021250 ... ENSMUSG00000026000 ENSMUSG00000005982\nrowData names(0):\ncolnames(1920): HSPC_007 HSPC_013 ... Prog_852 Prog_810\ncolData names(19): orig.ident nCount_endogenous ... sizeFactor ident\nreducedDimNames(1): DIFFUSION\nmainExpName: endogenous\naltExpNames(0):\n\n#\ncolData(sce)\n\nDataFrame with 1920 rows and 11 columns\n                gate       broad   broad.mpp        fine    fine.mpp     ESLAM      HSC1 projected             metrics       label sizeFactor\n         &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;logical&gt; &lt;logical&gt; &lt;logical&gt;         &lt;DataFrame&gt; &lt;character&gt;  &lt;numeric&gt;\nHSPC_007        HSPC          NA          NA          NA          NA     FALSE     FALSE     FALSE 194829:  5022:0:...        HSPC  0.0272469\nHSPC_013        HSPC        LMPP          NA        LMPP          NA     FALSE     FALSE     FALSE 110530: 15271:0:...        HSPC  0.0904215\nHSPC_019        HSPC        LMPP          NA          NA          NA     FALSE     FALSE     FALSE  86825:  2708:0:...        HSPC  0.0199211\nHSPC_025        HSPC         MPP        MPP1          NA          NA     FALSE     FALSE     FALSE 212206:107278:0:...        HSPC  0.5217920\nHSPC_031        HSPC         MPP       STHSC          NA          NA     FALSE     FALSE     FALSE 690411:227480:0:...        HSPC  1.1062306\n...              ...         ...         ...         ...         ...       ...       ...       ...                 ...         ...        ...\nProg_834        Prog         CMP          NA          NA          NA     FALSE     FALSE     FALSE 471273:296060:0:...        Prog   1.668383\nProg_840        Prog         GMP          NA         GMP          NA     FALSE     FALSE     FALSE 421195:317394:0:...        Prog   1.728596\nProg_846        Prog         GMP          NA          NA          NA     FALSE     FALSE     FALSE 337564:253387:0:...        Prog   1.282827\nProg_852        Prog         MEP          NA         MEP          NA     FALSE     FALSE     FALSE 200193:136478:0:...        Prog   0.643172\nProg_810        Prog         CMP          NA         CMP          NA     FALSE     FALSE     FALSE 857257:396247:0:...        Prog   2.614351\n\ncolData(sce2)\n\nDataFrame with 1920 rows and 19 columns\n         orig.ident nCount_endogenous nFeature_endogenous        gate       broad   broad.mpp        fine    fine.mpp     ESLAM      HSC1 projected metrics.X__no_feature metrics.X__ambiguous\n           &lt;factor&gt;         &lt;numeric&gt;           &lt;integer&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;logical&gt; &lt;logical&gt; &lt;logical&gt;             &lt;numeric&gt;            &lt;numeric&gt;\nHSPC_007       HSPC              1262                 381        HSPC          NA          NA          NA          NA     FALSE     FALSE     FALSE                194829                 5022\nHSPC_013       HSPC              5903                 409        HSPC        LMPP          NA        LMPP          NA     FALSE     FALSE     FALSE                110530                15271\nHSPC_019       HSPC              1002                 355        HSPC        LMPP          NA          NA          NA     FALSE     FALSE     FALSE                 86825                 2708\nHSPC_025       HSPC             57990                 433        HSPC         MPP        MPP1          NA          NA     FALSE     FALSE     FALSE                212206               107278\nHSPC_031       HSPC            118570                 435        HSPC         MPP       STHSC          NA          NA     FALSE     FALSE     FALSE                690411               227480\n...             ...               ...                 ...         ...         ...         ...         ...         ...       ...       ...       ...                   ...                  ...\nProg_834       Prog            185729                 476        Prog         CMP          NA          NA          NA     FALSE     FALSE     FALSE                471273               296060\nProg_840       Prog            245357                 484        Prog         GMP          NA         GMP          NA     FALSE     FALSE     FALSE                421195               317394\nProg_846       Prog            198660                 483        Prog         GMP          NA          NA          NA     FALSE     FALSE     FALSE                337564               253387\nProg_852       Prog             56540                 463        Prog         MEP          NA         MEP          NA     FALSE     FALSE     FALSE                200193               136478\nProg_810       Prog            266950                 480        Prog         CMP          NA         CMP          NA     FALSE     FALSE     FALSE                857257               396247\n         metrics.X__too_low_aQual metrics.X__not_aligned metrics.X__alignment_not_unique       label sizeFactor                ident\n                        &lt;numeric&gt;              &lt;numeric&gt;                       &lt;numeric&gt; &lt;character&gt;  &lt;numeric&gt;             &lt;factor&gt;\nHSPC_007                        0                5820455                               0        HSPC  0.0272469 SingleCellExperiment\nHSPC_013                        0                1562724                               0        HSPC  0.0904215 SingleCellExperiment\nHSPC_019                        0                1407254                               0        HSPC  0.0199211 SingleCellExperiment\nHSPC_025                        0                1810368                               0        HSPC  0.5217920 SingleCellExperiment\nHSPC_031                        0                6097116                               0        HSPC  1.1062306 SingleCellExperiment\n...                           ...                    ...                             ...         ...        ...                  ...\nProg_834                        0                4312094                               0        Prog   1.668383 SingleCellExperiment\nProg_840                        0                3770447                               0        Prog   1.728596 SingleCellExperiment\nProg_846                        0                2549458                               0        Prog   1.282827 SingleCellExperiment\nProg_852                        0                1442745                               0        Prog   0.643172 SingleCellExperiment\nProg_810                        0                4518455                               0        Prog   2.614351 SingleCellExperiment\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nTry and access the underlying raw or normalized data from the sce_seurat object. How does it compare to data access from an SingleCellExperiment object?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncolnames(sce_seurat)\n\n\n   [1] \"HSPC_007\"   \"HSPC_013\"   \"HSPC_019\"   \"HSPC_025\"   \"HSPC_031\"   \"HSPC_037\"   \"LT-HSC_001\" \"HSPC_001\"   \"HSPC_008\"   \"HSPC_014\"   \"HSPC_020\"   \"HSPC_026\"   \"HSPC_032\"   \"HSPC_038\"  \n  [15] \"LT-HSC_002\" \"HSPC_002\"   \"HSPC_009\"   \"HSPC_015\"   \"HSPC_021\"   \"HSPC_027\"   \"HSPC_033\"   \"HSPC_039\"   \"LT-HSC_003\" \"HSPC_003\"   \"HSPC_010\"   \"HSPC_016\"   \"HSPC_022\"   \"HSPC_028\"  \n  [29] \"HSPC_034\"   \"HSPC_040\"   \"LT-HSC_004\" \"HSPC_004\"   \"HSPC_011\"   \"HSPC_017\"   \"HSPC_023\"   \"HSPC_029\"   \"HSPC_035\"   \"HSPC_041\"   \"LT-HSC_005\" \"HSPC_005\"   \"HSPC_012\"   \"HSPC_018\"  \n  [43] \"HSPC_024\"   \"HSPC_030\"   \"HSPC_036\"   \"HSPC_042\"   \"LT-HSC_006\" \"HSPC_006\"   \"Prog_007\"   \"Prog_013\"   \"Prog_019\"   \"Prog_025\"   \"Prog_031\"   \"Prog_037\"   \"LT-HSC_007\" \"Prog_001\"  \n  [57] \"Prog_008\"   \"Prog_014\"   \"Prog_020\"   \"Prog_026\"   \"Prog_032\"   \"Prog_038\"   \"LT-HSC_008\" \"Prog_002\"   \"Prog_009\"   \"Prog_015\"   \"Prog_021\"   \"Prog_027\"   \"Prog_033\"   \"Prog_039\"  \n  [71] \"LT-HSC_009\" \"Prog_003\"   \"Prog_010\"   \"Prog_016\"   \"Prog_022\"   \"Prog_028\"   \"Prog_034\"   \"Prog_040\"   \"LT-HSC_010\" \"Prog_004\"   \"Prog_011\"   \"Prog_017\"   \"Prog_023\"   \"Prog_029\"  \n  [85] \"Prog_035\"   \"Prog_041\"   \"LT-HSC_011\" \"Prog_005\"   \"Prog_012\"   \"Prog_018\"   \"Prog_024\"   \"Prog_030\"   \"Prog_036\"   \"Prog_042\"   \"LT-HSC_012\" \"Prog_006\"   \"HSPC_049\"   \"HSPC_055\"  \n  [99] \"HSPC_061\"   \"HSPC_067\"   \"HSPC_073\"   \"HSPC_079\"   \"LT-HSC_013\" \"HSPC_043\"   \"HSPC_050\"   \"HSPC_056\"   \"HSPC_062\"   \"HSPC_068\"   \"HSPC_074\"   \"HSPC_080\"   \"LT-HSC_014\" \"HSPC_044\"  \n [113] \"HSPC_051\"   \"HSPC_057\"   \"HSPC_063\"   \"HSPC_069\"   \"HSPC_075\"   \"HSPC_081\"   \"LT-HSC_015\" \"HSPC_045\"   \"HSPC_052\"   \"HSPC_058\"   \"HSPC_064\"   \"HSPC_070\"   \"HSPC_076\"   \"HSPC_082\"  \n [127] \"LT-HSC_016\" \"HSPC_046\"   \"HSPC_053\"   \"HSPC_059\"   \"HSPC_065\"   \"HSPC_071\"   \"HSPC_077\"   \"HSPC_083\"   \"LT-HSC_017\" \"HSPC_047\"   \"HSPC_054\"   \"HSPC_060\"   \"HSPC_066\"   \"HSPC_072\"  \n [141] \"HSPC_078\"   \"HSPC_084\"   \"LT-HSC_018\" \"HSPC_048\"   \"Prog_049\"   \"Prog_055\"   \"Prog_061\"   \"Prog_067\"   \"Prog_073\"   \"Prog_079\"   \"LT-HSC_019\" \"Prog_043\"   \"Prog_050\"   \"Prog_056\"  \n [155] \"Prog_062\"   \"Prog_068\"   \"Prog_074\"   \"Prog_080\"   \"LT-HSC_020\" \"Prog_044\"   \"Prog_051\"   \"Prog_057\"   \"Prog_063\"   \"Prog_069\"   \"Prog_075\"   \"Prog_081\"   \"LT-HSC_021\" \"Prog_045\"  \n [169] \"Prog_052\"   \"Prog_058\"   \"Prog_064\"   \"Prog_070\"   \"Prog_076\"   \"Prog_082\"   \"LT-HSC_022\" \"Prog_046\"   \"Prog_053\"   \"Prog_059\"   \"Prog_065\"   \"Prog_071\"   \"Prog_077\"   \"Prog_083\"  \n [183] \"LT-HSC_023\" \"Prog_047\"   \"Prog_054\"   \"Prog_060\"   \"Prog_066\"   \"Prog_072\"   \"Prog_078\"   \"Prog_084\"   \"LT-HSC_024\" \"Prog_048\"   \"HSPC_091\"   \"HSPC_097\"   \"HSPC_103\"   \"HSPC_109\"  \n [197] \"HSPC_115\"   \"HSPC_121\"   \"LT-HSC_025\" \"HSPC_085\"   \"HSPC_092\"   \"HSPC_098\"   \"HSPC_104\"   \"HSPC_110\"   \"HSPC_116\"   \"HSPC_122\"   \"LT-HSC_026\" \"HSPC_086\"   \"HSPC_093\"   \"HSPC_099\"  \n [211] \"HSPC_105\"   \"HSPC_111\"   \"HSPC_117\"   \"HSPC_123\"   \"LT-HSC_027\" \"HSPC_087\"   \"HSPC_094\"   \"HSPC_100\"   \"HSPC_106\"   \"HSPC_112\"   \"HSPC_118\"   \"HSPC_124\"   \"LT-HSC_028\" \"HSPC_088\"  \n [225] \"HSPC_095\"   \"HSPC_101\"   \"HSPC_107\"   \"HSPC_113\"   \"HSPC_119\"   \"HSPC_125\"   \"LT-HSC_029\" \"HSPC_089\"   \"HSPC_096\"   \"HSPC_102\"   \"HSPC_108\"   \"HSPC_114\"   \"HSPC_120\"   \"HSPC_126\"  \n [239] \"LT-HSC_030\" \"HSPC_090\"   \"Prog_091\"   \"Prog_097\"   \"Prog_103\"   \"Prog_109\"   \"Prog_115\"   \"Prog_121\"   \"LT-HSC_031\" \"Prog_085\"   \"Prog_092\"   \"Prog_098\"   \"Prog_104\"   \"Prog_110\"  \n [253] \"Prog_116\"   \"Prog_122\"   \"LT-HSC_032\" \"Prog_086\"   \"Prog_093\"   \"Prog_099\"   \"Prog_105\"   \"Prog_111\"   \"Prog_117\"   \"Prog_123\"   \"LT-HSC_033\" \"Prog_087\"   \"Prog_094\"   \"Prog_100\"  \n [267] \"Prog_106\"   \"Prog_112\"   \"Prog_118\"   \"Prog_124\"   \"LT-HSC_034\" \"Prog_088\"   \"Prog_095\"   \"Prog_101\"   \"Prog_107\"   \"Prog_113\"   \"Prog_119\"   \"Prog_125\"   \"LT-HSC_035\" \"Prog_089\"  \n [281] \"Prog_096\"   \"Prog_102\"   \"Prog_108\"   \"Prog_114\"   \"Prog_120\"   \"Prog_126\"   \"LT-HSC_036\" \"Prog_090\"   \"HSPC_133\"   \"HSPC_139\"   \"HSPC_145\"   \"HSPC_151\"   \"HSPC_157\"   \"HSPC_163\"  \n [295] \"LT-HSC_037\" \"HSPC_127\"   \"HSPC_134\"   \"HSPC_140\"   \"HSPC_146\"   \"HSPC_152\"   \"HSPC_158\"   \"HSPC_164\"   \"LT-HSC_038\" \"HSPC_128\"   \"HSPC_135\"   \"HSPC_141\"   \"HSPC_147\"   \"HSPC_153\"  \n [309] \"HSPC_159\"   \"HSPC_165\"   \"LT-HSC_039\" \"HSPC_129\"   \"HSPC_136\"   \"HSPC_142\"   \"HSPC_148\"   \"HSPC_154\"   \"HSPC_160\"   \"HSPC_166\"   \"LT-HSC_040\" \"HSPC_130\"   \"HSPC_137\"   \"HSPC_143\"  \n [323] \"HSPC_149\"   \"HSPC_155\"   \"HSPC_161\"   \"HSPC_167\"   \"LT-HSC_041\" \"HSPC_131\"   \"HSPC_138\"   \"HSPC_144\"   \"HSPC_150\"   \"HSPC_156\"   \"HSPC_162\"   \"HSPC_168\"   \"LT-HSC_042\" \"HSPC_132\"  \n [337] \"Prog_133\"   \"Prog_139\"   \"Prog_145\"   \"Prog_151\"   \"Prog_157\"   \"Prog_163\"   \"LT-HSC_043\" \"Prog_127\"   \"Prog_134\"   \"Prog_140\"   \"Prog_146\"   \"Prog_152\"   \"Prog_158\"   \"Prog_164\"  \n [351] \"LT-HSC_044\" \"Prog_128\"   \"Prog_135\"   \"Prog_141\"   \"Prog_147\"   \"Prog_153\"   \"Prog_159\"   \"Prog_165\"   \"LT-HSC_045\" \"Prog_129\"   \"Prog_136\"   \"Prog_142\"   \"Prog_148\"   \"Prog_154\"  \n [365] \"Prog_160\"   \"Prog_166\"   \"LT-HSC_046\" \"Prog_130\"   \"Prog_137\"   \"Prog_143\"   \"Prog_149\"   \"Prog_155\"   \"Prog_161\"   \"Prog_167\"   \"LT-HSC_047\" \"Prog_131\"   \"Prog_138\"   \"Prog_144\"  \n [379] \"Prog_150\"   \"Prog_156\"   \"Prog_162\"   \"Prog_168\"   \"LT-HSC_048\" \"Prog_132\"   \"HSPC_175\"   \"HSPC_181\"   \"HSPC_187\"   \"HSPC_193\"   \"HSPC_199\"   \"HSPC_205\"   \"LT-HSC_049\" \"HSPC_169\"  \n [393] \"HSPC_176\"   \"HSPC_182\"   \"HSPC_188\"   \"HSPC_194\"   \"HSPC_200\"   \"HSPC_206\"   \"LT-HSC_050\" \"HSPC_170\"   \"HSPC_177\"   \"HSPC_183\"   \"HSPC_189\"   \"HSPC_195\"   \"HSPC_201\"   \"HSPC_207\"  \n [407] \"LT-HSC_051\" \"HSPC_171\"   \"HSPC_178\"   \"HSPC_184\"   \"HSPC_190\"   \"HSPC_196\"   \"HSPC_202\"   \"HSPC_208\"   \"LT-HSC_052\" \"HSPC_172\"   \"HSPC_179\"   \"HSPC_185\"   \"HSPC_191\"   \"HSPC_197\"  \n [421] \"HSPC_203\"   \"HSPC_209\"   \"LT-HSC_053\" \"HSPC_173\"   \"HSPC_180\"   \"HSPC_186\"   \"HSPC_192\"   \"HSPC_198\"   \"HSPC_204\"   \"HSPC_210\"   \"LT-HSC_054\" \"HSPC_174\"   \"Prog_175\"   \"Prog_181\"  \n [435] \"Prog_187\"   \"Prog_193\"   \"Prog_199\"   \"Prog_205\"   \"LT-HSC_055\" \"Prog_169\"   \"Prog_176\"   \"Prog_182\"   \"Prog_188\"   \"Prog_194\"   \"Prog_200\"   \"Prog_206\"   \"LT-HSC_056\" \"Prog_170\"  \n [449] \"Prog_177\"   \"Prog_183\"   \"Prog_189\"   \"Prog_195\"   \"Prog_201\"   \"Prog_207\"   \"LT-HSC_057\" \"Prog_171\"   \"Prog_178\"   \"Prog_184\"   \"Prog_190\"   \"Prog_196\"   \"Prog_202\"   \"Prog_208\"  \n [463] \"LT-HSC_058\" \"Prog_172\"   \"Prog_179\"   \"Prog_185\"   \"Prog_191\"   \"Prog_197\"   \"Prog_203\"   \"Prog_209\"   \"LT-HSC_059\" \"Prog_173\"   \"Prog_180\"   \"Prog_186\"   \"Prog_192\"   \"Prog_198\"  \n [477] \"Prog_204\"   \"Prog_210\"   \"LT-HSC_060\" \"Prog_174\"   \"HSPC_217\"   \"HSPC_223\"   \"HSPC_229\"   \"HSPC_235\"   \"HSPC_241\"   \"HSPC_247\"   \"LT-HSC_061\" \"HSPC_211\"   \"HSPC_218\"   \"HSPC_224\"  \n [491] \"HSPC_230\"   \"HSPC_236\"   \"HSPC_242\"   \"HSPC_248\"   \"LT-HSC_062\" \"HSPC_212\"   \"HSPC_219\"   \"HSPC_225\"   \"HSPC_231\"   \"HSPC_237\"   \"HSPC_243\"   \"HSPC_249\"   \"LT-HSC_063\" \"HSPC_213\"  \n [505] \"HSPC_220\"   \"HSPC_226\"   \"HSPC_232\"   \"HSPC_238\"   \"HSPC_244\"   \"HSPC_250\"   \"LT-HSC_064\" \"HSPC_214\"   \"HSPC_221\"   \"HSPC_227\"   \"HSPC_233\"   \"HSPC_239\"   \"HSPC_245\"   \"HSPC_251\"  \n [519] \"LT-HSC_065\" \"HSPC_215\"   \"HSPC_222\"   \"HSPC_228\"   \"HSPC_234\"   \"HSPC_240\"   \"HSPC_246\"   \"HSPC_252\"   \"LT-HSC_066\" \"HSPC_216\"   \"Prog_217\"   \"Prog_223\"   \"Prog_229\"   \"Prog_235\"  \n [533] \"Prog_241\"   \"Prog_247\"   \"LT-HSC_067\" \"Prog_211\"   \"Prog_218\"   \"Prog_224\"   \"Prog_230\"   \"Prog_236\"   \"Prog_242\"   \"Prog_248\"   \"LT-HSC_068\" \"Prog_212\"   \"Prog_219\"   \"Prog_225\"  \n [547] \"Prog_231\"   \"Prog_237\"   \"Prog_243\"   \"Prog_249\"   \"LT-HSC_069\" \"Prog_213\"   \"Prog_220\"   \"Prog_226\"   \"Prog_232\"   \"Prog_238\"   \"Prog_244\"   \"Prog_250\"   \"LT-HSC_070\" \"Prog_214\"  \n [561] \"Prog_221\"   \"Prog_227\"   \"Prog_233\"   \"Prog_239\"   \"Prog_245\"   \"Prog_251\"   \"LT-HSC_071\" \"Prog_215\"   \"Prog_222\"   \"Prog_228\"   \"Prog_234\"   \"Prog_240\"   \"Prog_246\"   \"Prog_252\"  \n [575] \"LT-HSC_072\" \"Prog_216\"   \"HSPC_259\"   \"HSPC_265\"   \"HSPC_271\"   \"HSPC_277\"   \"HSPC_283\"   \"HSPC_289\"   \"LT-HSC_073\" \"HSPC_253\"   \"HSPC_260\"   \"HSPC_266\"   \"HSPC_272\"   \"HSPC_278\"  \n [589] \"HSPC_284\"   \"HSPC_290\"   \"LT-HSC_074\" \"HSPC_254\"   \"HSPC_261\"   \"HSPC_267\"   \"HSPC_273\"   \"HSPC_279\"   \"HSPC_285\"   \"HSPC_291\"   \"LT-HSC_075\" \"HSPC_255\"   \"HSPC_262\"   \"HSPC_268\"  \n [603] \"HSPC_274\"   \"HSPC_280\"   \"HSPC_286\"   \"HSPC_292\"   \"LT-HSC_076\" \"HSPC_256\"   \"HSPC_263\"   \"HSPC_269\"   \"HSPC_275\"   \"HSPC_281\"   \"HSPC_287\"   \"HSPC_293\"   \"LT-HSC_077\" \"HSPC_257\"  \n [617] \"HSPC_264\"   \"HSPC_270\"   \"HSPC_276\"   \"HSPC_282\"   \"HSPC_288\"   \"HSPC_294\"   \"LT-HSC_078\" \"HSPC_258\"   \"Prog_259\"   \"Prog_265\"   \"Prog_271\"   \"Prog_277\"   \"Prog_283\"   \"Prog_289\"  \n [631] \"LT-HSC_079\" \"Prog_253\"   \"Prog_260\"   \"Prog_266\"   \"Prog_272\"   \"Prog_278\"   \"Prog_284\"   \"Prog_290\"   \"LT-HSC_080\" \"Prog_254\"   \"Prog_261\"   \"Prog_267\"   \"Prog_273\"   \"Prog_279\"  \n [645] \"Prog_285\"   \"Prog_291\"   \"LT-HSC_081\" \"Prog_255\"   \"Prog_262\"   \"Prog_268\"   \"Prog_274\"   \"Prog_280\"   \"Prog_286\"   \"Prog_292\"   \"LT-HSC_082\" \"Prog_256\"   \"Prog_263\"   \"Prog_269\"  \n [659] \"Prog_275\"   \"Prog_281\"   \"Prog_287\"   \"Prog_293\"   \"LT-HSC_083\" \"Prog_257\"   \"Prog_264\"   \"Prog_270\"   \"Prog_276\"   \"Prog_282\"   \"Prog_288\"   \"Prog_294\"   \"LT-HSC_084\" \"Prog_258\"  \n [673] \"HSPC_301\"   \"HSPC_307\"   \"HSPC_313\"   \"HSPC_319\"   \"HSPC_325\"   \"HSPC_331\"   \"LT-HSC_085\" \"HSPC_295\"   \"HSPC_302\"   \"HSPC_308\"   \"HSPC_314\"   \"HSPC_320\"   \"HSPC_326\"   \"HSPC_332\"  \n [687] \"LT-HSC_086\" \"HSPC_296\"   \"HSPC_303\"   \"HSPC_309\"   \"HSPC_315\"   \"HSPC_321\"   \"HSPC_327\"   \"HSPC_333\"   \"LT-HSC_087\" \"HSPC_297\"   \"HSPC_304\"   \"HSPC_310\"   \"HSPC_316\"   \"HSPC_322\"  \n [701] \"HSPC_328\"   \"HSPC_334\"   \"LT-HSC_088\" \"HSPC_298\"   \"HSPC_305\"   \"HSPC_311\"   \"HSPC_317\"   \"HSPC_323\"   \"HSPC_329\"   \"HSPC_335\"   \"LT-HSC_089\" \"HSPC_299\"   \"HSPC_306\"   \"HSPC_312\"  \n [715] \"HSPC_318\"   \"HSPC_324\"   \"HSPC_330\"   \"HSPC_336\"   \"LT-HSC_090\" \"HSPC_300\"   \"Prog_301\"   \"Prog_307\"   \"Prog_313\"   \"Prog_319\"   \"Prog_325\"   \"Prog_331\"   \"LT-HSC_091\" \"Prog_295\"  \n [729] \"Prog_302\"   \"Prog_308\"   \"Prog_314\"   \"Prog_320\"   \"Prog_326\"   \"Prog_332\"   \"LT-HSC_092\" \"Prog_296\"   \"Prog_303\"   \"Prog_309\"   \"Prog_315\"   \"Prog_321\"   \"Prog_327\"   \"Prog_333\"  \n [743] \"LT-HSC_093\" \"Prog_297\"   \"Prog_304\"   \"Prog_310\"   \"Prog_316\"   \"Prog_322\"   \"Prog_328\"   \"Prog_334\"   \"LT-HSC_094\" \"Prog_298\"   \"Prog_305\"   \"Prog_311\"   \"Prog_317\"   \"Prog_323\"  \n [757] \"Prog_329\"   \"Prog_335\"   \"LT-HSC_095\" \"Prog_299\"   \"Prog_306\"   \"Prog_312\"   \"Prog_318\"   \"Prog_324\"   \"Prog_330\"   \"Prog_336\"   \"LT-HSC_096\" \"Prog_300\"   \"HSPC_343\"   \"HSPC_349\"  \n [771] \"HSPC_355\"   \"HSPC_361\"   \"HSPC_367\"   \"HSPC_373\"   \"LT-HSC_097\" \"HSPC_337\"   \"HSPC_344\"   \"HSPC_350\"   \"HSPC_356\"   \"HSPC_362\"   \"HSPC_368\"   \"HSPC_374\"   \"LT-HSC_098\" \"HSPC_338\"  \n [785] \"HSPC_345\"   \"HSPC_351\"   \"HSPC_357\"   \"HSPC_363\"   \"HSPC_369\"   \"HSPC_375\"   \"LT-HSC_099\" \"HSPC_339\"   \"HSPC_346\"   \"HSPC_352\"   \"HSPC_358\"   \"HSPC_364\"   \"HSPC_370\"   \"HSPC_376\"  \n [799] \"LT-HSC_100\" \"HSPC_340\"   \"HSPC_347\"   \"HSPC_353\"   \"HSPC_359\"   \"HSPC_365\"   \"HSPC_371\"   \"HSPC_377\"   \"LT-HSC_101\" \"HSPC_341\"   \"HSPC_348\"   \"HSPC_354\"   \"HSPC_360\"   \"HSPC_366\"  \n [813] \"HSPC_372\"   \"HSPC_378\"   \"LT-HSC_102\" \"HSPC_342\"   \"Prog_343\"   \"Prog_349\"   \"Prog_355\"   \"Prog_361\"   \"Prog_367\"   \"Prog_373\"   \"LT-HSC_103\" \"Prog_337\"   \"Prog_344\"   \"Prog_350\"  \n [827] \"Prog_356\"   \"Prog_362\"   \"Prog_368\"   \"Prog_374\"   \"LT-HSC_104\" \"Prog_338\"   \"Prog_345\"   \"Prog_351\"   \"Prog_357\"   \"Prog_363\"   \"Prog_369\"   \"Prog_375\"   \"LT-HSC_105\" \"Prog_339\"  \n [841] \"Prog_346\"   \"Prog_352\"   \"Prog_358\"   \"Prog_364\"   \"Prog_370\"   \"Prog_376\"   \"LT-HSC_106\" \"Prog_340\"   \"Prog_347\"   \"Prog_353\"   \"Prog_359\"   \"Prog_365\"   \"Prog_371\"   \"Prog_377\"  \n [855] \"LT-HSC_107\" \"Prog_341\"   \"Prog_348\"   \"Prog_354\"   \"Prog_360\"   \"Prog_366\"   \"Prog_372\"   \"Prog_378\"   \"LT-HSC_108\" \"Prog_342\"   \"HSPC_385\"   \"HSPC_391\"   \"HSPC_397\"   \"HSPC_403\"  \n [869] \"HSPC_409\"   \"HSPC_415\"   \"HSPC_421\"   \"HSPC_379\"   \"HSPC_386\"   \"HSPC_392\"   \"HSPC_398\"   \"HSPC_404\"   \"HSPC_410\"   \"HSPC_416\"   \"HSPC_422\"   \"HSPC_380\"   \"HSPC_387\"   \"HSPC_393\"  \n [883] \"HSPC_399\"   \"HSPC_405\"   \"HSPC_411\"   \"HSPC_417\"   \"HSPC_423\"   \"HSPC_381\"   \"HSPC_388\"   \"HSPC_394\"   \"HSPC_400\"   \"HSPC_406\"   \"HSPC_412\"   \"HSPC_418\"   \"HSPC_424\"   \"HSPC_382\"  \n [897] \"HSPC_389\"   \"HSPC_395\"   \"HSPC_401\"   \"HSPC_407\"   \"HSPC_413\"   \"HSPC_419\"   \"HSPC_425\"   \"HSPC_383\"   \"HSPC_390\"   \"HSPC_396\"   \"HSPC_402\"   \"HSPC_408\"   \"HSPC_414\"   \"HSPC_420\"  \n [911] \"HSPC_426\"   \"HSPC_384\"   \"Prog_385\"   \"Prog_391\"   \"Prog_397\"   \"Prog_403\"   \"Prog_409\"   \"Prog_415\"   \"Prog_421\"   \"Prog_379\"   \"Prog_386\"   \"Prog_392\"   \"Prog_398\"   \"Prog_404\"  \n [925] \"Prog_410\"   \"Prog_416\"   \"Prog_422\"   \"Prog_380\"   \"Prog_387\"   \"Prog_393\"   \"Prog_399\"   \"Prog_405\"   \"Prog_411\"   \"Prog_417\"   \"Prog_423\"   \"Prog_381\"   \"Prog_388\"   \"Prog_394\"  \n [939] \"Prog_400\"   \"Prog_406\"   \"Prog_412\"   \"Prog_418\"   \"Prog_424\"   \"Prog_382\"   \"Prog_389\"   \"Prog_395\"   \"Prog_401\"   \"Prog_407\"   \"Prog_413\"   \"Prog_419\"   \"Prog_425\"   \"Prog_383\"  \n [953] \"Prog_390\"   \"Prog_396\"   \"Prog_402\"   \"Prog_408\"   \"Prog_414\"   \"Prog_420\"   \"Prog_426\"   \"Prog_384\"   \"HSPC_433\"   \"HSPC_439\"   \"HSPC_445\"   \"HSPC_451\"   \"HSPC_457\"   \"HSPC_463\"  \n [967] \"LT-HSC_109\" \"HSPC_427\"   \"HSPC_434\"   \"HSPC_440\"   \"HSPC_446\"   \"HSPC_452\"   \"HSPC_458\"   \"HSPC_464\"   \"LT-HSC_110\" \"HSPC_428\"   \"HSPC_435\"   \"HSPC_441\"   \"HSPC_447\"   \"HSPC_453\"  \n [981] \"HSPC_459\"   \"HSPC_465\"   \"LT-HSC_111\" \"HSPC_429\"   \"HSPC_436\"   \"HSPC_442\"   \"HSPC_448\"   \"HSPC_454\"   \"HSPC_460\"   \"HSPC_466\"   \"LT-HSC_112\" \"HSPC_430\"   \"HSPC_437\"   \"HSPC_443\"  \n [995] \"HSPC_449\"   \"HSPC_455\"   \"HSPC_461\"   \"HSPC_467\"   \"LT-HSC_113\" \"HSPC_431\"   \"HSPC_438\"   \"HSPC_444\"   \"HSPC_450\"   \"HSPC_456\"   \"HSPC_462\"   \"HSPC_468\"   \"LT-HSC_114\" \"HSPC_432\"  \n[1009] \"Prog_433\"   \"Prog_439\"   \"Prog_445\"   \"Prog_451\"   \"Prog_457\"   \"Prog_463\"   \"LT-HSC_115\" \"Prog_427\"   \"Prog_434\"   \"Prog_440\"   \"Prog_446\"   \"Prog_452\"   \"Prog_458\"   \"Prog_464\"  \n[1023] \"LT-HSC_116\" \"Prog_428\"   \"Prog_435\"   \"Prog_441\"   \"Prog_447\"   \"Prog_453\"   \"Prog_459\"   \"Prog_465\"   \"LT-HSC_117\" \"Prog_429\"   \"Prog_436\"   \"Prog_442\"   \"Prog_448\"   \"Prog_454\"  \n[1037] \"Prog_460\"   \"Prog_466\"   \"LT-HSC_118\" \"Prog_430\"   \"Prog_437\"   \"Prog_443\"   \"Prog_449\"   \"Prog_455\"   \"Prog_461\"   \"Prog_467\"   \"LT-HSC_119\" \"Prog_431\"   \"Prog_438\"   \"Prog_444\"  \n[1051] \"Prog_450\"   \"Prog_456\"   \"Prog_462\"   \"Prog_468\"   \"LT-HSC_120\" \"Prog_432\"   \"HSPC_475\"   \"HSPC_481\"   \"HSPC_487\"   \"HSPC_493\"   \"HSPC_499\"   \"HSPC_505\"   \"LT-HSC_121\" \"HSPC_469\"  \n[1065] \"HSPC_476\"   \"HSPC_482\"   \"HSPC_488\"   \"HSPC_494\"   \"HSPC_500\"   \"HSPC_506\"   \"LT-HSC_122\" \"HSPC_470\"   \"HSPC_477\"   \"HSPC_483\"   \"HSPC_489\"   \"HSPC_495\"   \"HSPC_501\"   \"HSPC_507\"  \n[1079] \"LT-HSC_123\" \"HSPC_471\"   \"HSPC_478\"   \"HSPC_484\"   \"HSPC_490\"   \"HSPC_496\"   \"HSPC_502\"   \"HSPC_508\"   \"LT-HSC_124\" \"HSPC_472\"   \"HSPC_479\"   \"HSPC_485\"   \"HSPC_491\"   \"HSPC_497\"  \n[1093] \"HSPC_503\"   \"HSPC_509\"   \"LT-HSC_125\" \"HSPC_473\"   \"HSPC_480\"   \"HSPC_486\"   \"HSPC_492\"   \"HSPC_498\"   \"HSPC_504\"   \"HSPC_510\"   \"LT-HSC_126\" \"HSPC_474\"   \"Prog_475\"   \"Prog_481\"  \n[1107] \"Prog_487\"   \"Prog_493\"   \"Prog_499\"   \"Prog_505\"   \"LT-HSC_127\" \"Prog_469\"   \"Prog_476\"   \"Prog_482\"   \"Prog_488\"   \"Prog_494\"   \"Prog_500\"   \"Prog_506\"   \"LT-HSC_128\" \"Prog_470\"  \n[1121] \"Prog_477\"   \"Prog_483\"   \"Prog_489\"   \"Prog_495\"   \"Prog_501\"   \"Prog_507\"   \"LT-HSC_129\" \"Prog_471\"   \"Prog_478\"   \"Prog_484\"   \"Prog_490\"   \"Prog_496\"   \"Prog_502\"   \"Prog_508\"  \n[1135] \"LT-HSC_130\" \"Prog_472\"   \"Prog_479\"   \"Prog_485\"   \"Prog_491\"   \"Prog_497\"   \"Prog_503\"   \"Prog_509\"   \"LT-HSC_131\" \"Prog_473\"   \"Prog_480\"   \"Prog_486\"   \"Prog_492\"   \"Prog_498\"  \n[1149] \"Prog_504\"   \"Prog_510\"   \"LT-HSC_132\" \"Prog_474\"   \"HSPC_517\"   \"HSPC_523\"   \"HSPC_529\"   \"HSPC_535\"   \"HSPC_541\"   \"HSPC_547\"   \"LT-HSC_133\" \"HSPC_511\"   \"HSPC_518\"   \"HSPC_524\"  \n[1163] \"HSPC_530\"   \"HSPC_536\"   \"HSPC_542\"   \"HSPC_548\"   \"LT-HSC_134\" \"HSPC_512\"   \"HSPC_519\"   \"HSPC_525\"   \"HSPC_531\"   \"HSPC_537\"   \"HSPC_543\"   \"HSPC_549\"   \"LT-HSC_135\" \"HSPC_513\"  \n[1177] \"HSPC_520\"   \"HSPC_526\"   \"HSPC_532\"   \"HSPC_538\"   \"HSPC_544\"   \"HSPC_550\"   \"LT-HSC_136\" \"HSPC_514\"   \"HSPC_521\"   \"HSPC_527\"   \"HSPC_533\"   \"HSPC_539\"   \"HSPC_545\"   \"HSPC_551\"  \n[1191] \"LT-HSC_137\" \"HSPC_515\"   \"HSPC_522\"   \"HSPC_528\"   \"HSPC_534\"   \"HSPC_540\"   \"HSPC_546\"   \"HSPC_552\"   \"LT-HSC_138\" \"HSPC_516\"   \"Prog_517\"   \"Prog_523\"   \"Prog_529\"   \"Prog_535\"  \n[1205] \"Prog_541\"   \"Prog_547\"   \"LT-HSC_139\" \"Prog_511\"   \"Prog_518\"   \"Prog_524\"   \"Prog_530\"   \"Prog_536\"   \"Prog_542\"   \"Prog_548\"   \"LT-HSC_140\" \"Prog_512\"   \"Prog_519\"   \"Prog_525\"  \n[1219] \"Prog_531\"   \"Prog_537\"   \"Prog_543\"   \"Prog_549\"   \"LT-HSC_141\" \"Prog_513\"   \"Prog_520\"   \"Prog_526\"   \"Prog_532\"   \"Prog_538\"   \"Prog_544\"   \"Prog_550\"   \"LT-HSC_142\" \"Prog_514\"  \n[1233] \"Prog_521\"   \"Prog_527\"   \"Prog_533\"   \"Prog_539\"   \"Prog_545\"   \"Prog_551\"   \"LT-HSC_143\" \"Prog_515\"   \"Prog_522\"   \"Prog_528\"   \"Prog_534\"   \"Prog_540\"   \"Prog_546\"   \"Prog_552\"  \n[1247] \"LT-HSC_144\" \"Prog_516\"   \"HSPC_559\"   \"HSPC_565\"   \"HSPC_571\"   \"HSPC_577\"   \"HSPC_583\"   \"HSPC_589\"   \"LT-HSC_145\" \"HSPC_553\"   \"HSPC_560\"   \"HSPC_566\"   \"HSPC_572\"   \"HSPC_578\"  \n[1261] \"HSPC_584\"   \"HSPC_590\"   \"LT-HSC_146\" \"HSPC_554\"   \"HSPC_561\"   \"HSPC_567\"   \"HSPC_573\"   \"HSPC_579\"   \"HSPC_585\"   \"HSPC_591\"   \"LT-HSC_147\" \"HSPC_555\"   \"HSPC_562\"   \"HSPC_568\"  \n[1275] \"HSPC_574\"   \"HSPC_580\"   \"HSPC_586\"   \"HSPC_592\"   \"LT-HSC_148\" \"HSPC_556\"   \"HSPC_563\"   \"HSPC_569\"   \"HSPC_575\"   \"HSPC_581\"   \"HSPC_587\"   \"HSPC_593\"   \"LT-HSC_149\" \"HSPC_557\"  \n[1289] \"HSPC_564\"   \"HSPC_570\"   \"HSPC_576\"   \"HSPC_582\"   \"HSPC_588\"   \"HSPC_594\"   \"LT-HSC_150\" \"HSPC_558\"   \"Prog_559\"   \"Prog_565\"   \"Prog_571\"   \"Prog_577\"   \"Prog_583\"   \"Prog_589\"  \n[1303] \"LT-HSC_151\" \"Prog_553\"   \"Prog_560\"   \"Prog_566\"   \"Prog_572\"   \"Prog_578\"   \"Prog_584\"   \"Prog_590\"   \"LT-HSC_152\" \"Prog_554\"   \"Prog_561\"   \"Prog_567\"   \"Prog_573\"   \"Prog_579\"  \n[1317] \"Prog_585\"   \"Prog_591\"   \"LT-HSC_153\" \"Prog_555\"   \"Prog_562\"   \"Prog_568\"   \"Prog_574\"   \"Prog_580\"   \"Prog_586\"   \"Prog_592\"   \"LT-HSC_154\" \"Prog_556\"   \"Prog_563\"   \"Prog_569\"  \n[1331] \"Prog_575\"   \"Prog_581\"   \"Prog_587\"   \"Prog_593\"   \"LT-HSC_155\" \"Prog_557\"   \"Prog_564\"   \"Prog_570\"   \"Prog_576\"   \"Prog_582\"   \"Prog_588\"   \"Prog_594\"   \"LT-HSC_156\" \"Prog_558\"  \n[1345] \"HSPC_601\"   \"HSPC_607\"   \"HSPC_613\"   \"HSPC_619\"   \"HSPC_625\"   \"HSPC_631\"   \"LT-HSC_157\" \"HSPC_595\"   \"HSPC_602\"   \"HSPC_608\"   \"HSPC_614\"   \"HSPC_620\"   \"HSPC_626\"   \"HSPC_632\"  \n[1359] \"LT-HSC_158\" \"HSPC_596\"   \"HSPC_603\"   \"HSPC_609\"   \"HSPC_615\"   \"HSPC_621\"   \"HSPC_627\"   \"HSPC_633\"   \"LT-HSC_159\" \"HSPC_597\"   \"HSPC_604\"   \"HSPC_610\"   \"HSPC_616\"   \"HSPC_622\"  \n[1373] \"HSPC_628\"   \"HSPC_634\"   \"LT-HSC_160\" \"HSPC_598\"   \"HSPC_605\"   \"HSPC_611\"   \"HSPC_617\"   \"HSPC_623\"   \"HSPC_629\"   \"HSPC_635\"   \"LT-HSC_161\" \"HSPC_599\"   \"HSPC_606\"   \"HSPC_612\"  \n[1387] \"HSPC_618\"   \"HSPC_624\"   \"HSPC_630\"   \"HSPC_636\"   \"LT-HSC_162\" \"HSPC_600\"   \"Prog_601\"   \"Prog_607\"   \"Prog_613\"   \"Prog_619\"   \"Prog_625\"   \"Prog_631\"   \"LT-HSC_163\" \"Prog_595\"  \n[1401] \"Prog_602\"   \"Prog_608\"   \"Prog_614\"   \"Prog_620\"   \"Prog_626\"   \"Prog_632\"   \"LT-HSC_164\" \"Prog_596\"   \"Prog_603\"   \"Prog_609\"   \"Prog_615\"   \"Prog_621\"   \"Prog_627\"   \"Prog_633\"  \n[1415] \"LT-HSC_165\" \"Prog_597\"   \"Prog_604\"   \"Prog_610\"   \"Prog_616\"   \"Prog_622\"   \"Prog_628\"   \"Prog_634\"   \"LT-HSC_166\" \"Prog_598\"   \"Prog_605\"   \"Prog_611\"   \"Prog_617\"   \"Prog_623\"  \n[1429] \"Prog_629\"   \"Prog_635\"   \"LT-HSC_167\" \"Prog_599\"   \"Prog_606\"   \"Prog_612\"   \"Prog_618\"   \"Prog_624\"   \"Prog_630\"   \"Prog_636\"   \"LT-HSC_168\" \"Prog_600\"   \"HSPC_643\"   \"HSPC_649\"  \n[1443] \"HSPC_655\"   \"HSPC_661\"   \"HSPC_667\"   \"HSPC_673\"   \"LT-HSC_169\" \"HSPC_637\"   \"HSPC_644\"   \"HSPC_650\"   \"HSPC_656\"   \"HSPC_662\"   \"HSPC_668\"   \"HSPC_674\"   \"LT-HSC_170\" \"HSPC_638\"  \n[1457] \"HSPC_645\"   \"HSPC_651\"   \"HSPC_657\"   \"HSPC_663\"   \"HSPC_669\"   \"HSPC_675\"   \"LT-HSC_171\" \"HSPC_639\"   \"HSPC_646\"   \"HSPC_652\"   \"HSPC_658\"   \"HSPC_664\"   \"HSPC_670\"   \"HSPC_676\"  \n[1471] \"LT-HSC_172\" \"HSPC_640\"   \"HSPC_647\"   \"HSPC_653\"   \"HSPC_659\"   \"HSPC_665\"   \"HSPC_671\"   \"HSPC_677\"   \"LT-HSC_173\" \"HSPC_641\"   \"HSPC_648\"   \"HSPC_654\"   \"HSPC_660\"   \"HSPC_666\"  \n[1485] \"HSPC_672\"   \"HSPC_678\"   \"LT-HSC_174\" \"HSPC_642\"   \"Prog_643\"   \"Prog_649\"   \"Prog_655\"   \"Prog_661\"   \"Prog_667\"   \"Prog_673\"   \"LT-HSC_175\" \"Prog_637\"   \"Prog_644\"   \"Prog_650\"  \n[1499] \"Prog_656\"   \"Prog_662\"   \"Prog_668\"   \"Prog_674\"   \"LT-HSC_176\" \"Prog_638\"   \"Prog_645\"   \"Prog_651\"   \"Prog_657\"   \"Prog_663\"   \"Prog_669\"   \"Prog_675\"   \"LT-HSC_177\" \"Prog_639\"  \n[1513] \"Prog_646\"   \"Prog_652\"   \"Prog_658\"   \"Prog_664\"   \"Prog_670\"   \"Prog_676\"   \"LT-HSC_178\" \"Prog_640\"   \"Prog_647\"   \"Prog_653\"   \"Prog_659\"   \"Prog_665\"   \"Prog_671\"   \"Prog_677\"  \n[1527] \"LT-HSC_179\" \"Prog_641\"   \"Prog_648\"   \"Prog_654\"   \"Prog_660\"   \"Prog_666\"   \"Prog_672\"   \"Prog_678\"   \"LT-HSC_180\" \"Prog_642\"   \"HSPC_685\"   \"HSPC_691\"   \"HSPC_697\"   \"HSPC_703\"  \n[1541] \"HSPC_709\"   \"HSPC_715\"   \"LT-HSC_181\" \"HSPC_679\"   \"HSPC_686\"   \"HSPC_692\"   \"HSPC_698\"   \"HSPC_704\"   \"HSPC_710\"   \"HSPC_716\"   \"LT-HSC_182\" \"HSPC_680\"   \"HSPC_687\"   \"HSPC_693\"  \n[1555] \"HSPC_699\"   \"HSPC_705\"   \"HSPC_711\"   \"HSPC_717\"   \"LT-HSC_183\" \"HSPC_681\"   \"HSPC_688\"   \"HSPC_694\"   \"HSPC_700\"   \"HSPC_706\"   \"HSPC_712\"   \"HSPC_718\"   \"LT-HSC_184\" \"HSPC_682\"  \n[1569] \"HSPC_689\"   \"HSPC_695\"   \"HSPC_701\"   \"HSPC_707\"   \"HSPC_713\"   \"HSPC_719\"   \"LT-HSC_185\" \"HSPC_683\"   \"HSPC_690\"   \"HSPC_696\"   \"HSPC_702\"   \"HSPC_708\"   \"HSPC_714\"   \"HSPC_720\"  \n[1583] \"LT-HSC_186\" \"HSPC_684\"   \"Prog_685\"   \"Prog_691\"   \"Prog_697\"   \"Prog_703\"   \"Prog_709\"   \"Prog_715\"   \"LT-HSC_187\" \"Prog_679\"   \"Prog_686\"   \"Prog_692\"   \"Prog_698\"   \"Prog_704\"  \n[1597] \"Prog_710\"   \"Prog_716\"   \"LT-HSC_188\" \"Prog_680\"   \"Prog_687\"   \"Prog_693\"   \"Prog_699\"   \"Prog_705\"   \"Prog_711\"   \"Prog_717\"   \"LT-HSC_189\" \"Prog_681\"   \"Prog_688\"   \"Prog_694\"  \n[1611] \"Prog_700\"   \"Prog_706\"   \"Prog_712\"   \"Prog_718\"   \"LT-HSC_190\" \"Prog_682\"   \"Prog_689\"   \"Prog_695\"   \"Prog_701\"   \"Prog_707\"   \"Prog_713\"   \"Prog_719\"   \"LT-HSC_191\" \"Prog_683\"  \n[1625] \"Prog_690\"   \"Prog_696\"   \"Prog_702\"   \"Prog_708\"   \"Prog_714\"   \"Prog_720\"   \"LT-HSC_192\" \"Prog_684\"   \"HSPC_727\"   \"HSPC_733\"   \"HSPC_739\"   \"HSPC_745\"   \"HSPC_751\"   \"HSPC_757\"  \n[1639] \"LT-HSC_193\" \"HSPC_721\"   \"HSPC_728\"   \"HSPC_734\"   \"HSPC_740\"   \"HSPC_746\"   \"HSPC_752\"   \"HSPC_758\"   \"LT-HSC_194\" \"HSPC_722\"   \"HSPC_729\"   \"HSPC_735\"   \"HSPC_741\"   \"HSPC_747\"  \n[1653] \"HSPC_753\"   \"HSPC_759\"   \"LT-HSC_195\" \"HSPC_723\"   \"HSPC_730\"   \"HSPC_736\"   \"HSPC_742\"   \"HSPC_748\"   \"HSPC_754\"   \"HSPC_760\"   \"LT-HSC_196\" \"HSPC_724\"   \"HSPC_731\"   \"HSPC_737\"  \n[1667] \"HSPC_743\"   \"HSPC_749\"   \"HSPC_755\"   \"HSPC_761\"   \"LT-HSC_197\" \"HSPC_725\"   \"HSPC_732\"   \"HSPC_738\"   \"HSPC_744\"   \"HSPC_750\"   \"HSPC_756\"   \"HSPC_762\"   \"LT-HSC_198\" \"HSPC_726\"  \n[1681] \"Prog_727\"   \"Prog_733\"   \"Prog_739\"   \"Prog_745\"   \"Prog_751\"   \"Prog_757\"   \"LT-HSC_199\" \"Prog_721\"   \"Prog_728\"   \"Prog_734\"   \"Prog_740\"   \"Prog_746\"   \"Prog_752\"   \"Prog_758\"  \n[1695] \"LT-HSC_200\" \"Prog_722\"   \"Prog_729\"   \"Prog_735\"   \"Prog_741\"   \"Prog_747\"   \"Prog_753\"   \"Prog_759\"   \"LT-HSC_201\" \"Prog_723\"   \"Prog_730\"   \"Prog_736\"   \"Prog_742\"   \"Prog_748\"  \n[1709] \"Prog_754\"   \"Prog_760\"   \"LT-HSC_202\" \"Prog_724\"   \"Prog_731\"   \"Prog_737\"   \"Prog_743\"   \"Prog_749\"   \"Prog_755\"   \"Prog_761\"   \"LT-HSC_203\" \"Prog_725\"   \"Prog_732\"   \"Prog_738\"  \n[1723] \"Prog_744\"   \"Prog_750\"   \"Prog_756\"   \"Prog_762\"   \"LT-HSC_204\" \"Prog_726\"   \"HSPC_769\"   \"HSPC_775\"   \"HSPC_781\"   \"HSPC_787\"   \"HSPC_793\"   \"HSPC_799\"   \"LT-HSC_205\" \"HSPC_763\"  \n[1737] \"HSPC_770\"   \"HSPC_776\"   \"HSPC_782\"   \"HSPC_788\"   \"HSPC_794\"   \"HSPC_800\"   \"LT-HSC_206\" \"HSPC_764\"   \"HSPC_771\"   \"HSPC_777\"   \"HSPC_783\"   \"HSPC_789\"   \"HSPC_795\"   \"HSPC_801\"  \n[1751] \"LT-HSC_207\" \"HSPC_765\"   \"HSPC_772\"   \"HSPC_778\"   \"HSPC_784\"   \"HSPC_790\"   \"HSPC_796\"   \"HSPC_802\"   \"LT-HSC_208\" \"HSPC_766\"   \"HSPC_773\"   \"HSPC_779\"   \"HSPC_785\"   \"HSPC_791\"  \n[1765] \"HSPC_797\"   \"HSPC_803\"   \"LT-HSC_209\" \"HSPC_767\"   \"HSPC_774\"   \"HSPC_780\"   \"HSPC_786\"   \"HSPC_792\"   \"HSPC_798\"   \"HSPC_804\"   \"LT-HSC_210\" \"HSPC_768\"   \"Prog_769\"   \"Prog_775\"  \n[1779] \"Prog_781\"   \"Prog_787\"   \"Prog_793\"   \"Prog_799\"   \"LT-HSC_211\" \"Prog_763\"   \"Prog_770\"   \"Prog_776\"   \"Prog_782\"   \"Prog_788\"   \"Prog_794\"   \"Prog_800\"   \"LT-HSC_212\" \"Prog_764\"  \n[1793] \"Prog_771\"   \"Prog_777\"   \"Prog_783\"   \"Prog_789\"   \"Prog_795\"   \"Prog_801\"   \"LT-HSC_213\" \"Prog_765\"   \"Prog_772\"   \"Prog_778\"   \"Prog_784\"   \"Prog_790\"   \"Prog_796\"   \"Prog_802\"  \n[1807] \"LT-HSC_214\" \"Prog_766\"   \"Prog_773\"   \"Prog_779\"   \"Prog_785\"   \"Prog_791\"   \"Prog_797\"   \"Prog_803\"   \"LT-HSC_215\" \"Prog_767\"   \"Prog_774\"   \"Prog_780\"   \"Prog_786\"   \"Prog_792\"  \n[1821] \"Prog_798\"   \"Prog_804\"   \"LT-HSC_216\" \"Prog_768\"   \"HSPC_811\"   \"HSPC_817\"   \"HSPC_823\"   \"HSPC_829\"   \"HSPC_835\"   \"HSPC_841\"   \"HSPC_847\"   \"HSPC_805\"   \"HSPC_812\"   \"HSPC_818\"  \n[1835] \"HSPC_824\"   \"HSPC_830\"   \"HSPC_836\"   \"HSPC_842\"   \"HSPC_848\"   \"HSPC_806\"   \"HSPC_813\"   \"HSPC_819\"   \"HSPC_825\"   \"HSPC_831\"   \"HSPC_837\"   \"HSPC_843\"   \"HSPC_849\"   \"HSPC_807\"  \n[1849] \"HSPC_814\"   \"HSPC_820\"   \"HSPC_826\"   \"HSPC_832\"   \"HSPC_838\"   \"HSPC_844\"   \"HSPC_850\"   \"HSPC_808\"   \"HSPC_815\"   \"HSPC_821\"   \"HSPC_827\"   \"HSPC_833\"   \"HSPC_839\"   \"HSPC_845\"  \n[1863] \"HSPC_851\"   \"HSPC_809\"   \"HSPC_816\"   \"HSPC_822\"   \"HSPC_828\"   \"HSPC_834\"   \"HSPC_840\"   \"HSPC_846\"   \"HSPC_852\"   \"HSPC_810\"   \"Prog_811\"   \"Prog_817\"   \"Prog_823\"   \"Prog_829\"  \n[1877] \"Prog_835\"   \"Prog_841\"   \"Prog_847\"   \"Prog_805\"   \"Prog_812\"   \"Prog_818\"   \"Prog_824\"   \"Prog_830\"   \"Prog_836\"   \"Prog_842\"   \"Prog_848\"   \"Prog_806\"   \"Prog_813\"   \"Prog_819\"  \n[1891] \"Prog_825\"   \"Prog_831\"   \"Prog_837\"   \"Prog_843\"   \"Prog_849\"   \"Prog_807\"   \"Prog_814\"   \"Prog_820\"   \"Prog_826\"   \"Prog_832\"   \"Prog_838\"   \"Prog_844\"   \"Prog_850\"   \"Prog_808\"  \n[1905] \"Prog_815\"   \"Prog_821\"   \"Prog_827\"   \"Prog_833\"   \"Prog_839\"   \"Prog_845\"   \"Prog_851\"   \"Prog_809\"   \"Prog_816\"   \"Prog_822\"   \"Prog_828\"   \"Prog_834\"   \"Prog_840\"   \"Prog_846\"  \n[1919] \"Prog_852\"   \"Prog_810\"  \n\nncol(sce_seurat)\n\n[1] 1920\n\nnrow(sce_seurat)\n\n[1] 500\n\n# cells and features access\nhead(Seurat::Cells(sce_seurat))\n\n[1] \"HSPC_007\" \"HSPC_013\" \"HSPC_019\" \"HSPC_025\" \"HSPC_031\" \"HSPC_037\"\n\nhead(rownames(sce_seurat))\n\n[1] \"ENSMUSG00000076609\" \"ENSMUSG00000021250\" \"ENSMUSG00000076617\" \"ENSMUSG00000075602\" \"ENSMUSG00000006389\" \"ENSMUSG00000041481\"\n\n# cell data access\nhead(sce_seurat[[]])\n\n         orig.ident nCount_endogenous nFeature_endogenous gate broad broad.mpp fine fine.mpp ESLAM  HSC1 projected metrics.X__no_feature metrics.X__ambiguous metrics.X__too_low_aQual\nHSPC_007       HSPC              1262                 381 HSPC  &lt;NA&gt;      &lt;NA&gt; &lt;NA&gt;     &lt;NA&gt; FALSE FALSE     FALSE                194829                 5022                        0\nHSPC_013       HSPC              5903                 409 HSPC  LMPP      &lt;NA&gt; LMPP     &lt;NA&gt; FALSE FALSE     FALSE                110530                15271                        0\nHSPC_019       HSPC              1002                 355 HSPC  LMPP      &lt;NA&gt; &lt;NA&gt;     &lt;NA&gt; FALSE FALSE     FALSE                 86825                 2708                        0\nHSPC_025       HSPC             57990                 433 HSPC   MPP      MPP1 &lt;NA&gt;     &lt;NA&gt; FALSE FALSE     FALSE                212206               107278                        0\nHSPC_031       HSPC            118570                 435 HSPC   MPP     STHSC &lt;NA&gt;     &lt;NA&gt; FALSE FALSE     FALSE                690411               227480                        0\nHSPC_037       HSPC             53925                 445 HSPC   MPP     STHSC &lt;NA&gt;     &lt;NA&gt; FALSE FALSE     FALSE                242472               126874                        0\n         metrics.X__not_aligned metrics.X__alignment_not_unique label sizeFactor\nHSPC_007                5820455                               0  HSPC   0.027247\nHSPC_013                1562724                               0  HSPC   0.090422\nHSPC_019                1407254                               0  HSPC   0.019921\nHSPC_025                1810368                               0  HSPC   0.521792\nHSPC_031                6097116                               0  HSPC   1.106231\nHSPC_037                2267894                               0  HSPC   0.514315\n\nhead(sce_seurat$label)\n\nHSPC_007 HSPC_013 HSPC_019 HSPC_025 HSPC_031 HSPC_037 \n  \"HSPC\"   \"HSPC\"   \"HSPC\"   \"HSPC\"   \"HSPC\"   \"HSPC\" \n\n# Counts access\nSeurat::GetAssayData(object = sce_seurat, layer = \"counts\")[1:10, 1:10]\n\n10 x 10 sparse Matrix of class \"dgCMatrix\"\n\n\n  [[ suppressing 10 column names 'HSPC_007', 'HSPC_013', 'HSPC_019' ... ]]\n\n\n                                                            \nENSMUSG00000076609 30  16  7   17  19   11 1359   13  15   6\nENSMUSG00000021250  3   2  4    .   1    3  118    2  69  41\nENSMUSG00000076617 40  54 13   29 298  417 1107    9  16  15\nENSMUSG00000075602  3 248  7  537 640    7  300 1530 324 971\nENSMUSG00000006389  3   4  1 1171   6    2  271 5497 293 192\nENSMUSG00000041481  3   .  1    3   1    3  177    5   1 192\nENSMUSG00000024190  1  29  1 1733   1    5   20    3   1   1\nENSMUSG00000003949  4  15  3  175 915 1131   41 1465 330 258\nENSMUSG00000052684  1   4  2  144  82    5  142  578   .  78\nENSMUSG00000026358  .  27  6  344   3    9    3 3612 185   .\n\nSeurat::GetAssayData(object = sce_seurat, layer = \"data\")[1:10, 1:10]\n\n10 x 10 sparse Matrix of class \"dgCMatrix\"\n\n\n  [[ suppressing 10 column names 'HSPC_007', 'HSPC_013', 'HSPC_019' ... ]]\n\n\n                                                                                                 \nENSMUSG00000076609 10.1060  7.4753 8.4610  5.0695 4.18392  4.4846 13.0580  2.79276 4.9075  4.2566\nENSMUSG00000021250  6.7958  4.5310 7.6567  .      0.92901  2.7725  9.5341  0.93526 7.0711  6.9632\nENSMUSG00000076617 10.5207  9.2245 9.3522  5.8222 8.07886  9.6650 12.7621  2.35193 4.9976  5.5325\nENSMUSG00000075602  6.7958 11.4219 8.4610 10.0086 9.17877  3.8689 10.8791  9.44886 9.2939 11.5179\nENSMUSG00000006389  6.7958  5.4994 5.6780 11.1326 2.68343  2.2894 10.7325 11.29248 9.1491  9.1815\nENSMUSG00000041481  6.7958  .      5.6780  2.7548 0.92901  2.7725 10.1184  1.71395 1.5530  9.1815\nENSMUSG00000024190  5.2365  8.3297 5.6780 11.6979 0.92901  3.4225  6.9829  1.24388 1.5530  2.0068\nENSMUSG00000003949  7.2076  7.3828 7.2441  8.3940 9.69372 11.1033  8.0126  9.38632 9.3203  9.6071\nENSMUSG00000052684  5.2365  5.4994 6.6639  8.1136 6.23123  3.4225  9.8009  8.04786 .       7.8856\nENSMUSG00000026358  .       8.2269 8.2393  9.3669 1.89216  4.2094  4.3091 10.68693 8.4872  .     \n\n# Embeddings \nhead(Seurat::Embeddings(object = sce_seurat, reduction = \"diffusion\"))\n\n              DC_1       DC_2     DC_3\nHSPC_007        NA         NA       NA\nHSPC_013        NA         NA       NA\nHSPC_019        NA         NA       NA\nHSPC_025 -0.011016 -0.0014016 0.016446\nHSPC_031 -0.013784 -0.0110409 0.013672\nHSPC_037 -0.013780 -0.0033031 0.033327"
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html#reading-scrnaseq-data",
    "href": "content/day2/Lab3_Rbioc.html#reading-scrnaseq-data",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "\n6.4 Reading scRNAseq data",
    "text": "6.4 Reading scRNAseq data\n\n\n\n\n\n\nQuestion\n\n\n\nTry to load the raw 10X single-cell RNA-seq data downloaded yesterday (from Lier et al.) into a SingleCellExperiment object using DropletUtils package\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(SingleCellExperiment)\nsce &lt;- DropletUtils::read10xCounts('~/Share/data_wrangling/counts/outs/filtered_feature_bc_matrix.h5')\nsce\n\n\nclass: SingleCellExperiment \ndim: 32285 686 \nmetadata(1): Samples\nassays(1): counts\nrownames(32285): ENSMUSG00000051951 ENSMUSG00000089699 ... ENSMUSG00000095019 ENSMUSG00000095041\nrowData names(3): ID Symbol Type\ncolnames: NULL\ncolData names(2): Sample Barcode\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\n\ncolData(sce)\n\nDataFrame with 686 rows and 2 columns\n                    Sample            Barcode\n               &lt;character&gt;        &lt;character&gt;\n1   ~/Share/data_wrangli.. AAACCTGAGGGTCTCC-1\n2   ~/Share/data_wrangli.. AAACCTGCACGGCGTT-1\n3   ~/Share/data_wrangli.. AAACGGGTCTGCAAGT-1\n4   ~/Share/data_wrangli.. AAAGATGGTTCGAATC-1\n5   ~/Share/data_wrangli.. AAAGCAAAGGTGGGTT-1\n...                    ...                ...\n682 ~/Share/data_wrangli.. TTTCCTCAGACTCGGA-1\n683 ~/Share/data_wrangli.. TTTCCTCTCGGAGGTA-1\n684 ~/Share/data_wrangli.. TTTGTCAAGTGTCCCG-1\n685 ~/Share/data_wrangli.. TTTGTCACATGGAATA-1\n686 ~/Share/data_wrangli.. TTTGTCAGTCGAGATG-1\n\nrowData(sce)\n\nDataFrame with 32285 rows and 3 columns\n                                   ID      Symbol            Type\n                          &lt;character&gt; &lt;character&gt;     &lt;character&gt;\nENSMUSG00000051951 ENSMUSG00000051951        Xkr4 Gene Expression\nENSMUSG00000089699 ENSMUSG00000089699      Gm1992 Gene Expression\nENSMUSG00000102331 ENSMUSG00000102331     Gm19938 Gene Expression\nENSMUSG00000102343 ENSMUSG00000102343     Gm37381 Gene Expression\nENSMUSG00000025900 ENSMUSG00000025900         Rp1 Gene Expression\n...                               ...         ...             ...\nENSMUSG00000095523 ENSMUSG00000095523  AC124606.1 Gene Expression\nENSMUSG00000095475 ENSMUSG00000095475  AC133095.2 Gene Expression\nENSMUSG00000094855 ENSMUSG00000094855  AC133095.1 Gene Expression\nENSMUSG00000095019 ENSMUSG00000095019  AC234645.1 Gene Expression\nENSMUSG00000095041 ENSMUSG00000095041  AC149090.1 Gene Expression\n\n\n\n\n\n\n\nPublic single-cell RNA-seq data can be retrieved from within R directly, thanks to several data packages, for instance scRNAseq or HCAData.\n\n\n\n\n\n\nQuestion\n\n\n\nCheck out the He et al., Genome Biol. 2020 paper. Can you find a way to load the scRNAseq data from this paper without having to leave the R console?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\norgans &lt;- scRNAseq::HeOrganAtlasData(ensembl = TRUE)\n\n\nloading from cache\n\n\nWarning: Unable to map 1056 of 12021 requested IDs.\n\norgans\n\nclass: SingleCellExperiment \ndim: 10965 84363 \nmetadata(0):\nassays(1): counts\nrownames(10965): ENSG00000225880 ENSG00000188976 ... ENSG00000273748 ENSG00000271254\nrowData names(1): originalName\ncolnames(84363): AAACCTGAGACACTAA-1 AAACCTGAGCATGGCA-1 ... TTTGTCATCTCTAGGA-1 TTTGTCATCTGCGACG-1\ncolData names(10): Tissue nCount_RNA ... reclustered.broad reclustered.fine\nreducedDimNames(1): TSNE\nmainExpName: NULL\naltExpNames(0):\n\n\n\n\n\n\n\nThe interest of this approach is that one can recover a full-fledged SingleCellExperiment (often) provided by the authors of the corresponding study. This means that lots of information, such as batch ID, clustering, cell annotation, etc., may be readily available.\n\n\n\n\n\n\nQuestion\n\n\n\nCheck the data available for cells/features in the dataset from He et al..\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncolData(organs)\n\n\nDataFrame with 84363 rows and 10 columns\n                        Tissue nCount_RNA nFeature_RNA percent.mito RNA_snn_res.orig seurat_clusters Cell_type_in_each_tissue Cell_type_in_merged_data reclustered.broad   reclustered.fine\n                   &lt;character&gt;  &lt;integer&gt;    &lt;integer&gt;    &lt;numeric&gt;        &lt;integer&gt;       &lt;integer&gt;              &lt;character&gt;              &lt;character&gt;       &lt;character&gt;        &lt;character&gt;\nAAACCTGAGACACTAA-1     Bladder       1152          610    0.0789931                7              15         Monocyte Bladder                 Monocyte           Myeloid Classical_Mon_AQP9\nAAACCTGAGCATGGCA-1     Bladder       3551         1415    0.0568854               14               8   Macrophage HLA-DPB1_..          Macrophage C1QB           Myeloid               cDC2\nAAACCTGAGCTGAACG-1     Bladder       1842          632    0.0266015                4               1   T Cell IL7R_high Bla..              T Cell IL7R               CD4           TCM_KLF2\nAAACCTGCAAGCTGGA-1     Bladder       1599          890    0.0268918               13              13   Fibroblast APOD_high..         Fibroblast PTGDS            FibSmo    Fib_CHI3L1_high\nAAACCTGCATTACCTT-1     Bladder       1347          613    0.0541945                1               2   T Cell CCL5_high Bla..              T Cell XCL1                NA                 NA\n...                        ...        ...          ...          ...              ...             ...                      ...                      ...               ...                ...\nTTTGTCATCAGTTGAC-1     Trachea       3334         1461    0.0422915               13              36           B Cell Trachea             B Cell MS4A1      B_and_plasma       Memory_B_TNF\nTTTGTCATCATCATTC-1     Trachea       6634         2271    0.0611999                7               8   Macrophage/Monocyte ..          Macrophage C1QB           Myeloid           Mac_SPP1\nTTTGTCATCTACGAGT-1     Trachea       2255          769    0.2119734               13               2           B Cell Trachea              T Cell XCL1      B_and_plasma    Plasma_IGKV3-20\nTTTGTCATCTCTAGGA-1     Trachea       1568          832    0.0554847                0              21   CD8 T Cell CCL5_high..              T Cell CCL5               CD8           TRM_PRR4\nTTTGTCATCTGCGACG-1     Trachea       1907          999    0.0167803               18              20        NK/T Cell Trachea           NK/T Cell GNLY                NA                 NA\n\ntable(organs$Tissue)\n\n\n         Bladder            Blood Common.bile.duct        Esophagus            Heart            Liver       Lymph.node           Marrow           Muscle           Rectum             Skin \n            7572             1407             3160             9117             7881             2839             7771             3230             5732             6280             7710 \n Small.intestine           Spleen          Stomach          Trachea \n            4312             4512             5318             7522 \n\ntable(organs$reclustered.fine, organs$Tissue)\n\n                                               \n                                                Bladder Blood Common.bile.duct Esophagus Heart Liver Lymph.node Marrow Muscle Rectum Skin Small.intestine Spleen Stomach Trachea\n  Absorptive Cell                                     0     0                0         0     0     0          0      0      0      0    0             170      0       0       0\n  Basal Epithelial Cell APOE_high                     4     0                0         3     0     0          0      0      0      0  504               1      0       0       1\n  Basal Epithelial Cell IFITM1_high                   0     0                1         2     0     0          0      0      0      0    0               0      0       0     441\n  Basal Epithelial Cell MMP10_high                    0     0                0         0     0     0          0      0      0      0    0               0      0       0    1747\n  Basal Epithelial Cell POSTN_high                    0     0                0         0     0     0          0      0      0      0  545               0      0       0       0\n  Basal Epithelial Cell SERPINB3_high                 0     0                0         0     0     0          0      0      0      0    0               0      0       0     839\n  BEC_ACKR1                                         105     0                2       177   589     2          0      0    179     38   60               0      0       3      55\n  BEC_APOC1                                           0     0                0         0     3     2          0      0     49      0    0               0      0       0       0\n  BEC_CA4                                            13     0                1        13   824     9          0      0     53      6    3               0      0       1       7\n  BEC_CTSC                                           38     0                0        66    38     1          0      0     12      1 1058               0      0       0      70\n  BEC_FABP4                                           3     0                0         1    22     0          0      0    740      1    1               0      0       0       2\n  BEC_IGFBP3                                         19     0               13        63   201    27          0      0     41     18  245               0      0       7      56\n  BEC_PHLDA1                                         80     0                6       449    36     1          0      0      2      3   56               0      0       1      29\n  BEC_PRSS23                                          5     0               74         0     0     3          0      0      0      2    2               0      0       1       5\n  BEC_RTEL1-TNFRSF6B                                 15     0                2        25    14     3          0      0      3     10   11               0      0       7     642\n  BEC_TIMP1                                           0     0                0         0     0   157          0      0      0      0    0               0      0       1       0\n  BEC_TNFRSF4                                         0     0                0         4    22     3          0      0     65      0    3               0      0       0       1\n  cDC1                                               36     0                4         1     1     0         12      0      0      2    1               0      1       0       7\n  cDC2                                              122     0               12       121   117     3          0      2      4     62   13               1      3       5      18\n  Cholangiocyte FXYD2_high                            0     0              625         0     0     6          0      0      0      0    0               0      0       0       0\n  Cholangiocyte HIST1H2AM_high                        0     0               83         0     0     0          0      0      0      0    0               0      0       0       0\n  Classical_Mon_AQP9                                217     0               22        11    21   277          6      1     24     38   13               3     91      37     106\n  Classical_Mon_HCAR3                                13     0              307         2     3    23          3      0      0      4    3               0      0       2      33\n  Classical_Mon_S100A12                              26     1               12         3     9   130          1      0      7      3    9               0     81      21      11\n  Classical_Mon_S100A8                               11    69               67         0     1    86          0     45      1      3    3               0      9       2      14\n  Enterocyte APOA1_high                               0     0                0         0     0     0          0      0      0      0    0             654      0       0       3\n  Enterocyte APOB_high                                0     0                0         0     0     0          0      0      0      0    0             586      0       0       4\n  Enterocyte PCK1_high                                0     0                0         0     0     0          0      0      0      0    0             665      0       0       4\n  Enterocyte PRAP1_high                               0     0                0         0     0     0          0      0      0      0    0             556      0       0       1\n  Enterocyte RBP2_high                                0     0                0         0     0     0          0      0      0      0    0             412      0       0       1\n  Epithelial Cell DCD_high                            1     0                2        41     0     0          0      0      0      0   73               0      0       1       3\n  Epithelial Cell FABP4_high                        116     0                1         0     0     0          0      0      0      0    0               0      0       7       5\n  Fib_ANGPTL7_high                                   82     0               30        86    31     0          0      0      4      2   12               0      0       0      10\n  Fib_APOD_high                                       0     0                0         4     0     0          0      0    850      0    0               0      0       0       0\n  Fib_C1QTNF3_high                                    7     0                1      1291     2     0          0      0      5      3    2               0      0       4       0\n  Fib_CHI3L1_high                                   167     0               40        76     6     0          0      0      1     44    0               0      0       9     329\n  Fib_CRABP1_high                                     0     0                0         1     0     0          0      0      0      0    0               0      0       0     281\n  Fib_CXCL14_high                                    11     0                0         4     4     0          0      0      4      3  687               0      0       0       4\n  Fib_IGFBP3_high                                   635     0                0         2     0     0          0      0      0      6    0               0      0       2       0\n  Fib_IGFBP6_high                                     2     0                0       573     0     0          0      0      0      2    0               0      0       8       0\n  Fib_MT_high                                        22     0                1        74     4     0          0      0      0     21    8               0      0      10      13\n  Fib_PCOLCE2_high                                    4     0                0         0  1251     0          0      0      1      2    2               0      0       3       6\n  Fib_PTGDS_high                                      1     0                2       781     1     0          0      0      0      2    0               0      0       0       1\n  Fib_PTN_high                                        1     0                0        10  2467     1          0      0      1      4    6               0      0       2       7\n  Fib_SFRP2_high                                      5     0                0         0     0     0          0      0      0    328    0               0      0      10       0\n  Fib_SLIT3_high                                   1110     0                7       137    20     0          0      0      0     16    2               0      0      23       3\n  FibSmo_ADAMDEC1_high                                1     0                0         1     0     0          0      0      0     80    0               0      0      30       1\n  FibSmo_FOXF1_high                                 199     0                0         0     0     0          0      0      0      0    0               0      0       0       0\n  FibSmo_LINC01082_high                             922     0                0         0     0     0          0      0      0     10    0               0      0       2       0\n  FibSmo_SLC14A1_high                               841     0                1         0     0     0          0      0      0      0    0               0      0       1       0\n  FibSmo_THBS4_high                                   1     0                0         2     0     0          0      0      0    731    0               0      0       4       1\n  Follicular Epithelial Cell                          0     0                0         1     0     0          0      0      0      0  645               0      0       0       0\n  Goblet Cell                                         0     0                0         0     0     0          0      0      0    205    0              47      0       9      22\n  Granular Epithelial Cell                            0     0                0         0     0     0          0      0      0      0  224               0      0       0       0\n  Hepatic Oval Cell                                   0     0                4         0     0    48          0      0      0      0    0               0      0       0       0\n  High Proliferation Epithelial Cell TOP2A_high       0     0                0         0     0     0          0      0      0      0  229               1      0       0       0\n  High Proliferation Epithelial Cell UBE2C_high       0     0                1       416     0     0          0      0      0      0    6               0      0       0       2\n  IEL_TMIGD2                                          0     0                0         0     0     0          0      0      0      4    0               1      0     443       0\n  IEL_TRBV7-3                                         0     0                1         0     0     0          0      0      0      0    0               0      0       0     243\n  Intermediate_Mon_CCL20                              0     0                0         0     0     0          0      0      0    232    0               0      0       1       3\n  Intermediate_Mon_FN1                               33     0                2         1     9     7          0      0      4    432    0               4      1       4      50\n  Langerhans                                          0     0                0         0     0     0          0      0      0      0   72               0      0       0       0\n  LEC_CCL21                                          14     0                0        48     3    13          0      0      0      5   26               0      0       0      13\n  LEC_FCN3                                            0     0                0         0     0   129          0      0      0      0    0               0      0       0       0\n  Mac_APOE                                            5     0               59         0     0     3          0      0      0      0    1               0      0       1       5\n  Mac_FTL                                            15     2                4         2     3     5          0      2      1      1    0               2      4       0       5\n  Mac_HIST1H4C                                       10     0                2        12    11     0          0      0      1    110    2               0      0       0       1\n  Mac_IGFBP7                                          2     0                1         3    44     0          0      0     12      0    0               0      0       0       0\n  Mac_RNASE1                                        153     0                5       130   284     4          1      0     12     54   24               0      0       1      10\n  Mac_SDC3                                           23     0                2         3     3   385          3      6     11      1    5               0     99       2       5\n  Mac_SPARCL1                                         3     0                0         4    90     2          0      0     23      1    1               0      0       0       2\n  Mac_SPP1                                           28     0                3         1    83    12          0      0      2      9    0               0      0       0      31\n  MAIT_SLC4A10                                        4     0                7         0     0    53         17      0      0      7    1               7    126      23       2\n  Memory_B_AC079767.4                                 0     3                0         1     0     1         36     11      0      6    0               7    292      27       3\n  Memory_B_CRIP1                                      3     5                0         0     0     1         12      9      0    462    0              64    134     680      38\n  Memory_B_HSPA8                                     13     1                0         0     0    25       1579     11      0     17    0               2     86      14     104\n  Memory_B_LTB                                        1   173                0         0     0     5         43    376      0      4    0               3    127      49       4\n  Memory_B_TNF                                       12     0                0         0     0     1        826      2      0      8    0               1     15       7      38\n  Naive_B_ly_TCL1A                                    7     3                0         0     0    14       1992     10      0     12    0               3    162      30      20\n  Naive_B_TCL1A                                       1    12                0         0     0     0         59     44      0     22    0              11    343     221       1\n  Non_Classicial_Mon_FCGR3A                          57    11                3         4    13   152          0     85     68      5    6               0     20      11      12\n  Pit Mucosal Epithelial Cell                         1     0                0         0     0     0          0      0      0      0    0               0      0     446       0\n  Plasma_HIST1H4C                                     0    17                0         0     0     0          5     20      0      1    0               0    155       8       1\n  Plasma_IGHG1                                        1     7                0         2     0     2          2     12      0      3    0               0    122      14       2\n  Plasma_IGKV1-39                                     0     0                0         3     0     0          2      2      0     72    0               1      6      59       2\n  Plasma_IGKV3-15                                     0     1                0         0     0     0          1      1      0      1    0               2      4      71       2\n  Plasma_IGKV3-20                                     1     4                0        55     0     9         47      5      0    268    0              20     64     162      20\n  Plasma_IGLC2                                        0     1                0        36     0     1          5      2      0    249    0               3      6      54       5\n  Plasma_IGLV3-1                                      0     0                0         0     0     2          3      0      0      3    0               7      6     147       2\n  Secretory Epithelial Cell                           0     0                0        13     0     0          0      0      0      0    0               0      0       0     311\n  Simple Epithelial Cell                              0     0                1         0     0     0          0      0      0    535    0               0      0       1       1\n  Smo_CCL21_high                                    122     0               15       109    96     1          0      0      9      8  298               0      0       5      94\n  Smo_CREM_high                                      11     0               36         3     4    22          0      0      0    110    3               0      0       5       4\n  Smo_FABP4_high                                     21     0                2         6   150     0          0      0    460      0    1               0      0       0       0\n  Smo_MYH11_high                                    154     0                8       232   650     7          0      0    122     44  247               0      0       1     105\n  Spinous Epithelial Cell DMKN_high                   0     0                0         0     0     0          0      0      0      0  887               1      0       0       0\n  Spinous Epithelial Cell KRT1_high                   0     0                0         0     0     0          0      0      0      0  464               0      0       0       1\n  Spinous Epithelial Cell KRTDAP_high                 0     0                0         0     0     0          0      0      0      0  785               0      0       0       0\n  Squamous Epithelial Cell DST_high                   0     0                0       983     0     0          0      0      0      0    0               0      0       0       0\n  Squamous Epithelial Cell FABP5_high                 0     0                0       667     0     0          0      0      0      0    0               0      0       0       0\n  Squamous Epithelial Cell HSPA1A_high                0     0                0       422     0     0          0      0      0      0    2               0      0       0       0\n  Squamous Epithelial Cell KRT13_high                 0     0                0       964     0     0          0      0      0      0    0               0      0       0       0\n  Squamous Epithelial Cell KRT4_high                  0     0                0       653     0     0          0      0      0      0    0               0      0       0       0\n  Stem Cell                                           0     0                1         0     0     0          0      0      0      0   39              62      0       0       0\n  TCM_KLF2                                            8     6                0         0     4     3         12      8      9    181    1               7    705     170      14\n  TCM_STMN1                                          18     0                6         1     0    14       1341      1      0      2    0               0     42       1      36\n  TEFF_GNLY                                           0    20                0         0     0    12          0    196      8      1    1               0      6       1       3\n  TEFF_MT1E                                          37     0               33         3     1    38          3      1     95     24    3               1     21       5      41\n  TEFF_TRBV4-2                                        4     3                6         1     1    48          0    186      8     11    1               0    167      11       2\n  TEM_GIMAP4                                          3    43                9         0     2    59          9    654      3      2    0               3     26       2       2\n  TEM_GZMK                                           10    69                7         0     8    50         37    246      5    119    7               2    495     121      14\n  TEM_INFG                                           85     0               47         0    11   329        329      1      6      1    2               0     35       8      46\n  Th1_NKG7                                           35     8               24         2     1    29          2     45     61      2    4               0     38       0      31\n  TN_LINC00861                                        0   346                0         0     0    11         22    186      2      1    0               2     40       3       1\n  TN_SELL                                             0   210                0         0     0     3          9    109      0      0    0               0     15       0       0\n  TN/CM_GADD45B                                       1     0                9         0     0    11        179      0      0      0    0               0      2       2       3\n  TN/CM_ITGB1                                         8   283               13         0     7    11         17    225      1      3    0               1     40       3       5\n  TN/CM_KLF2                                          0     0                0         0     0     1         10      1      2     33    1               0    260       8       1\n  TN/CM_LEF1                                          8     0                2         0     0    12        582      0      0      0    0               0     15       0       7\n  Treg_CTLA4                                          3     1                5         0     1     3         64      0      1      9    1               1     27     139      19\n  TRM_GZMB                                            1     0                1         0     6     3          0      0      0     78    0              23      6     875       3\n  TRM_H2AFZ                                         882     2               32         7    12    16         88      1      3      6    5               0      9       6      44\n  TRM_HSPA1A                                         59     0             1072         6    11    18          4      2      2      9    3               5      0      10      43\n  TRM_LMNA                                            1     0                0         0     1     4          1      0      0    374    0              13     15     113       9\n  TRM_MT1E                                           42     1                1         1     0    20          0      0     22    189    0               0      2       2       3\n  TRM_MT1X                                            8     0                1         0     0     1          0      0      0    300    0               4      5      51       0\n  TRM_NABP1                                           1     0               54         0     0     0          1      0      0      0    2               0      0       0       2\n  TRM_PRR4                                           13     0                1        19     5     3          2      0      4      0    2               0      2       7     894\n  TRM_RGS1                                            0     0                1         0     0     1          1      0      0     10    0             565      8      91      18\n  TRM_TNF                                           362     8              202        12    14    89        290      0     22     11   18               0     46       2     171\n  TRM_TYMS                                            1     0                1         6     2    46          1      3      1      3    0               4      9       1       1\n  Tuft Cell                                           0     0                0         0     0     0          0      0      0      2    0             221      0       5       0"
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html#bonus",
    "href": "content/day2/Lab3_Rbioc.html#bonus",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "\n6.5 Bonus",
    "text": "6.5 Bonus\nTo compare the two different approaches, try preparing both a SingleCellExperiment or a Seurat object from scratch, using the matrix files generated in the previous lab. Read the documentation of the two related packages to understand how to do this.\nThis will be extensively covered in the next lab for everybody."
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html#session-info",
    "href": "content/day2/Lab3_Rbioc.html#session-info",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "\n6.6 Session info",
    "text": "6.6 Session info"
  },
  {
    "objectID": "content/day2/Lab4_data_wrangling_scRNAseq.html#introduction",
    "href": "content/day2/Lab4_data_wrangling_scRNAseq.html#introduction",
    "title": "\n7  Lab 4 - Single-cell RNA-seq data wrangling\n",
    "section": "\n7.1 Introduction",
    "text": "7.1 Introduction\nData produced in a single cell RNA-seq experiment has several interesting characteristics that make it distinct from data produced in a bulk population RNA-seq experiment.\nTwo characteristics that are important to keep in mind when working with scRNA-Seq are drop-out (the excessive amount of zeros due to limiting mRNA) and the potential for quality control (QC) metrics to be confounded with biology. This combined with the ability to measure heterogeniety from cells in samples has shifted the field away from the typical analysis in population-based RNA-Seq.\nHere we demonstrate some approaches to quality control, followed by identifying and analyzing cell subsets.\n\n7.1.1 Load necessary packages\nWhen loading libraries, we are asking R to load code for us written by someone else. It is a convenient way to leverage and reproduce methodology developed by others.\n\n\n\n\n\n\nQuestion\n\n\n\nFollowing the previous labs, load the necessary libraries for this analysis.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(SingleCellExperiment)\n\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following object is masked from 'package:dplyr':\n\n    count\n\n\nAttaching package: 'MatrixGenerics'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, colCounts, colCummaxs, colCummins, colCumprods, colCumsums, colDiffs, colIQRDiffs, colIQRs, colLogSumExps,\n    colMadDiffs, colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, colSums2, colTabulates,\n    colVarDiffs, colVars, colWeightedMads, colWeightedMeans, colWeightedMedians, colWeightedSds, colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, rowCollapse,\n    rowCounts, rowCummaxs, rowCummins, rowCumprods, rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, rowWeightedMads, rowWeightedMeans,\n    rowWeightedMedians, rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:lubridate':\n\n    intersect, setdiff, union\n\nThe following objects are masked from 'package:dplyr':\n\n    combine, intersect, setdiff, union\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted,\n    lapply, Map, mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, table, tapply, union, unique,\n    unsplit, which.max, which.min\n\nLoading required package: S4Vectors\n\nAttaching package: 'S4Vectors'\n\nThe following objects are masked from 'package:lubridate':\n\n    second, second&lt;-\n\nThe following objects are masked from 'package:dplyr':\n\n    first, rename\n\nThe following object is masked from 'package:tidyr':\n\n    expand\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\nLoading required package: IRanges\n\nAttaching package: 'IRanges'\n\nThe following object is masked from 'package:lubridate':\n\n    %within%\n\nThe following objects are masked from 'package:dplyr':\n\n    collapse, desc, slice\n\nThe following object is masked from 'package:purrr':\n\n    reduce\n\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with 'browseVignettes()'. To cite Bioconductor, see 'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: 'Biobase'\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\n\n\n\n\n\n\n\n7.1.2 Create a SingleCellExperiment object from scratch\nIn the previous lab, we have been working with airway object (a SummarizedExperiment object) and sce, a SingleCellExperiment object. We will now create a toy SingleCellExperiment object from scratch, using the SingleCellExperiment constructor.\nTo create a SingleCellExperiment object, we need to provide the following:\n\n\ncolData: a data frame (or tibble) with columns corresponding to cell metadata.\n\nrowData: a data frame (or tibble) with columns corresponding to gene metadata.\n\nassays: a list of matrices, each matrix corresponding to a different assay. The first matrix is typically the counts matrix.\n\n\n\n\nR\n\ncd &lt;- tibble(idx = paste0('cell', 1:100))  ## `cd` stands for colData\ncd\n\n\n# A tibble: 100 × 1\n   idx   \n   &lt;chr&gt; \n 1 cell1 \n 2 cell2 \n 3 cell3 \n 4 cell4 \n 5 cell5 \n 6 cell6 \n 7 cell7 \n 8 cell8 \n 9 cell9 \n10 cell10\n# ℹ 90 more rows\n\nrd &lt;- tibble(\n    gene_name = paste0('gene', 1:10),\n    gene_type = factor(rep(c('protein_coding', 'non_coding'), each = 5))\n) ## `rd` stands for rowData\nrd \n\n# A tibble: 10 × 2\n   gene_name gene_type     \n   &lt;chr&gt;     &lt;fct&gt;         \n 1 gene1     protein_coding\n 2 gene2     protein_coding\n 3 gene3     protein_coding\n 4 gene4     protein_coding\n 5 gene5     protein_coding\n 6 gene6     non_coding    \n 7 gene7     non_coding    \n 8 gene8     non_coding    \n 9 gene9     non_coding    \n10 gene10    non_coding    \n\ncnts &lt;- matrix(rpois(1000, 5), ncol = 100) ## `cnts` stands for counts\n\ndim(cd)\n\n[1] 100   1\n\ndim(rd)\n\n[1] 10  2\n\ndim(cnts)\n\n[1]  10 100\n\nnrow(cd) == ncol(cnts)\n\n[1] TRUE\n\nnrow(rd) == nrow(cnts)\n\n[1] TRUE\n\ntoy_sce &lt;- SingleCellExperiment(\n    colData = cd, \n    rowData = rd, \n    assays = list('counts' = cnts)\n)\ntoy_sce\n\nclass: SingleCellExperiment \ndim: 10 100 \nmetadata(0):\nassays(1): counts\nrownames: NULL\nrowData names(2): gene_name gene_type\ncolnames: NULL\ncolData names(1): idx\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\n\ncolData(toy_sce)\n\nDataFrame with 100 rows and 1 column\n            idx\n    &lt;character&gt;\n1         cell1\n2         cell2\n3         cell3\n4         cell4\n5         cell5\n...         ...\n96       cell96\n97       cell97\n98       cell98\n99       cell99\n100     cell100\n\nrowData(toy_sce)\n\nDataFrame with 10 rows and 2 columns\n     gene_name      gene_type\n   &lt;character&gt;       &lt;factor&gt;\n1        gene1 protein_coding\n2        gene2 protein_coding\n3        gene3 protein_coding\n4        gene4 protein_coding\n5        gene5 protein_coding\n6        gene6 non_coding    \n7        gene7 non_coding    \n8        gene8 non_coding    \n9        gene9 non_coding    \n10      gene10 non_coding    \n\nassays(toy_sce)\n\nList of length 1\nnames(1): counts\n\nassays(toy_sce)[[\"counts\"]][1:10, 1:10]\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\n [1,]   11    3    5    2    6    3    6    3   11     3\n [2,]    8    1    6    4    5    5    3    5    6     4\n [3,]    7    9    4    3    6    5    7    6    5     3\n [4,]    2    4    4    7    6    4    4    6    3     5\n [5,]    3    3    5    5    4    4    4    7    4     9\n [6,]    5    7    6    6    8    6    5    5    5     5\n [7,]    7    7    4    4    4    5    1    4    6     6\n [8,]    5    0    5    5    4    7    5    4    4     4\n [9,]    4    3    7    5    3    6    4    4    5     6\n[10,]    5    3    2    4    5    2    4    4    2     2\n\n\n\n7.1.3 Read in Pancreas counts matrix.\nWe will now analyze a real human pancreas scRNAseq dataset. It is freely available from GEO: link. We start by downloading the cell, features and counts matrix.\n\n\n\n\n\n\nQuestion\n\n\n\nInspect the GEO page and get the downloadable links for each file\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndownload.file('https://ftp.ncbi.nlm.nih.gov/geo/series/GSE114nnn/GSE114802/suppl/GSE114802_org4_barcodes.tsv.gz', 'GSE114802_org4_barcodes.tsv.gz')\ndownload.file('https://ftp.ncbi.nlm.nih.gov/geo/series/GSE114nnn/GSE114802/suppl/GSE114802_org4_genes.tsv.gz', 'GSE114802_org4_genes.tsv.gz')\ndownload.file('https://ftp.ncbi.nlm.nih.gov/geo/series/GSE114nnn/GSE114802/suppl/GSE114802_org4_counts.csv.gz', 'GSE114802_org4_counts.csv.gz')\n\n\n\n\n\n\n\nIn this dataset, the barcodes file contains the cell barcodes, the genes file contains the gene names, and the counts file contains the counts matrix. We can import the data into R using the read_tsv() and read_csv() functions (already available in the loaded tidyverse package).\nFor example, to read the barcodes file, we can use the following command:\n\n\n\nR\n\ncells &lt;- read_tsv('~/Share/GSE114802_org4_barcodes.tsv.gz', col_names = FALSE)\n\n\nRows: 1421 Columns: 1\n── Column specification ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (1): X1\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(cells)\n\n# A tibble: 6 × 1\n  X1                \n  &lt;chr&gt;             \n1 AAACCTGAGGCTCATT-1\n2 AAACCTGAGGTGCACA-1\n3 AAACCTGCAGGTGCCT-1\n4 AAACCTGGTTAGAACA-1\n5 AAACCTGTCACCACCT-1\n6 AAACCTGTCCGAGCCA-1\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nAlso read the genes and counts files into R.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngenes &lt;- read_tsv('~/Share/GSE114802_org4_genes.tsv.gz', col_names = FALSE)\n\n\nRows: 33694 Columns: 2\n── Column specification ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): X1, X2\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ngenes\n\n# A tibble: 33,694 × 2\n   X1              X2           \n   &lt;chr&gt;           &lt;chr&gt;        \n 1 ENSG00000243485 RP11-34P13.3 \n 2 ENSG00000237613 FAM138A      \n 3 ENSG00000186092 OR4F5        \n 4 ENSG00000238009 RP11-34P13.7 \n 5 ENSG00000239945 RP11-34P13.8 \n 6 ENSG00000239906 RP11-34P13.14\n 7 ENSG00000241599 RP11-34P13.9 \n 8 ENSG00000279928 FO538757.3   \n 9 ENSG00000279457 FO538757.2   \n10 ENSG00000228463 AP006222.2   \n# ℹ 33,684 more rows\n\ncounts &lt;- read_csv('~/Share/GSE114802_org4_counts.csv.gz', col_names = TRUE)\n\nNew names:\nRows: 33694 Columns: 1422\n── Column specification\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: \",\" chr\n(1): ...1 dbl (1421): AAACCTGAGGCTCATT-1, AAACCTGAGGTGCACA-1, AAACCTGCAGGTGCCT-1, AAACCTGGTTAGAACA-1, AAACCTGTCACCACCT-1, AAACCTGTCCGAGCCA-1, AAACCTGTCGTGACAT-1, AAACGGGAGTAGTGCG-1,\nAAACGGGCAGCGTTCG-1, AAAC...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\ncounts[1:10, 1:6]\n\n# A tibble: 10 × 6\n   ...1            `AAACCTGAGGCTCATT-1` `AAACCTGAGGTGCACA-1` `AAACCTGCAGGTGCCT-1` `AAACCTGGTTAGAACA-1` `AAACCTGTCACCACCT-1`\n   &lt;chr&gt;                          &lt;dbl&gt;                &lt;dbl&gt;                &lt;dbl&gt;                &lt;dbl&gt;                &lt;dbl&gt;\n 1 ENSG00000243485                    0                    0                    0                    0                    0\n 2 ENSG00000237613                    0                    0                    0                    0                    0\n 3 ENSG00000186092                    0                    0                    0                    0                    0\n 4 ENSG00000238009                    0                    0                    0                    0                    0\n 5 ENSG00000239945                    0                    0                    0                    0                    0\n 6 ENSG00000239906                    0                    0                    0                    0                    0\n 7 ENSG00000241599                    0                    0                    0                    0                    0\n 8 ENSG00000279928                    0                    0                    0                    0                    0\n 9 ENSG00000279457                    0                    0                    0                    0                    0\n10 ENSG00000228463                    0                    0                    3                    2                    0\n\n\n\n\n\nNote how the first column of the counts dataframe is the gene names. We will need to strip this column, and turn the data frame into a matrix.\n\n\n\nR\n\ncounts &lt;- counts[, -1]\ncounts &lt;- as(counts, 'matrix')\ncounts[1:10, 1:6]\n\n\n      AAACCTGAGGCTCATT-1 AAACCTGAGGTGCACA-1 AAACCTGCAGGTGCCT-1 AAACCTGGTTAGAACA-1 AAACCTGTCACCACCT-1 AAACCTGTCCGAGCCA-1\n [1,]                  0                  0                  0                  0                  0                  0\n [2,]                  0                  0                  0                  0                  0                  0\n [3,]                  0                  0                  0                  0                  0                  0\n [4,]                  0                  0                  0                  0                  0                  0\n [5,]                  0                  0                  0                  0                  0                  0\n [6,]                  0                  0                  0                  0                  0                  0\n [7,]                  0                  0                  0                  0                  0                  0\n [8,]                  0                  0                  0                  0                  0                  0\n [9,]                  0                  0                  0                  0                  0                  0\n[10,]                  0                  0                  3                  2                  0                  0\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCoerce the data into a SingleCellExperiment object.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nsce &lt;- SingleCellExperiment(\n    colData = cells, \n    rowData = genes, \n    assays = list('counts' = counts)\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nExamine the SingleCellExperiment object you’ve just created. Get an idea of the size of the dataset, the different data available, etc.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncolData(sce)\n\n\nDataFrame with 1421 rows and 1 column\n                                   X1\n                          &lt;character&gt;\nAAACCTGAGGCTCATT-1 AAACCTGAGGCTCATT-1\nAAACCTGAGGTGCACA-1 AAACCTGAGGTGCACA-1\nAAACCTGCAGGTGCCT-1 AAACCTGCAGGTGCCT-1\nAAACCTGGTTAGAACA-1 AAACCTGGTTAGAACA-1\nAAACCTGTCACCACCT-1 AAACCTGTCACCACCT-1\n...                               ...\nTTTGGTTTCGGTGTCG-1 TTTGGTTTCGGTGTCG-1\nTTTGTCAAGGATGGAA-1 TTTGTCAAGGATGGAA-1\nTTTGTCAGTACCTACA-1 TTTGTCAGTACCTACA-1\nTTTGTCAGTCTCACCT-1 TTTGTCAGTCTCACCT-1\nTTTGTCAGTGAAATCA-1 TTTGTCAGTGAAATCA-1\n\nrowData(sce)\n\nDataFrame with 33694 rows and 2 columns\n                   X1           X2\n          &lt;character&gt;  &lt;character&gt;\n1     ENSG00000243485 RP11-34P13.3\n2     ENSG00000237613      FAM138A\n3     ENSG00000186092        OR4F5\n4     ENSG00000238009 RP11-34P13.7\n5     ENSG00000239945 RP11-34P13.8\n...               ...          ...\n33690 ENSG00000277856   AC233755.2\n33691 ENSG00000275063   AC233755.1\n33692 ENSG00000271254   AC240274.1\n33693 ENSG00000277475   AC213203.1\n33694 ENSG00000268674      FAM231B\n\nmetadata(sce)\n\nlist()\n\ndim(sce)\n\n[1] 33694  1421\n\nassays(sce)\n\nList of length 1\nnames(1): counts\n\ncounts(sce)[1:10, 1:10]\n\n      AAACCTGAGGCTCATT-1 AAACCTGAGGTGCACA-1 AAACCTGCAGGTGCCT-1 AAACCTGGTTAGAACA-1 AAACCTGTCACCACCT-1 AAACCTGTCCGAGCCA-1 AAACCTGTCGTGACAT-1 AAACGGGAGTAGTGCG-1 AAACGGGCAGCGTTCG-1 AAACGGGCATGTTCCC-1\n [1,]                  0                  0                  0                  0                  0                  0                  0                  0                  0                  0\n [2,]                  0                  0                  0                  0                  0                  0                  0                  0                  0                  0\n [3,]                  0                  0                  0                  0                  0                  0                  0                  0                  0                  0\n [4,]                  0                  0                  0                  0                  0                  0                  0                  0                  0                  0\n [5,]                  0                  0                  0                  0                  0                  0                  0                  0                  0                  0\n [6,]                  0                  0                  0                  0                  0                  0                  0                  0                  0                  0\n [7,]                  0                  0                  0                  0                  0                  0                  0                  0                  0                  0\n [8,]                  0                  0                  0                  0                  0                  0                  0                  0                  0                  0\n [9,]                  0                  0                  0                  0                  0                  0                  0                  0                  0                  0\n[10,]                  0                  0                  3                  2                  0                  0                  0                  0                  1                  0\n\nreducedDims(sce)\n\nList of length 0\nnames(0):"
  },
  {
    "objectID": "content/day2/Lab4_data_wrangling_scRNAseq.html#basic-qcs",
    "href": "content/day2/Lab4_data_wrangling_scRNAseq.html#basic-qcs",
    "title": "\n7  Lab 4 - Single-cell RNA-seq data wrangling\n",
    "section": "\n7.2 Basic QCs",
    "text": "7.2 Basic QCs\nYou can learn a lot about your scRNA-seq data’s quality with simple plotting.\nLet’s do some plotting to look at the number of reads per cell, reads per genes, expressed genes per cell (often called complexity), and rarity of genes (cells expressing genes).\n\n\n\n\n\n\nQuestion\n\n\n\nPlot the number of counts per cell, the number of expressed genes per cell, and the relationship between the two.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncounts_per_cell &lt;- Matrix::colSums(counts)\ncounts_per_gene &lt;- Matrix::rowSums(counts)\ngenes_per_cell &lt;- Matrix::colSums(counts &gt; 0) # count gene only if it has non-zero reads mapped.\nhist(log10(counts_per_cell+1), main = '# of counts per cell', col = 'wheat')\n\n\n\n\nhist(log10(genes_per_cell+1), main = '# of expressed genes per cell', col = 'wheat')\n\n\n\nplot(counts_per_cell, genes_per_cell, log = 'xy', col = 'wheat')\ntitle('Counts vs genes per cell')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nLook at the summary counts for genes and cells. Can you plot a histogram of counts per gene in log10 scale?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncells_per_gene &lt;- Matrix::rowSums(counts &gt; 0) # only count cells where the gene is expressed\nhist(log10(cells_per_gene+1), main = '# of cells expressing each gene', col = 'wheat')\n\n\n\n\n\n\n\n\n\n\nA very useful plot is the distribution of library complexity in the sequencing run, typically shown as a lineplot of the number of detected UMI per cell, with cells ranked in decreasing order. One can use such plot to investigate observations (potential cells) that are actually failed libraries (lower end outliers) or observations that are cell doublets (higher end outliers).\n\n\n\n\n\n\nQuestion\n\n\n\nPlot cells ranked by their number of detected genes. Comment.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nplot(\n    sort(genes_per_cell, decreasing = TRUE), \n    xlab = 'cell', log = 'y', main = '# of genes per cell (ordered)', \n    type = 'l'\n)\n\n\n\n\n\n\n\n\n\n\nSeveral QCs can be automatically computed using quickPerCellQC().\n\n\n\nR\n\ntoy_sce &lt;- scuttle::quickPerCellQC(toy_sce)\ncolData(toy_sce)\n\n\nDataFrame with 91 rows and 7 columns\n            idx       sum  detected     total     low_lib_size   low_n_features   discard\n    &lt;character&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;outlier.filter&gt; &lt;outlier.filter&gt; &lt;logical&gt;\n1         cell1        57        10        57            FALSE            FALSE     FALSE\n2         cell3        48        10        48            FALSE            FALSE     FALSE\n3         cell4        45        10        45            FALSE            FALSE     FALSE\n4         cell5        51        10        51            FALSE            FALSE     FALSE\n5         cell6        47        10        47            FALSE            FALSE     FALSE\n...         ...       ...       ...       ...              ...              ...       ...\n87       cell94        45        10        45            FALSE            FALSE     FALSE\n88       cell95        44        10        44            FALSE            FALSE     FALSE\n89       cell96        46        10        46            FALSE            FALSE     FALSE\n90       cell97        57        10        57            FALSE            FALSE     FALSE\n91       cell99        41        10        41            FALSE            FALSE     FALSE\n\ntable(toy_sce$low_lib_size)\n\n\nFALSE \n   91 \n\ntable(toy_sce$low_n_features)\n\n\nFALSE \n   91 \n\n\n\n\n\n\n\n\nQuestion\n\n\n\nRun quickPerCellQC() on the SingleCellExperiment object. Inspect the new colData of the object.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nsce &lt;- scuttle::quickPerCellQC(sce)\ncolData(sce)\n\n\nDataFrame with 1420 rows and 7 columns\n                                   X1       sum  detected     total     low_lib_size   low_n_features   discard\n                          &lt;character&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;outlier.filter&gt; &lt;outlier.filter&gt; &lt;logical&gt;\nAAACCTGAGGCTCATT-1 AAACCTGAGGCTCATT-1     18836      4512     18836            FALSE            FALSE     FALSE\nAAACCTGAGGTGCACA-1 AAACCTGAGGTGCACA-1     22583      3915     22583            FALSE            FALSE     FALSE\nAAACCTGCAGGTGCCT-1 AAACCTGCAGGTGCCT-1     34931      6449     34931            FALSE            FALSE     FALSE\nAAACCTGGTTAGAACA-1 AAACCTGGTTAGAACA-1     14382      3910     14382            FALSE            FALSE     FALSE\nAAACCTGTCACCACCT-1 AAACCTGTCACCACCT-1     19542      4469     19542            FALSE            FALSE     FALSE\n...                               ...       ...       ...       ...              ...              ...       ...\nTTTGGTTTCGGTGTCG-1 TTTGGTTTCGGTGTCG-1    139350     10354    139350            FALSE            FALSE     FALSE\nTTTGTCAAGGATGGAA-1 TTTGTCAAGGATGGAA-1     10629      2382     10629            FALSE            FALSE     FALSE\nTTTGTCAGTACCTACA-1 TTTGTCAGTACCTACA-1     11836      3140     11836            FALSE            FALSE     FALSE\nTTTGTCAGTCTCACCT-1 TTTGTCAGTCTCACCT-1     19054      3316     19054            FALSE            FALSE     FALSE\nTTTGTCAGTGAAATCA-1 TTTGTCAGTGAAATCA-1     12646      3268     12646            FALSE            FALSE     FALSE"
  },
  {
    "objectID": "content/day2/Lab4_data_wrangling_scRNAseq.html#access-to-stored-informations",
    "href": "content/day2/Lab4_data_wrangling_scRNAseq.html#access-to-stored-informations",
    "title": "\n7  Lab 4 - Single-cell RNA-seq data wrangling\n",
    "section": "\n7.3 Access to stored informations",
    "text": "7.3 Access to stored informations\n\n7.3.1 Assay slots\nFor typical scRNA-seq experiments, a SingleCellExperiment can have multiple assays, corresponding to different metrics. The most basic one is counts.\nDifferent assays store different ‘transformations’ of the counts(e.g. `logcounts).\nFor example, one can compute mean-centered counts and store it in a new slot.\n\n\n\nR\n\nmean_centered_counts &lt;- scale(counts(toy_sce), center = TRUE, scale = FALSE)\nassay(toy_sce, 'mean_centered') &lt;- mean_centered_counts\nassays(toy_sce)\n\n\nList of length 2\nnames(2): counts mean_centered\n\nassay(toy_sce, 'mean_centered')[1:10, 1:10]\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\n [1,]  5.3  0.2 -2.5  0.9 -1.7  1.7 -1.8  5.9 -1.7   2.9\n [2,]  2.3  1.2 -0.5 -0.1  0.3 -1.3  0.2  0.9 -0.7  -1.1\n [3,]  1.3 -0.8 -1.5  0.9  0.3  2.7  1.2 -0.1 -1.7  -0.1\n [4,] -3.7 -0.8  2.5  0.9 -0.7 -0.3  1.2 -2.1  0.3   2.9\n [5,] -2.7  0.2  0.5 -1.1 -0.7 -0.3  2.2 -1.1  4.3  -1.1\n [6,] -0.7  1.2  1.5  2.9  1.3  0.7  0.2 -0.1  0.3   1.9\n [7,]  1.3 -0.8 -0.5 -1.1  0.3 -3.3 -0.8  0.9  1.3  -3.1\n [8,] -0.7  0.2  0.5 -1.1  2.3  0.7 -0.8 -1.1 -0.7   1.9\n [9,] -1.7  2.2  0.5 -2.1  1.3 -0.3 -0.8 -0.1  1.3  -1.1\n[10,] -0.7 -2.8 -0.5 -0.1 -2.7 -0.3 -0.8 -3.1 -2.7  -3.1\n\nmean(assay(toy_sce, 'mean_centered'))\n\n[1] 1.1712e-17\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nTry to manually compute logcounts from counts and store it in a new slot.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nassay(sce, 'logcounts') &lt;- log10(counts(sce) + 1)\nlogcounts(sce)[1:10, 1:10]\n\n\n      AAACCTGAGGCTCATT-1 AAACCTGAGGTGCACA-1 AAACCTGCAGGTGCCT-1 AAACCTGGTTAGAACA-1 AAACCTGTCACCACCT-1 AAACCTGTCCGAGCCA-1 AAACCTGTCGTGACAT-1 AAACGGGAGTAGTGCG-1 AAACGGGCAGCGTTCG-1 AAACGGGCATGTTCCC-1\n [1,]                  0                  0            0.00000            0.00000                  0                  0                  0                  0            0.00000                  0\n [2,]                  0                  0            0.00000            0.00000                  0                  0                  0                  0            0.00000                  0\n [3,]                  0                  0            0.00000            0.00000                  0                  0                  0                  0            0.00000                  0\n [4,]                  0                  0            0.00000            0.00000                  0                  0                  0                  0            0.00000                  0\n [5,]                  0                  0            0.00000            0.00000                  0                  0                  0                  0            0.00000                  0\n [6,]                  0                  0            0.00000            0.00000                  0                  0                  0                  0            0.00000                  0\n [7,]                  0                  0            0.00000            0.00000                  0                  0                  0                  0            0.00000                  0\n [8,]                  0                  0            0.00000            0.00000                  0                  0                  0                  0            0.00000                  0\n [9,]                  0                  0            0.00000            0.00000                  0                  0                  0                  0            0.00000                  0\n[10,]                  0                  0            0.60206            0.47712                  0                  0                  0                  0            0.30103                  0\n\n\n\n\n\n\n\n\n7.3.2 Embeddings\nEmbeddings allow for a representation of large-scale data (N cells x M genes) into smaller dimensions (e.g. 2-50 dimensions). Typical embeddings can be PCA, t-SNE, UMAP, etc… Many embeddings can be computed using run...() functions from Bioconductor packages (e.g. scran, scater, …).\nFor example, one can compute PCA and store it in a new slot.\n\n\n\nR\n\nlibrary(scater)\n\n\nLoading required package: scuttle\n\nlogcounts(toy_sce) &lt;- log10(counts(toy_sce) + 1)\ntoy_sce &lt;- scater::runPCA(toy_sce)\n\nWarning in check_numbers(k = k, nu = nu, nv = nv, limit = min(dim(x)) - : more singular values/vectors requested than available\n\n\nWarning in (function (A, nv = 5, nu = nv, maxit = 1000, work = nv + 7, reorth = TRUE, : You're computing too large a percentage of total singular values, use a standard svd instead.\n\n\nWarning in (function (A, nv = 5, nu = nv, maxit = 1000, work = nv + 7, reorth = TRUE, : did not converge--results might be invalid!; try increasing work or maxit\n\nreducedDims(toy_sce)\n\nList of length 1\nnames(1): PCA\n\nreducedDim(toy_sce, 'PCA')[1:10, ]\n\n             PC1        PC2       PC3       PC4        PC5       PC6        PC7       PC8        PC9\n [1,] -0.4269241  0.2770703  0.040464  0.011101 -0.0905776 -0.139943  0.0052699  0.061907  0.0949146\n [2,] -0.0752433 -0.1804089 -0.040888  0.221613  0.0017994 -0.070413  0.0074647  0.094725  0.0879006\n [3,]  0.1896939 -0.2637306  0.047464 -0.059461 -0.0294352  0.125050 -0.0538721  0.081399 -0.0419140\n [4,] -0.0052209  0.0461005 -0.143536 -0.142892 -0.1844590 -0.094570 -0.0690900 -0.014200  0.0205512\n [5,] -0.0369835 -0.1788274 -0.022743  0.101437  0.0400642 -0.027818  0.0733583  0.282297 -0.0056744\n [6,]  0.2805255  0.1934287 -0.157491  0.141569 -0.0850000 -0.115990  0.0619579  0.011684 -0.0102393\n [7,]  0.1219353 -0.0688337 -0.091505 -0.104105  0.0811481  0.057121  0.0157687  0.013568  0.1065238\n [8,] -0.3673286 -0.0019512 -0.119952  0.181115  0.0039182 -0.166871  0.0242721 -0.030501  0.0308548\n [9,] -0.0100844 -0.3204644 -0.060936  0.098437  0.2401735  0.090652 -0.0963534  0.011799  0.0153486\n[10,]  0.1970275 -0.1038143 -0.390062  0.317542 -0.2324288 -0.098581  0.1797298 -0.016561 -0.2208396\n\nplotReducedDim(toy_sce, 'PCA')\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nTry to compute PCA, t-SNE and UMAP embeddings of the pancreas dataset using runPCA(), runTSNE() and runUMAP() from scater package.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nsce &lt;- scater::runPCA(sce)\nplotReducedDim(sce, \"PCA\")\n\n\n\n\nsce &lt;- scater::runTSNE(sce)\nplotReducedDim(sce, \"TSNE\")\n\n\n\nsce &lt;- scater::runUMAP(sce)\nplotReducedDim(sce, \"UMAP\", colour_by = 'sum')\n\n\n\nplotReducedDim(sce, \"UMAP\", colour_by = 'detected')"
  },
  {
    "objectID": "content/day2/Lab4_data_wrangling_scRNAseq.html#filtering-cells-and-features",
    "href": "content/day2/Lab4_data_wrangling_scRNAseq.html#filtering-cells-and-features",
    "title": "\n7  Lab 4 - Single-cell RNA-seq data wrangling\n",
    "section": "\n7.4 Filtering cells and features",
    "text": "7.4 Filtering cells and features\n\n7.4.1 Pre-filtering\nFiltering operations are often performed on the SingleCellExperiment object, for example to remove low-quality cells (columns) or genes (rows).\nTo do this, one can use standard R syntax to subset the SingleCellExperiment object.\n\n\n\nR\n\ntoy_sce_filtered &lt;- toy_sce[rowData(toy_sce)$gene_type == 'protein_coding', toy_sce$sum &gt; 50]\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nFilter the SCE to only include cells that have a complexity of 2000 genes or more and genes that are are expressed in 10 or more cells.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nsce_filtered &lt;- sce[\n    Matrix::rowSums(counts(sce) &gt; 0) &gt; 10, \n    Matrix::colSums(counts(sce) &gt; 0) &gt; 2000\n]\nsce_filtered\n\n\nclass: SingleCellExperiment \ndim: 16606 1419 \nmetadata(0):\nassays(2): counts logcounts\nrownames: NULL\nrowData names(2): X1 X2\ncolnames(1419): AAACCTGAGGCTCATT-1 AAACCTGAGGTGCACA-1 ... TTTGTCAGTCTCACCT-1 TTTGTCAGTGAAATCA-1\ncolData names(7): X1 sum ... low_n_features discard\nreducedDimNames(3): PCA TSNE UMAP\nmainExpName: NULL\naltExpNames(1): ATAC_counts\n\n\n\n\n\n\n\nAlmost all our analysis will be on this single object, of class SingleCellExperiment. This object contains various “slots” that will store not only the raw count data, but also the results from various computations below. This has the advantage that we do not need to keep track of inidividual variables of interest - they can all be collapsed into a single object as long as these slots are pre-defined.\n\n7.4.2 Filtering low-quality cells: mitochondrial counts\nFor each cell, we can calculate the percentage of counts mapping on mitochondrial genes and store it in a column percent_mito in our colData().\n\n\n\nR\n\nrowData(sce_filtered)\n\n\nDataFrame with 16606 rows and 2 columns\n                   X1            X2\n          &lt;character&gt;   &lt;character&gt;\n1     ENSG00000279457    FO538757.2\n2     ENSG00000228463    AP006222.2\n3     ENSG00000237094 RP4-669L17.10\n4     ENSG00000237491 RP11-206L10.9\n5     ENSG00000225880     LINC00115\n...               ...           ...\n16602 ENSG00000198727        MT-CYB\n16603 ENSG00000276256    AC011043.1\n16604 ENSG00000273748    AL592183.1\n16605 ENSG00000278817    AC007325.4\n16606 ENSG00000271254    AC240274.1\n\nmito_genes &lt;- rownames(sce_filtered)[grep(pattern = \"^MT-\", x = rowData(sce_filtered)$X2)]\nmito_genes_counts &lt;- counts(sce_filtered)[mito_genes, ]\npercent_mito &lt;- colSums(mito_genes_counts) / sce_filtered$total\nhist(percent_mito*100, main = '% of total counts over mitochondrial genes', col = 'wheat')\n\n\n\ncolData(sce_filtered)$percent_mito &lt;- percent_mito\ntable(colData(sce_filtered)$percent_mito &gt; 0.1)\n\n\nFALSE \n 1419 \n\n\n\n\n\n\n\n\nQuestion\n\n\n\nRemove cells with a % of mitochondrial counts greater than 10%.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nsce_filtered &lt;- sce_filtered[\n    , \n    sce_filtered$percent_mito &lt;= 0.10\n]\nsce_filtered\n\n\nclass: SingleCellExperiment \ndim: 16606 1419 \nmetadata(0):\nassays(2): counts logcounts\nrownames: NULL\nrowData names(2): X1 X2\ncolnames(1419): AAACCTGAGGCTCATT-1 AAACCTGAGGTGCACA-1 ... TTTGTCAGTCTCACCT-1 TTTGTCAGTGAAATCA-1\ncolData names(8): X1 sum ... discard percent_mito\nreducedDimNames(3): PCA TSNE UMAP\nmainExpName: NULL\naltExpNames(1): ATAC_counts\n\n\n\n\n\n\n\n\n7.4.3 Checking housekeeping genes\nAnother metric we use is the number of house keeping genes expressed in a cell. These genes reflect commomn processes active in a cell and hence are a good global quality measure. They are also abundant and are usually steadliy expressed in cells, thus less sensitive to the high dropout.\nWe first load the list of housekeeping genes (from ~/Share/tirosh_house_keeping.txt), match them to the genes in the rowData of the SingleCellExperiment object (using match and rownames), remove NAs (genes not found in the rowData), and store the list of housekeeping genes in a new variable.\n\n\n\nR\n\n# Load the list of housekeeping genes\nhkgenes &lt;- read.table(\"~/Share/tirosh_house_keeping.txt\", skip = 2)\nhkgenes &lt;- as.vector(hkgenes$V1)\nhkgenes &lt;- rownames(sce_filtered)[match(hkgenes, rowData(sce_filtered)$X2)]\nhkgenes &lt;- hkgenes[!is.na(hkgenes)]\nhkgenes\n\n\nNULL\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCalculate the number of expressed housekeeping genes per cell (genes with a count &gt; 0) and store the number of expressed housekeeping genes per cell in colData.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncolData(sce_filtered)$n_expressed_hkgenes &lt;- Matrix::colSums(counts(sce_filtered)[hkgenes, ] &gt; 0)\ntable(colData(sce_filtered)$n_expressed_hkgenes)\n\n\n\n   0 \n1419 \n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nPlot (in a boxplot) the relationship between the # of detected housekeeping genes and the total UMI count (or # of detected genes) per cell. Comment.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncolData(sce_filtered)$n_expressed_hkgenes &lt;- Matrix::colSums(counts(sce_filtered)[hkgenes, ] &gt; 0)\nboxplot(colData(sce_filtered)$total ~ colData(sce_filtered)$n_expressed_hkgenes)\n\n\n\n\nboxplot(colData(sce_filtered)$detected ~ colData(sce_filtered)$n_expressed_hkgenes)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nRemove cells with a # of expressed housekeeping genes greater than 85.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nsce_filtered &lt;- sce_filtered[, sce_filtered$n_expressed_hkgenes &lt;= 85]\nsce_filtered\n\n\nclass: SingleCellExperiment \ndim: 16606 1419 \nmetadata(0):\nassays(2): counts logcounts\nrownames: NULL\nrowData names(2): X1 X2\ncolnames(1419): AAACCTGAGGCTCATT-1 AAACCTGAGGTGCACA-1 ... TTTGTCAGTCTCACCT-1 TTTGTCAGTGAAATCA-1\ncolData names(9): X1 sum ... percent_mito n_expressed_hkgenes\nreducedDimNames(3): PCA TSNE UMAP\nmainExpName: NULL\naltExpNames(1): ATAC_counts\n\n\n\n\n\n\n\n\n7.4.4 Checking gene set expression\nSometimes we want to ask what is the expression of a gene / a set of a genes across cells. This set of genes may make up a gene expression program we are interested in. Another benefit at looking at gene sets is it reduces the effects of drop outs.\nLet’s look at genes involved in the stress signature upon cell dissociation. We calculate these genes average expression levels on the single cell level.\n\n\n\nR\n\ngenes_dissoc &lt;- c(\"ATF3\", \"BTG2\", \"CEBPB\", \"CEBPD\", \"CXCL3\", \"CXCL2\", \"CXCL1\", \"DNAJA1\", \"DNAJB1\", \"DUSP1\", \"EGR1\", \"FOS\", \"FOSB\", \"HSP90AA1\", \"HSP90AB1\", \"HSPA1A\", \"HSPA1B\", \"HSPA1A\", \"HSPA1B\", \"HSPA8\", \"HSPB1\", \"HSPE1\", \"HSPH1\", \"ID3\", \"IER2\", \"JUN\", \"JUNB\", \"JUND\", \"MT1X\", \"NFKBIA\", \"NR4A1\", \"PPP1R15A\", \"SOCS3\", \"ZFP36\")\ngenes_dissoc &lt;- rownames(sce_filtered)[match(genes_dissoc, rowData(sce_filtered)$X2)]\ngenes_dissoc &lt;- unique(genes_dissoc[!is.na(genes_dissoc)])\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCalculate the average gene set expression for each cell.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nave_expr_genes_dissoc &lt;- colMeans(logcounts(sce_filtered[genes_dissoc, ]))\ncolData(sce_filtered)$ave_expr_genes_dissoc &lt;- ave_expr_genes_dissoc\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nPlot an embedding of the dataset, using a color scale representing the average expression of genes involved in the stress signature upon cell dissociation. Comment.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nplotReducedDim(sce_filtered, dimred = 'PCA', colour_by = 'ave_expr_genes_dissoc')"
  },
  {
    "objectID": "content/day2/Lab4_data_wrangling_scRNAseq.html#session-info",
    "href": "content/day2/Lab4_data_wrangling_scRNAseq.html#session-info",
    "title": "\n7  Lab 4 - Single-cell RNA-seq data wrangling\n",
    "section": "\n7.5 Session info",
    "text": "7.5 Session info\n\n\n─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.1 (2024-06-14)\n os       macOS Sonoma 14.6.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Paris\n date     2024-11-03\n pandoc   2.19.2 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n package              * version date (UTC) lib source\n abind                  1.4-8   2024-09-12 [1] CRAN (R 4.4.1)\n beachmat               2.20.0  2024-05-06 [1] Bioconduc~\n beeswarm               0.4.0   2021-06-01 [1] CRAN (R 4.4.0)\n Biobase              * 2.64.0  2024-04-30 [1] Bioconduc~\n BiocGenerics         * 0.50.0  2024-04-30 [1] Bioconduc~\n BiocNeighbors          1.22.0  2024-04-30 [1] Bioconduc~\n BiocParallel           1.38.0  2024-04-30 [1] Bioconduc~\n BiocSingular           1.20.0  2024-04-30 [1] Bioconduc~\n bit                    4.5.0   2024-09-20 [1] CRAN (R 4.4.1)\n bit64                  4.5.2   2024-09-22 [1] CRAN (R 4.4.1)\n cachem                 1.1.0   2024-05-16 [1] CRAN (R 4.4.0)\n cli                    3.6.3   2024-06-21 [1] CRAN (R 4.4.0)\n codetools              0.2-20  2024-03-31 [1] CRAN (R 4.4.1)\n colorspace             2.1-1   2024-07-26 [1] CRAN (R 4.4.0)\n cowplot                1.1.3   2024-01-22 [1] CRAN (R 4.4.0)\n crayon                 1.5.3   2024-06-20 [1] CRAN (R 4.4.0)\n DelayedArray           0.30.1  2024-05-30 [1] Bioconduc~\n DelayedMatrixStats     1.26.0  2024-04-30 [1] Bioconduc~\n devtools               2.4.5   2022-10-11 [1] CRAN (R 4.4.0)\n digest                 0.6.37  2024-08-19 [1] CRAN (R 4.4.1)\n dplyr                * 1.1.4   2023-11-17 [1] CRAN (R 4.4.0)\n ellipsis               0.3.2   2021-04-29 [1] CRAN (R 4.4.0)\n evaluate               1.0.1   2024-10-10 [1] CRAN (R 4.4.1)\n fansi                  1.0.6   2023-12-08 [1] CRAN (R 4.4.0)\n farver                 2.1.2   2024-05-13 [1] CRAN (R 4.4.0)\n fastmap                1.2.0   2024-05-15 [1] CRAN (R 4.4.0)\n FNN                    1.1.4.1 2024-09-22 [1] CRAN (R 4.4.1)\n forcats              * 1.0.0   2023-01-29 [1] CRAN (R 4.4.0)\n fs                     1.6.4   2024-04-25 [1] CRAN (R 4.4.0)\n generics               0.1.3   2022-07-05 [1] CRAN (R 4.4.0)\n GenomeInfoDb         * 1.40.1  2024-06-16 [1] Bioconduc~\n GenomeInfoDbData       1.2.12  2024-10-29 [1] Bioconductor\n GenomicRanges        * 1.56.2  2024-10-09 [1] Bioconduc~\n ggbeeswarm             0.7.2   2023-04-29 [1] CRAN (R 4.4.0)\n ggplot2              * 3.5.1   2024-04-23 [1] CRAN (R 4.4.0)\n ggrepel                0.9.6   2024-09-07 [1] CRAN (R 4.4.1)\n glue                   1.8.0   2024-09-30 [1] CRAN (R 4.4.1)\n gridExtra              2.3     2017-09-09 [1] CRAN (R 4.4.0)\n gtable                 0.3.6   2024-10-25 [1] CRAN (R 4.4.1)\n hms                    1.1.3   2023-03-21 [1] CRAN (R 4.4.0)\n htmltools              0.5.8.1 2024-04-04 [1] CRAN (R 4.4.0)\n htmlwidgets            1.6.4   2023-12-06 [1] CRAN (R 4.4.0)\n httpuv                 1.6.15  2024-03-26 [1] CRAN (R 4.4.0)\n httr                   1.4.7   2023-08-15 [1] CRAN (R 4.4.0)\n IRanges              * 2.38.1  2024-07-03 [1] Bioconduc~\n irlba                  2.3.5.1 2022-10-03 [1] CRAN (R 4.4.0)\n jsonlite               1.8.9   2024-09-20 [1] CRAN (R 4.4.1)\n knitr                  1.48    2024-07-07 [1] CRAN (R 4.4.0)\n labeling               0.4.3   2023-08-29 [1] CRAN (R 4.4.0)\n later                  1.3.2   2023-12-06 [1] CRAN (R 4.4.0)\n lattice                0.22-6  2024-03-20 [1] CRAN (R 4.4.1)\n lifecycle              1.0.4   2023-11-07 [1] CRAN (R 4.4.0)\n lubridate            * 1.9.3   2023-09-27 [1] CRAN (R 4.4.0)\n magrittr               2.0.3   2022-03-30 [1] CRAN (R 4.4.0)\n Matrix                 1.7-1   2024-10-18 [1] CRAN (R 4.4.1)\n MatrixGenerics       * 1.16.0  2024-04-30 [1] Bioconduc~\n matrixStats          * 1.4.1   2024-09-08 [1] CRAN (R 4.4.1)\n memoise                2.0.1   2021-11-26 [1] CRAN (R 4.4.0)\n mime                   0.12    2021-09-28 [1] CRAN (R 4.4.0)\n miniUI                 0.1.1.1 2018-05-18 [1] CRAN (R 4.4.0)\n munsell                0.5.1   2024-04-01 [1] CRAN (R 4.4.0)\n pillar                 1.9.0   2023-03-22 [1] CRAN (R 4.4.0)\n pkgbuild               1.4.5   2024-10-28 [1] CRAN (R 4.4.1)\n pkgconfig              2.0.3   2019-09-22 [1] CRAN (R 4.4.0)\n pkgload                1.4.0   2024-06-28 [1] CRAN (R 4.4.0)\n profvis                0.4.0   2024-09-20 [1] CRAN (R 4.4.1)\n promises               1.3.0   2024-04-05 [1] CRAN (R 4.4.0)\n purrr                * 1.0.2   2023-08-10 [1] CRAN (R 4.4.0)\n R6                     2.5.1   2021-08-19 [1] CRAN (R 4.4.0)\n Rcpp                   1.0.13  2024-07-17 [1] CRAN (R 4.4.0)\n readr                * 2.1.5   2024-01-10 [1] CRAN (R 4.4.0)\n remotes                2.5.0   2024-03-17 [1] CRAN (R 4.4.0)\n rlang                  1.1.4   2024-06-04 [1] CRAN (R 4.4.0)\n rmarkdown              2.28    2024-08-17 [1] CRAN (R 4.4.0)\n rsvd                   1.0.5   2021-04-16 [1] CRAN (R 4.4.0)\n Rtsne                  0.17    2023-12-07 [1] CRAN (R 4.4.0)\n S4Arrays               1.4.1   2024-05-30 [1] Bioconduc~\n S4Vectors            * 0.42.1  2024-07-03 [1] Bioconduc~\n ScaledMatrix           1.12.0  2024-04-30 [1] Bioconduc~\n scales                 1.3.0   2023-11-28 [1] CRAN (R 4.4.0)\n scater               * 1.32.1  2024-07-21 [1] Bioconduc~\n scuttle              * 1.14.0  2024-04-30 [1] Bioconduc~\n sessioninfo            1.2.2   2021-12-06 [1] CRAN (R 4.4.0)\n shiny                  1.9.1   2024-08-01 [1] CRAN (R 4.4.0)\n SingleCellExperiment * 1.26.0  2024-04-30 [1] Bioconduc~\n SparseArray            1.4.8   2024-05-30 [1] Bioconduc~\n sparseMatrixStats      1.16.0  2024-04-30 [1] Bioconduc~\n stringi                1.8.4   2024-05-06 [1] CRAN (R 4.4.0)\n stringr              * 1.5.1   2023-11-14 [1] CRAN (R 4.4.0)\n SummarizedExperiment * 1.34.0  2024-04-30 [1] Bioconduc~\n tibble               * 3.2.1   2023-03-20 [1] CRAN (R 4.4.0)\n tidyr                * 1.3.1   2024-01-24 [1] CRAN (R 4.4.0)\n tidyselect             1.2.1   2024-03-11 [1] CRAN (R 4.4.0)\n tidyverse            * 2.0.0   2023-02-22 [1] CRAN (R 4.4.0)\n timechange             0.3.0   2024-01-18 [1] CRAN (R 4.4.0)\n tzdb                   0.4.0   2023-05-12 [1] CRAN (R 4.4.0)\n UCSC.utils             1.0.0   2024-05-06 [1] Bioconduc~\n urlchecker             1.0.1   2021-11-30 [1] CRAN (R 4.4.0)\n usethis                3.0.0   2024-07-29 [1] CRAN (R 4.4.0)\n utf8                   1.2.4   2023-10-22 [1] CRAN (R 4.4.0)\n uwot                   0.2.2   2024-04-21 [1] CRAN (R 4.4.0)\n vctrs                  0.6.5   2023-12-01 [1] CRAN (R 4.4.0)\n vipor                  0.4.7   2023-12-18 [1] CRAN (R 4.4.0)\n viridis                0.6.5   2024-01-29 [1] CRAN (R 4.4.0)\n viridisLite            0.4.2   2023-05-02 [1] CRAN (R 4.4.0)\n vroom                  1.6.5   2023-12-05 [1] CRAN (R 4.4.0)\n withr                  3.0.2   2024-10-28 [1] CRAN (R 4.4.1)\n xfun                   0.48    2024-10-03 [1] CRAN (R 4.4.1)\n xtable                 1.8-4   2019-04-21 [1] CRAN (R 4.4.0)\n XVector                0.44.0  2024-04-30 [1] Bioconduc~\n zlibbioc               1.50.0  2024-04-30 [1] Bioconduc~\n\n [1] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "content/day3/Lecture4_clustering.html",
    "href": "content/day3/Lecture4_clustering.html",
    "title": "8  Lecture 4 - Identifying cell populations",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6 - Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8 - Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-223e2965264ed5a7335008666fb8bf98\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-3b76fef3a0d5eb2246bc4bf3ad6d9a9f\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day2/Lab4_data_wrangling_scRNAseq.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;7&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day3/Lab5_clustering.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;9&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day3/Lab5_clustering.html#dimensional-reduction-for-clustering",
    "href": "content/day3/Lab5_clustering.html#dimensional-reduction-for-clustering",
    "title": "\n9  Lab 5: Dimension reduction, clustering and annotation\n",
    "section": "\n9.1 Dimensional reduction for clustering",
    "text": "9.1 Dimensional reduction for clustering\n\n9.1.1 Preparing dataset\nWe will prepare scRNAseq data from a PBMC run, provided by 10X and hosted by Bioconductor as a package.\n\n\n\n\n\n\nQuestion\n\n\n\nWhich package from Bioconductor gives streamlined access to PBMC scRNAseq dataset from 10X Genomics?\nWhat does the object contain (type of data, number of cells, batches, organism, …)? Can you get the same data from somewhere else?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(SingleCellExperiment)\n\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following object is masked from 'package:dplyr':\n\n    count\n\n\nAttaching package: 'MatrixGenerics'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, colCounts, colCummaxs, colCummins, colCumprods, colCumsums, colDiffs, colIQRDiffs, colIQRs, colLogSumExps,\n    colMadDiffs, colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, colSums2, colTabulates,\n    colVarDiffs, colVars, colWeightedMads, colWeightedMeans, colWeightedMedians, colWeightedSds, colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, rowCollapse,\n    rowCounts, rowCummaxs, rowCummins, rowCumprods, rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, rowWeightedMads, rowWeightedMeans,\n    rowWeightedMedians, rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:lubridate':\n\n    intersect, setdiff, union\n\nThe following objects are masked from 'package:dplyr':\n\n    combine, intersect, setdiff, union\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted,\n    lapply, Map, mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, table, tapply, union, unique,\n    unsplit, which.max, which.min\n\nLoading required package: S4Vectors\n\nAttaching package: 'S4Vectors'\n\nThe following objects are masked from 'package:lubridate':\n\n    second, second&lt;-\n\nThe following objects are masked from 'package:dplyr':\n\n    first, rename\n\nThe following object is masked from 'package:tidyr':\n\n    expand\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\nLoading required package: IRanges\n\nAttaching package: 'IRanges'\n\nThe following object is masked from 'package:lubridate':\n\n    %within%\n\nThe following objects are masked from 'package:dplyr':\n\n    collapse, desc, slice\n\nThe following object is masked from 'package:purrr':\n\n    reduce\n\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with 'browseVignettes()'. To cite Bioconductor, see 'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: 'Biobase'\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\nsce &lt;- TENxPBMCData::TENxPBMCData('pbmc4k')\n\nsee ?TENxPBMCData and browseVignettes('TENxPBMCData') for documentation\nloading from cache\n\nrownames(sce) &lt;- scuttle::uniquifyFeatureNames(rowData(sce)$ENSEMBL_ID, rowData(sce)$Symbol_TENx)\nsce\n\nclass: SingleCellExperiment \ndim: 33694 4340 \nmetadata(0):\nassays(1): counts\nrownames(33694): RP11-34P13.3 FAM138A ... AC213203.1 FAM231B\nrowData names(3): ENSEMBL_ID Symbol_TENx Symbol\ncolnames: NULL\ncolData names(11): Sample Barcode ... Individual Date_published\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\n\nrowData(sce)\n\nDataFrame with 33694 rows and 3 columns\n                  ENSEMBL_ID  Symbol_TENx       Symbol\n                 &lt;character&gt;  &lt;character&gt;  &lt;character&gt;\nRP11-34P13.3 ENSG00000243485 RP11-34P13.3           NA\nFAM138A      ENSG00000237613      FAM138A      FAM138A\nOR4F5        ENSG00000186092        OR4F5        OR4F5\nRP11-34P13.7 ENSG00000238009 RP11-34P13.7 LOC100996442\nRP11-34P13.8 ENSG00000239945 RP11-34P13.8           NA\n...                      ...          ...          ...\nAC233755.2   ENSG00000277856   AC233755.2           NA\nAC233755.1   ENSG00000275063   AC233755.1 LOC102723407\nAC240274.1   ENSG00000271254   AC240274.1 LOC102724250\nAC213203.1   ENSG00000277475   AC213203.1           NA\nFAM231B      ENSG00000268674      FAM231B      FAM231C\n\ncolData(sce)\n\nDataFrame with 4340 rows and 11 columns\n          Sample            Barcode         Sequence   Library Cell_ranger_version Tissue_status Barcode_type   Chemistry Sequence_platform    Individual Date_published\n     &lt;character&gt;        &lt;character&gt;      &lt;character&gt; &lt;integer&gt;         &lt;character&gt;   &lt;character&gt;  &lt;character&gt; &lt;character&gt;       &lt;character&gt;   &lt;character&gt;    &lt;character&gt;\n1         pbmc4k AAACCTGAGAAGGCCT-1 AAACCTGAGAAGGCCT         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08\n2         pbmc4k AAACCTGAGACAGACC-1 AAACCTGAGACAGACC         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08\n3         pbmc4k AAACCTGAGATAGTCA-1 AAACCTGAGATAGTCA         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08\n4         pbmc4k AAACCTGAGCGCCTCA-1 AAACCTGAGCGCCTCA         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08\n5         pbmc4k AAACCTGAGGCATGGT-1 AAACCTGAGGCATGGT         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08\n...          ...                ...              ...       ...                 ...           ...          ...         ...               ...           ...            ...\n4336      pbmc4k TTTGGTTTCGCTAGCG-1 TTTGGTTTCGCTAGCG         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08\n4337      pbmc4k TTTGTCACACTTAACG-1 TTTGTCACACTTAACG         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08\n4338      pbmc4k TTTGTCACAGGTCCAC-1 TTTGTCACAGGTCCAC         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08\n4339      pbmc4k TTTGTCAGTTAAGACA-1 TTTGTCAGTTAAGACA         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08\n4340      pbmc4k TTTGTCATCCCAAGAT-1 TTTGTCATCCCAAGAT         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08\n\ntable(sce$Library)\n\n\n   1 \n4340 \n\n\n\n\n\n\n\n\n9.1.2 Normalize counts using scran\n\nJust like in bulk high-throughput sequencing experiments, scRNAseq counts have to be normalized to the sequencing depth for each cell. We can define the library size as the total sum of counts across all genes for each cell, the expected value of which is assumed to scale with any cell-specific biases. However, this relies on the assumption that within the entire dataset, most genes are non-differentially expressed and expressed roughly within the same range. Depending on the set up of the scRNAseq experiment, this can be entirely false. To avoid relying on this hypothesis, we can (1) quickly pre-cluster cells, then (2) normalize cells using their library size factor separately in each cluster, then (3) rescaling size factors so that they are comparable across clusters.\nAll of this can be done very simply using the combo quickCluster() + computeSumFactors() + logNormCounts() from scran/scuttle packages.\n\n\n\n\n\n\nQuestion\n\n\n\nWhat is the purpose of the quickCluster() function? What does it return?\nWhat is the purpose of the computeSumFactors() function? What does it return?\nWhat is the purpose of the logNormCounts() function? What does it return?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nclusters &lt;- scran::quickCluster(sce)\ntable(clusters)\n\n\nclusters\n  1   2   3   4   5   6   7   8   9  10  11 \n588 361 264 161 866 365 531 536 360 207 101 \n\nsce &lt;- scran::computeSumFactors(sce, cluster = clusters)\ncolData(sce)\n\nDataFrame with 4340 rows and 12 columns\n          Sample            Barcode         Sequence   Library Cell_ranger_version Tissue_status Barcode_type   Chemistry Sequence_platform    Individual Date_published sizeFactor\n     &lt;character&gt;        &lt;character&gt;      &lt;character&gt; &lt;integer&gt;         &lt;character&gt;   &lt;character&gt;  &lt;character&gt; &lt;character&gt;       &lt;character&gt;   &lt;character&gt;    &lt;character&gt;  &lt;numeric&gt;\n1         pbmc4k AAACCTGAGAAGGCCT-1 AAACCTGAGAAGGCCT         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08   0.403246\n2         pbmc4k AAACCTGAGACAGACC-1 AAACCTGAGACAGACC         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08   0.739777\n3         pbmc4k AAACCTGAGATAGTCA-1 AAACCTGAGATAGTCA         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08   0.429493\n4         pbmc4k AAACCTGAGCGCCTCA-1 AAACCTGAGCGCCTCA         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08   0.527001\n5         pbmc4k AAACCTGAGGCATGGT-1 AAACCTGAGGCATGGT         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08   0.600344\n...          ...                ...              ...       ...                 ...           ...          ...         ...               ...           ...            ...        ...\n4336      pbmc4k TTTGGTTTCGCTAGCG-1 TTTGGTTTCGCTAGCG         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08   1.422566\n4337      pbmc4k TTTGTCACACTTAACG-1 TTTGTCACACTTAACG         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08   0.947146\n4338      pbmc4k TTTGTCACAGGTCCAC-1 TTTGTCACAGGTCCAC         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08   1.962193\n4339      pbmc4k TTTGTCAGTTAAGACA-1 TTTGTCAGTTAAGACA         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08   0.615199\n4340      pbmc4k TTTGTCATCCCAAGAT-1 TTTGTCATCCCAAGAT         1                v2.1            NA     Chromium Chromium_v2         Hiseq4000 HealthyDonor1     2017-11-08   0.771550\n\nsce &lt;- scuttle::logNormCounts(sce)\nassays(sce)\n\nList of length 2\nnames(2): counts logcounts\n\n\n\n\n\n\n\n\n9.1.3 Feature selection\nWe often use scRNAseq data in exploratory analyses to characterize heterogeneity across cells. Procedures like clustering and dimensionality reduction compare cells based on their gene expression profiles. The choice of genes to include in this comparison may have a major impact on the performance of downstream methods. Ideally, one wants to only select genes that contain useful information about the biology of the system while removing genes that contain random noise. This aims to preserve interesting biological structure without the variance that obscures that structure.\nThe simplest approach to feature selection is to compute the variance of the log-normalized expression values, to select the most variable genes. Modelling of the mean-variance relationship can be achieved by the modelGeneVar() function from the scran package.\n\n\n\n\n\n\nQuestion\n\n\n\nApply the modelGeneVar() function to the normalized counts. What does the returned object contain?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nsce_filtered_variance &lt;- scran::modelGeneVar(sce)\nsce_filtered_variance\n\n\nDataFrame with 33694 rows and 6 columns\n                    mean       total        tech          bio   p.value       FDR\n               &lt;numeric&gt;   &lt;numeric&gt;   &lt;numeric&gt;    &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\nRP11-34P13.3 0.000000000 0.000000000 0.000000000  0.00000e+00       NaN       NaN\nFAM138A      0.000000000 0.000000000 0.000000000  0.00000e+00       NaN       NaN\nOR4F5        0.000000000 0.000000000 0.000000000  0.00000e+00       NaN       NaN\nRP11-34P13.7 0.001973297 0.002003373 0.002046038 -4.26643e-05  0.549850  0.744658\nRP11-34P13.8 0.000491705 0.000531807 0.000509831  2.19764e-05  0.397824  0.744658\n...                  ...         ...         ...          ...       ...       ...\nAC233755.2    0.00000000   0.0000000   0.0000000   0.00000000       NaN       NaN\nAC233755.1    0.00000000   0.0000000   0.0000000   0.00000000       NaN       NaN\nAC240274.1    0.00961767   0.0112683   0.0099722   0.00129611  0.217433  0.744658\nAC213203.1    0.00000000   0.0000000   0.0000000   0.00000000       NaN       NaN\nFAM231B       0.00000000   0.0000000   0.0000000   0.00000000       NaN       NaN\n\n\n\n\n\nIdentify the top 10% most variable genes from this object.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nHVGs &lt;- scran::getTopHVGs(sce_filtered_variance, prop = 0.1)\nrowData(sce)$isHVG &lt;- rownames(sce) %in% HVGs\nhead(rowData(sce))\n\n\nDataFrame with 6 rows and 4 columns\n                   ENSEMBL_ID   Symbol_TENx       Symbol     isHVG\n                  &lt;character&gt;   &lt;character&gt;  &lt;character&gt; &lt;logical&gt;\nRP11-34P13.3  ENSG00000243485  RP11-34P13.3           NA     FALSE\nFAM138A       ENSG00000237613       FAM138A      FAM138A     FALSE\nOR4F5         ENSG00000186092         OR4F5        OR4F5     FALSE\nRP11-34P13.7  ENSG00000238009  RP11-34P13.7 LOC100996442     FALSE\nRP11-34P13.8  ENSG00000239945  RP11-34P13.8           NA     FALSE\nRP11-34P13.14 ENSG00000239906 RP11-34P13.14           NA     FALSE\n\ntable(rowData(sce)$isHVG)\n\n\nFALSE  TRUE \n32424  1270 \n\n\n\n\n\nVisualize the mean-variance fit of the data, coloring points by whether they are in the top 10% most variable genes.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndf &lt;- tibble(\n    mean = metadata(sce_filtered_variance)$mean, \n    var = metadata(sce_filtered_variance)$var, \n    trend = metadata(sce_filtered_variance)$trend(mean), \n    HVG = rowData(sce)$isHVG\n)\nggplot(df) + \n    geom_point(aes(x = mean, y = var, col = HVG), alpha = 0.4) + \n    geom_line(aes(x = mean, y = trend), col = 'darkred') +\n    theme_minimal() + \n    labs(x = 'Gene mean exp. (norm.)', y = 'Gene exp. variance')\n\n\n\n\n\n\n\n\n\n\n\n9.1.4 PCA on filtered dataset\nWe now have normalized counts filtered for the top 500 genes varying with the greatest biological significance.\nStill, that represents a 500 x nCells (~8,000) dataset (each row being a feature). This is still too big to reliably use in standard clustering approaches. We can further compress the dataset. The most widely used approach is PCA: it computes a small number of “components” (typically 5-50) optimally summarizing the variability of the whole dataset, while retaining linearity of the underlying numerical data and being computationallt quite efficient.\n\n\n\n\n\n\nQuestion\n\n\n\nLeverage the scater package to compute a PCA embedding of the filtered data by taking into account the technical variability.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nsce &lt;- scran::denoisePCA(\n    sce, \n    technical = sce_filtered_variance, \n    subset.row = HVGs, \n    min.rank = 15\n)\np &lt;- scater::plotReducedDim(sce, 'PCA', colour_by = 'sizeFactor') + ggtitle('denoised PCA')\np"
  },
  {
    "objectID": "content/day3/Lab5_clustering.html#clustering",
    "href": "content/day3/Lab5_clustering.html#clustering",
    "title": "\n9  Lab 5: Dimension reduction, clustering and annotation\n",
    "section": "\n9.2 Clustering",
    "text": "9.2 Clustering\nClustering is an unsupervised learning procedure that is used in scRNA-seq data analysis to empirically define groups of cells with similar expression profiles. Its primary purpose is to summarize the data in a digestible format for human interpretation.\nAfter annotation based on marker genes, the clusters can be treated as proxies for more abstract biological concepts such as cell types or states. Clustering is thus a critical step for extracting biological insights from scRNA-seq data.\n\n9.2.1 Clustering algorithms\nThree main approaches can be used:\n\nHierarchical clustering\nk-means clustering\nGraph-based clustering\n\nToday, we will focus on graph-based clustering, as it is becoming the standard for scRNAseq: it is a flexible and scalable technique for clustering even the largest scRNA-seq datasets. We first build a graph where each node is a cell that is connected by edges to its nearest neighbors in the high-dimensional space. Edges are weighted based on the similarity between the cells involved, with higher weight given to cells that are more closely related.\n\n\n\n\n\n\nQuestion\n\n\n\nCompute a graph-based clustering of the PBMC dataset.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngraph &lt;- scran::buildSNNGraph(\n    sce, \n    k = 5, \n    use.dimred = 'PCA'\n)\nsce_clust &lt;- igraph::cluster_louvain(graph)$membership\nsce$clusters_graph &lt;- factor(sce_clust)\ntable(sce$clusters_graph)\n\n\n\n  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17 \n502 359 682  40 129 393  61 193 349 363 376 218 190 151 127 197  10 \n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nWhat are the main parameters to choose when building the graph? How do they impact the clustering?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngraph2 &lt;- scran::buildSNNGraph(\n    sce, \n    k = 50, \n    use.dimred = 'PCA'\n)\nsce_clust2 &lt;- igraph::cluster_louvain(graph2)$membership\ntable(sce_clust, sce_clust2)\n\n\n         sce_clust2\nsce_clust   1   2   3   4   5   6   7   8\n       1  502   0   0   0   0   0   0   0\n       2    0 321  29   0   0   9   0   0\n       3    0  23 659   0   0   0   0   0\n       4    0   0   0  37   1   0   2   0\n       5   23   0   0 106   0   0   0   0\n       6    0   1   0   0 389   3   0   0\n       7   58   0   1   0   2   0   0   0\n       8    0 181  12   0   0   0   0   0\n       9    0   1 348   0   0   0   0   0\n       10 363   0   0   0   0   0   0   0\n       11   0   1   0   0   0 374   1   0\n       12   0   0   0   0 218   0   0   0\n       13   0   0   0   0   1  22 167   0\n       14   0   0   0   0   0 151   0   0\n       15  14   0   0   1   0   0   0 112\n       16   0 167   1   0   0  29   0   0\n       17   0   5   2   0   3   0   0   0\n\n\n\n\n\n\n\n\n9.2.2 Dimensional reduction for clustering visualization\nPCA is a powerful linear approach to compress large datasets into smaller dimensional spaces. However, it struggles at emphasizing the existence of clusters in complex datasets, when visualized in 2D.\nscater provides a handy way to perform more complex data embeddings:\n- tSNE\n- UMAP\n- Diffusion Map\n- Multi-Dimensional Scaling (MDS)\n- Non-negative Matrix Factorization (NMF)\n\n\n\n\n\n\nQuestion\n\n\n\nExplore the different dimensional reduction algorithms, trying different hyperparameters combinations.\nWhen you run these commands, pay attention to how long each command takes to run! While this run, check the Help page for each function (e.g. ?runTSNE)\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nreducedDims(sce)\n\n\nList of length 1\nnames(1): PCA\n\nsce &lt;- scater::runTSNE(sce, subset_row = HVGs)\nsce &lt;- scater::runUMAP(sce, subset_row = HVGs)\nreducedDims(sce)\n\nList of length 3\nnames(3): PCA TSNE UMAP\n\nreducedDim(sce, 'UMAP')[1:10, ]\n\n        UMAP1    UMAP2\n [1,] 10.4762 -1.74452\n [2,]  9.9714 -1.70896\n [3,]  8.9500 -1.36885\n [4,] -6.3458 -3.38246\n [5,] -5.7974 -6.26426\n [6,] -6.6016 -1.30995\n [7,]  8.3734 11.37350\n [8,]  8.4162  2.35892\n [9,]  2.7606 14.29711\n[10,]  8.8376  0.10778\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nUse the scater::plotReducedDim() function to plot cells in each embedding. Comment.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(patchwork)\np&lt;- scater::plotReducedDim(sce, 'PCA', colour_by = 'clusters_graph') + ggtitle('denoised PCA') +\n    scater::plotReducedDim(sce, 'TSNE', colour_by = 'clusters_graph') + ggtitle('tSNE') +\n    scater::plotReducedDim(sce, 'UMAP', colour_by = 'clusters_graph') + ggtitle('UMAP')\np\n\n\n\n\n\n\n\n\n\n\n\n9.2.3 BONUS For the pros of clustering… Compare different clustering approaches\nLeveraging the bluster package, different clustering approaches can be performed using a uniformed syntax, to compare their output.\n\n\n\n\n\n\nQuestion\n\n\n\nUsing clusterSweep(), compare the effect of different k neighbor values when performing graph-based clustering.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nclusters &lt;- bluster::clusterSweep(\n    reducedDim(sce, 'PCA'), \n    BLUSPARAM = bluster::SNNGraphParam(),\n    k = c(5L, 15L, 25L, 50L), \n    cluster.fun = c(\"louvain\")\n)\ncolnames(clusters$clusters)\n\n\n[1] \"k.5_cluster.fun.louvain\"  \"k.15_cluster.fun.louvain\" \"k.25_cluster.fun.louvain\" \"k.50_cluster.fun.louvain\"\n\nhead(clusters$clusters)\n\nDataFrame with 6 rows and 4 columns\n  k.5_cluster.fun.louvain k.15_cluster.fun.louvain k.25_cluster.fun.louvain k.50_cluster.fun.louvain\n                 &lt;factor&gt;                 &lt;factor&gt;                 &lt;factor&gt;                 &lt;factor&gt;\n1                       1                        1                        1                        1\n2                       2                        1                        1                        1\n3                       1                        1                        1                        1\n4                       3                        2                        2                        2\n5                       4                        3                        3                        3\n6                       3                        2                        3                        3\n\nclusters$parameters\n\nDataFrame with 4 rows and 2 columns\n                                 k cluster.fun\n                         &lt;integer&gt; &lt;character&gt;\nk.5_cluster.fun.louvain          5     louvain\nk.15_cluster.fun.louvain        15     louvain\nk.25_cluster.fun.louvain        25     louvain\nk.50_cluster.fun.louvain        50     louvain\n\nlibrary(ggraph)\np &lt;- cowplot::plot_grid(\n    clustree::clustree(\n        clusters$clusters %&gt;% setNames(1:ncol(.)) %&gt;% as.data.frame(),\n        prefix = 'X',\n        edge_arrow=FALSE\n    ), \n    cowplot::plot_grid(\n        scater::plotReducedDim(sce, 'TSNE', colour_by = I(clusters$clusters[, 'k.5_cluster.fun.louvain'])) + ggtitle('k = 5'),\n        scater::plotReducedDim(sce, 'TSNE', colour_by = I(clusters$clusters[, 'k.15_cluster.fun.louvain'])) + ggtitle('k = 15'),\n        scater::plotReducedDim(sce, 'TSNE', colour_by = I(clusters$clusters[, 'k.25_cluster.fun.louvain'])) + ggtitle('k = 25'),\n        scater::plotReducedDim(sce, 'TSNE', colour_by = I(clusters$clusters[, 'k.50_cluster.fun.louvain'])) + ggtitle('k = 50')\n    ), \n    nrow = 2, \n    rel_heights = c(0.3, 0.7)\n)\np\n\n\n\ntable(clusters$clusters[, 'k.5_cluster.fun.louvain'])\n\n\n  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18 \n473 393 368 627  40 129 376  61 188 404 382 217 190 141 126 197  10  18"
  },
  {
    "objectID": "content/day3/Lab5_clustering.html#cell-annotation",
    "href": "content/day3/Lab5_clustering.html#cell-annotation",
    "title": "\n9  Lab 5: Dimension reduction, clustering and annotation\n",
    "section": "\n9.3 Cell annotation",
    "text": "9.3 Cell annotation\n\n9.3.1 Find marker genes\nTo interpret clustering results, one needs to identify the genes that drive separation between clusters. These marker genes allow to assign biological meaning to each cluster based on their functional annotation. In the most obvious case, the marker genes for each cluster are a priori associated with particular cell types, allowing us to treat the clustering as a proxy for cell type identity.\nA general strategy is to perform DE tests between pairs of clusters and then combine results into a single ranking of marker genes for each cluster.\n\n\n\nR\n\nmarkers &lt;- scran::findMarkers(sce, groups = sce$clusters_graph)\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nFind markers strongly overexpressed in each cluster. Check ?scran::findMarkers to find the right options to use.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nmarkers &lt;- scran::findMarkers(\n    sce, \n    groups = sce$clusters_graph, \n    direction = \"up\", \n    lfc = 1\n)\nhead(markers[[1]])\n\n\nDataFrame with 6 rows and 20 columns\n                    Top      p.value          FDR summary.logFC   logFC.2   logFC.3   logFC.4   logFC.5   logFC.6   logFC.7   logFC.8   logFC.9  logFC.10  logFC.11  logFC.12  logFC.13  logFC.14\n              &lt;integer&gt;    &lt;numeric&gt;    &lt;numeric&gt;     &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\nS100A9                1  0.00000e+00  0.00000e+00       5.41682   5.43237   5.41682   5.38506  3.527516   5.40582  1.300493   5.30313   5.29337  1.367411   5.51013   5.25562   5.57793   5.39685\nS100A12               1 3.00254e-186 7.78211e-183       3.16760   3.14991   3.15614   3.06390  2.752834   3.16872  1.321253   3.13691   3.11275  1.428806   3.15624   3.14479   3.16760   3.13757\nS100A8                1  0.00000e+00  0.00000e+00       5.35071   5.40804   5.35071   5.24867  4.002828   5.36811  1.429670   5.33249   5.42634  1.615361   5.44104   5.37566   5.57562   5.42914\nMNDA                  1 6.44450e-174 1.35713e-170       2.69302   2.62331   2.65953   2.68560  1.039333   2.63823  0.869333   2.62066   2.66382  0.469773   2.68082   2.63842   2.69302   2.67460\nLYZ                   1  0.00000e+00  0.00000e+00       5.27217   5.25980   5.27217   5.32183  0.755057   5.22486  0.992756   5.33170   5.26958  0.312196   5.30534   5.30214   5.49214   5.27623\nRP11-1143G9.4         1 6.20347e-200 1.74183e-196       3.22726   3.16209   3.16589   3.04120  1.380130   3.16979  0.939639   3.18494   3.16750  0.865393   3.18003   3.17216   3.18095   3.22726\n               logFC.15  logFC.16  logFC.17\n              &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\nS100A9          4.11810   5.40420   5.33767\nS100A12         3.05345   3.10968   3.06099\nS100A8          4.62013   5.46970   5.41967\nMNDA            1.17765   2.66604   2.70577\nLYZ             3.03608   5.25555   5.19250\nRP11-1143G9.4   2.72497   3.22522   3.21302\n\nmarkers &lt;- lapply(markers, function(df) {\n    rownames(df[df$Top &lt;= 5,])\n})\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nPlot average expression of the first marker of the first cluster in UMAP.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\np &lt;- scater::plotReducedDim(sce, 'TSNE', colour_by = markers[[2]][[1]])\np\n\n\n\n\n\n\n\n\n\n\n\n9.3.2 Automated cell annotation\nMany cell type reference databases are available over the Internet. Today, we will use a reference constructed from Blueprint and ENCODE data (Martens and Stunnenberg 2013; The ENCODE Project Consortium 2012). This reference is available as a SummarizedExperiment containing log-normalized gene expression for manually annotated samples.\n\n\n\nR\n\nref &lt;- celldex::BlueprintEncodeData()\nprediction_types &lt;- SingleR::SingleR(\n    test = sce, \n    ref = ref, \n    labels = ref$label.main\n)\nsce$annotation &lt;- prediction_types$labels\ntable(sce$annotation)\n\n\n\n     B-cells CD4+ T-cells CD8+ T-cells           DC          HSC    Monocytes     NK cells \n         616          881         1390            1           14         1201          237 \n\ntable(sce$annotation, sce$clusters_graph)\n\n              \n                 1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17\n  B-cells        0   0   0  14   0 383   0   0   0   0   0 218   0   0   0   0   1\n  CD4+ T-cells   0 158 490   0   0   0   1  96  47   0   0   0   0   0   0  89   0\n  CD8+ T-cells   0 201 192   0   0   9   0  97 302   0 342   0   3 136   0 108   0\n  DC             0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0\n  HSC            0   0   0   5   0   0   0   0   0   0   0   0   0   0   0   0   9\n  Monocytes    502   0   0  21 128   0  60   0   0 363   0   0   0   0 127   0   0\n  NK cells       0   0   0   0   0   1   0   0   0   0  34   0 187  15   0   0   0\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nUsing scater and SingleR utilities, visually compare the annotation scores for cells in each cluster.\nDid the automated annotation work robuslty? How does it compare to our clustering? Is automated annotation as sensitive as graph-based clustering?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\np &lt;- SingleR::plotScoreHeatmap(prediction_types)\np\n\n\n\n\np &lt;- scater::plotReducedDim(sce, 'TSNE', colour_by = 'annotation') + ggtitle('Automated annotation')\np\n\n\n\np &lt;- pheatmap::pheatmap(\n    log2(table(Annotation = sce$annotation, Cluster = sce$clusters_graph)+10), \n    color = colorRampPalette(c(\"white\", \"darkred\"))(101)\n)"
  },
  {
    "objectID": "content/day3/Lab5_clustering.html#bonus",
    "href": "content/day3/Lab5_clustering.html#bonus",
    "title": "\n9  Lab 5: Dimension reduction, clustering and annotation\n",
    "section": "\n9.4 Bonus",
    "text": "9.4 Bonus\nTry to fill in the analysis template in bin/prepare_Ernst.R to execute the different processing/analysis steps we covered in the previous exercises and this one. If you prefer using Seurat, don’t hesitate to modify the base template!"
  },
  {
    "objectID": "content/day3/Lab5_clustering.html#acknowledgements",
    "href": "content/day3/Lab5_clustering.html#acknowledgements",
    "title": "\n9  Lab 5: Dimension reduction, clustering and annotation\n",
    "section": "\n9.5 Acknowledgements",
    "text": "9.5 Acknowledgements\nThis exercise was adapted from Chapts. 7-12 of Orchestrating Single-Cell Analysis with Bioconductor."
  },
  {
    "objectID": "content/day3/Lab5_clustering.html#session-info",
    "href": "content/day3/Lab5_clustering.html#session-info",
    "title": "\n9  Lab 5: Dimension reduction, clustering and annotation\n",
    "section": "\n9.6 Session info",
    "text": "9.6 Session info\n\n\n─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.1 (2024-06-14)\n os       macOS Sonoma 14.6.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Paris\n date     2024-11-03\n pandoc   2.19.2 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n package              * version  date (UTC) lib source\n abind                * 1.4-8    2024-09-12 [1] CRAN (R 4.4.1)\n alabaster.base         1.4.2    2024-06-23 [1] Bioconduc~\n alabaster.matrix       1.4.2    2024-06-23 [1] Bioconduc~\n alabaster.ranges       1.4.2    2024-06-23 [1] Bioconduc~\n alabaster.schemas      1.4.0    2024-04-30 [1] Bioconduc~\n alabaster.se           1.4.1    2024-05-30 [1] Bioconduc~\n AnnotationDbi          1.66.0   2024-06-16 [1] Bioconduc~\n AnnotationHub          3.12.0   2024-04-30 [1] Bioconduc~\n backports              1.5.0    2024-05-23 [1] CRAN (R 4.4.0)\n beachmat               2.20.0   2024-05-06 [1] Bioconduc~\n beeswarm               0.4.0    2021-06-01 [1] CRAN (R 4.4.0)\n Biobase              * 2.64.0   2024-04-30 [1] Bioconduc~\n BiocFileCache          2.12.0   2024-04-30 [1] Bioconduc~\n BiocGenerics         * 0.50.0   2024-04-30 [1] Bioconduc~\n BiocManager            1.30.25  2024-08-28 [1] CRAN (R 4.4.1)\n BiocNeighbors          1.22.0   2024-04-30 [1] Bioconduc~\n BiocParallel           1.38.0   2024-04-30 [1] Bioconduc~\n BiocSingular           1.20.0   2024-04-30 [1] Bioconduc~\n BiocVersion            3.19.1   2024-04-22 [1] Bioconduc~\n Biostrings             2.72.1   2024-06-02 [1] Bioconduc~\n bit                    4.5.0    2024-09-20 [1] CRAN (R 4.4.1)\n bit64                  4.5.2    2024-09-22 [1] CRAN (R 4.4.1)\n blob                   1.2.4    2023-03-17 [1] CRAN (R 4.4.0)\n bluster                1.14.0   2024-04-30 [1] Bioconduc~\n cachem                 1.1.0    2024-05-16 [1] CRAN (R 4.4.0)\n celldex                1.14.0   2024-05-02 [1] Bioconduc~\n checkmate              2.3.2    2024-07-29 [1] CRAN (R 4.4.0)\n cli                    3.6.3    2024-06-21 [1] CRAN (R 4.4.0)\n cluster                2.1.6    2023-12-01 [1] CRAN (R 4.4.1)\n clustree               0.5.1    2023-11-05 [1] CRAN (R 4.4.0)\n codetools              0.2-20   2024-03-31 [1] CRAN (R 4.4.1)\n colorspace             2.1-1    2024-07-26 [1] CRAN (R 4.4.0)\n cowplot                1.1.3    2024-01-22 [1] CRAN (R 4.4.0)\n crayon                 1.5.3    2024-06-20 [1] CRAN (R 4.4.0)\n curl                   5.2.3    2024-09-20 [1] CRAN (R 4.4.1)\n DBI                    1.2.3    2024-06-02 [1] CRAN (R 4.4.0)\n dbplyr                 2.5.0    2024-03-19 [1] CRAN (R 4.4.0)\n DelayedArray         * 0.30.1   2024-05-30 [1] Bioconduc~\n DelayedMatrixStats     1.26.0   2024-04-30 [1] Bioconduc~\n devtools               2.4.5    2022-10-11 [1] CRAN (R 4.4.0)\n digest                 0.6.37   2024-08-19 [1] CRAN (R 4.4.1)\n dplyr                * 1.1.4    2023-11-17 [1] CRAN (R 4.4.0)\n dqrng                  0.4.1    2024-05-28 [1] CRAN (R 4.4.0)\n edgeR                  4.2.2    2024-10-13 [1] Bioconduc~\n ellipsis               0.3.2    2021-04-29 [1] CRAN (R 4.4.0)\n evaluate               1.0.1    2024-10-10 [1] CRAN (R 4.4.1)\n ExperimentHub          2.12.0   2024-04-30 [1] Bioconduc~\n fansi                  1.0.6    2023-12-08 [1] CRAN (R 4.4.0)\n farver                 2.1.2    2024-05-13 [1] CRAN (R 4.4.0)\n fastmap                1.2.0    2024-05-15 [1] CRAN (R 4.4.0)\n filelock               1.0.3    2023-12-11 [1] CRAN (R 4.4.0)\n forcats              * 1.0.0    2023-01-29 [1] CRAN (R 4.4.0)\n fs                     1.6.4    2024-04-25 [1] CRAN (R 4.4.0)\n generics               0.1.3    2022-07-05 [1] CRAN (R 4.4.0)\n GenomeInfoDb         * 1.40.1   2024-06-16 [1] Bioconduc~\n GenomeInfoDbData       1.2.12   2024-10-29 [1] Bioconductor\n GenomicRanges        * 1.56.2   2024-10-09 [1] Bioconduc~\n ggbeeswarm             0.7.2    2023-04-29 [1] CRAN (R 4.4.0)\n ggforce                0.4.2    2024-02-19 [1] CRAN (R 4.4.0)\n ggplot2              * 3.5.1    2024-04-23 [1] CRAN (R 4.4.0)\n ggraph               * 2.2.1    2024-03-07 [1] CRAN (R 4.4.0)\n ggrepel                0.9.6    2024-09-07 [1] CRAN (R 4.4.1)\n glue                   1.8.0    2024-09-30 [1] CRAN (R 4.4.1)\n graphlayouts           1.2.0    2024-09-24 [1] CRAN (R 4.4.1)\n gridExtra              2.3      2017-09-09 [1] CRAN (R 4.4.0)\n gtable                 0.3.6    2024-10-25 [1] CRAN (R 4.4.1)\n gypsum                 1.0.1    2024-05-30 [1] Bioconduc~\n HDF5Array            * 1.32.1   2024-08-11 [1] Bioconduc~\n hms                    1.1.3    2023-03-21 [1] CRAN (R 4.4.0)\n htmltools              0.5.8.1  2024-04-04 [1] CRAN (R 4.4.0)\n htmlwidgets            1.6.4    2023-12-06 [1] CRAN (R 4.4.0)\n httpuv                 1.6.15   2024-03-26 [1] CRAN (R 4.4.0)\n httr                   1.4.7    2023-08-15 [1] CRAN (R 4.4.0)\n httr2                  1.0.5    2024-09-26 [1] CRAN (R 4.4.1)\n igraph                 2.1.1    2024-10-19 [1] CRAN (R 4.4.1)\n IRanges              * 2.38.1   2024-07-03 [1] Bioconduc~\n irlba                  2.3.5.1  2022-10-03 [1] CRAN (R 4.4.0)\n jsonlite               1.8.9    2024-09-20 [1] CRAN (R 4.4.1)\n KEGGREST               1.44.1   2024-06-19 [1] Bioconduc~\n knitr                  1.48     2024-07-07 [1] CRAN (R 4.4.0)\n labeling               0.4.3    2023-08-29 [1] CRAN (R 4.4.0)\n later                  1.3.2    2023-12-06 [1] CRAN (R 4.4.0)\n lattice                0.22-6   2024-03-20 [1] CRAN (R 4.4.1)\n lifecycle              1.0.4    2023-11-07 [1] CRAN (R 4.4.0)\n limma                  3.60.6   2024-10-02 [1] Bioconduc~\n locfit                 1.5-9.10 2024-06-24 [1] CRAN (R 4.4.0)\n lubridate            * 1.9.3    2023-09-27 [1] CRAN (R 4.4.0)\n magrittr               2.0.3    2022-03-30 [1] CRAN (R 4.4.0)\n MASS                   7.3-60.2 2024-04-26 [1] CRAN (R 4.4.1)\n Matrix               * 1.7-1    2024-10-18 [1] CRAN (R 4.4.1)\n MatrixGenerics       * 1.16.0   2024-04-30 [1] Bioconduc~\n matrixStats          * 1.4.1    2024-09-08 [1] CRAN (R 4.4.1)\n memoise                2.0.1    2021-11-26 [1] CRAN (R 4.4.0)\n metapod                1.12.0   2024-04-30 [1] Bioconduc~\n mime                   0.12     2021-09-28 [1] CRAN (R 4.4.0)\n miniUI                 0.1.1.1  2018-05-18 [1] CRAN (R 4.4.0)\n munsell                0.5.1    2024-04-01 [1] CRAN (R 4.4.0)\n patchwork            * 1.3.0    2024-09-16 [1] CRAN (R 4.4.1)\n pheatmap               1.0.12   2019-01-04 [1] CRAN (R 4.4.0)\n pillar                 1.9.0    2023-03-22 [1] CRAN (R 4.4.0)\n pkgbuild               1.4.5    2024-10-28 [1] CRAN (R 4.4.1)\n pkgconfig              2.0.3    2019-09-22 [1] CRAN (R 4.4.0)\n pkgload                1.4.0    2024-06-28 [1] CRAN (R 4.4.0)\n png                    0.1-8    2022-11-29 [1] CRAN (R 4.4.0)\n polyclip               1.10-7   2024-07-23 [1] CRAN (R 4.4.0)\n profvis                0.4.0    2024-09-20 [1] CRAN (R 4.4.1)\n promises               1.3.0    2024-04-05 [1] CRAN (R 4.4.0)\n purrr                * 1.0.2    2023-08-10 [1] CRAN (R 4.4.0)\n R6                     2.5.1    2021-08-19 [1] CRAN (R 4.4.0)\n rappdirs               0.3.3    2021-01-31 [1] CRAN (R 4.4.0)\n RColorBrewer           1.1-3    2022-04-03 [1] CRAN (R 4.4.0)\n Rcpp                   1.0.13   2024-07-17 [1] CRAN (R 4.4.0)\n RcppAnnoy              0.0.22   2024-01-23 [1] CRAN (R 4.4.0)\n readr                * 2.1.5    2024-01-10 [1] CRAN (R 4.4.0)\n remotes                2.5.0    2024-03-17 [1] CRAN (R 4.4.0)\n rhdf5                * 2.48.0   2024-04-30 [1] Bioconduc~\n rhdf5filters           1.16.0   2024-04-30 [1] Bioconduc~\n Rhdf5lib               1.26.0   2024-04-30 [1] Bioconduc~\n rlang                  1.1.4    2024-06-04 [1] CRAN (R 4.4.0)\n rmarkdown              2.28     2024-08-17 [1] CRAN (R 4.4.0)\n RSQLite                2.3.7    2024-05-27 [1] CRAN (R 4.4.0)\n rsvd                   1.0.5    2021-04-16 [1] CRAN (R 4.4.0)\n Rtsne                  0.17     2023-12-07 [1] CRAN (R 4.4.0)\n S4Arrays             * 1.4.1    2024-05-30 [1] Bioconduc~\n S4Vectors            * 0.42.1   2024-07-03 [1] Bioconduc~\n ScaledMatrix           1.12.0   2024-04-30 [1] Bioconduc~\n scales                 1.3.0    2023-11-28 [1] CRAN (R 4.4.0)\n scater                 1.32.1   2024-07-21 [1] Bioconduc~\n scran                  1.32.0   2024-04-30 [1] Bioconduc~\n scuttle                1.14.0   2024-04-30 [1] Bioconduc~\n sessioninfo            1.2.2    2021-12-06 [1] CRAN (R 4.4.0)\n shiny                  1.9.1    2024-08-01 [1] CRAN (R 4.4.0)\n SingleCellExperiment * 1.26.0   2024-04-30 [1] Bioconduc~\n SingleR                2.6.0    2024-04-30 [1] Bioconduc~\n SparseArray          * 1.4.8    2024-05-30 [1] Bioconduc~\n sparseMatrixStats      1.16.0   2024-04-30 [1] Bioconduc~\n statmod                1.5.0    2023-01-06 [1] CRAN (R 4.4.0)\n stringi                1.8.4    2024-05-06 [1] CRAN (R 4.4.0)\n stringr              * 1.5.1    2023-11-14 [1] CRAN (R 4.4.0)\n SummarizedExperiment * 1.34.0   2024-04-30 [1] Bioconduc~\n TENxPBMCData         * 1.22.0   2024-05-02 [1] Bioconduc~\n tibble               * 3.2.1    2023-03-20 [1] CRAN (R 4.4.0)\n tidygraph              1.3.1    2024-01-30 [1] CRAN (R 4.4.0)\n tidyr                * 1.3.1    2024-01-24 [1] CRAN (R 4.4.0)\n tidyselect             1.2.1    2024-03-11 [1] CRAN (R 4.4.0)\n tidyverse            * 2.0.0    2023-02-22 [1] CRAN (R 4.4.0)\n timechange             0.3.0    2024-01-18 [1] CRAN (R 4.4.0)\n tweenr                 2.0.3    2024-02-26 [1] CRAN (R 4.4.0)\n tzdb                   0.4.0    2023-05-12 [1] CRAN (R 4.4.0)\n UCSC.utils             1.0.0    2024-05-06 [1] Bioconduc~\n urlchecker             1.0.1    2021-11-30 [1] CRAN (R 4.4.0)\n usethis                3.0.0    2024-07-29 [1] CRAN (R 4.4.0)\n utf8                   1.2.4    2023-10-22 [1] CRAN (R 4.4.0)\n uwot                   0.2.2    2024-04-21 [1] CRAN (R 4.4.0)\n vctrs                  0.6.5    2023-12-01 [1] CRAN (R 4.4.0)\n vipor                  0.4.7    2023-12-18 [1] CRAN (R 4.4.0)\n viridis                0.6.5    2024-01-29 [1] CRAN (R 4.4.0)\n viridisLite            0.4.2    2023-05-02 [1] CRAN (R 4.4.0)\n withr                  3.0.2    2024-10-28 [1] CRAN (R 4.4.1)\n xfun                   0.48     2024-10-03 [1] CRAN (R 4.4.1)\n xtable                 1.8-4    2019-04-21 [1] CRAN (R 4.4.0)\n XVector                0.44.0   2024-04-30 [1] Bioconduc~\n yaml                   2.3.10   2024-07-26 [1] CRAN (R 4.4.0)\n zlibbioc               1.50.0   2024-04-30 [1] Bioconduc~\n\n [1] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "content/day3/Lecture5_batchcorrection.html",
    "href": "content/day3/Lecture5_batchcorrection.html",
    "title": "10  Lecture 5 - Data integration and batch effect correction",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6 - Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6 - Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8 - Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-223e2965264ed5a7335008666fb8bf98\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-4e5f6a1e7edd6ec4395d31fd7681eae5\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day3/Lab5_clustering.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;9&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day3/Lab6_batch_correction.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;11&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 6 - Batch correction&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#load-settings-and-packages",
    "href": "content/day3/Lab6_batch_correction.html#load-settings-and-packages",
    "title": "\n11  Lab 6 - Batch correction\n",
    "section": "\n11.2 Load settings and packages",
    "text": "11.2 Load settings and packages\n\n\n\nR\n\nlibrary(Seurat)\nlibrary(Matrix)\nlibrary(fossil) \nlibrary(dplyr)\nlibrary(plyr)\nlibrary(rliger)\n\n# Set folder location for saving output files. This is also the same location as input data.\nmydir &lt;- \"~/Share/batch_correction/\"\n\n# Objects to save.\nwritedir &lt;- \"~/\"\nRda.sparse.path &lt;- paste0(writedir, \"pancreas_subsample.Rda\")\nRda.path &lt;- paste0(writedir, \"pancreas_nobatchcorrect.Rda\")\nRda.Seurat3.path &lt;- paste0(writedir, \"pancreas_Seurat3.Rda\")\nRda.liger.path &lt;- paste0(writedir, \"pancreas_liger.Rda\")"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#read-in-pancreas-expression-matrices",
    "href": "content/day3/Lab6_batch_correction.html#read-in-pancreas-expression-matrices",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.1 Read in pancreas expression matrices",
    "text": "11.1 Read in pancreas expression matrices\nFour different datasets are provided in the ~/Share/batch_correction/ directory. These datasets were collected using different single cell RNA-seq technologies.\n\n\n\n\n\n\nQuestion\n\n\n\nImport the four datasets into R. What is the size and sparsity of each dataset?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncelseq.data &lt;- read.table(\"~/Share/batch_correction/pancreas_multi_celseq_expression_matrix.txt.gz\")\ncelseq2.data &lt;- read.table(\"~/Share/batch_correction/pancreas_multi_celseq2_expression_matrix.txt.gz\")\nfluidigmc1.data &lt;- read.table(\"~/Share/batch_correction/pancreas_multi_fluidigmc1_expression_matrix.txt.gz\")\nsmartseq2.data &lt;- read.table(\"~/Share/batch_correction/pancreas_multi_smartseq2_expression_matrix.txt.gz\")\n\n\nCoerce each dataset to a sparse matrix for efficiency.\n\n\n\nR\n\n# Convert to sparse matrices for efficiency\nlibrary(Matrix)\ncelseq.data &lt;- as(as.matrix(celseq.data), \"dgCMatrix\")\ncelseq2.data &lt;- as(as.matrix(celseq2.data), \"dgCMatrix\")\nfluidigmc1.data &lt;- as(as.matrix(fluidigmc1.data), \"dgCMatrix\")\nsmartseq2.data &lt;- as(as.matrix(smartseq2.data), \"dgCMatrix\")"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#preparing-the-individual-seurat-objects-for-each-pancreas-dataset-without-batch-correction",
    "href": "content/day3/Lab6_batch_correction.html#preparing-the-individual-seurat-objects-for-each-pancreas-dataset-without-batch-correction",
    "title": "\n11  Lab 6 - Batch correction\n",
    "section": "\n11.4 Preparing the individual Seurat objects for each pancreas dataset without batch correction",
    "text": "11.4 Preparing the individual Seurat objects for each pancreas dataset without batch correction\n\n\n\nR\n\n# What is the size of each single cell RNA-seq dataset? \n# Briefly describe the technology used to collect each dataset.\n# Which datasets do you expect to be different and which do you expect to be similar?\ndim(celseq.data)\ndim(celseq2.data)\ndim(fluidigmc1.data)\ndim(smartseq2.data)\n\n# Create and setup Seurat objects for each dataset with the following 6 steps.\n# 1. CreateSeuratObject\n# 2. subset\n# 3. NormalizeData\n# 4. FindVariableGenes\n# 5. ScaleData \n# 6. Update @meta.data slot in Seurat object with tech column (celseq, celseq2, fluidigmc1, smartseq2)\n# Look at the distributions of number of genes per cell before and after FilterCells.\n\n# CEL-Seq (https://www.cell.com/cell-reports/fulltext/S2211-1247(12)00228-8)\n# In subset, use low.thresholds = 1750\ncelseq &lt;- CreateSeuratObject(counts = celseq.data)\nVlnPlot(celseq, \"nFeature_RNA\")\ncelseq &lt;- subset(celseq, subset = nFeature_RNA &gt; 1750)\nVlnPlot(celseq, \"nFeature_RNA\")\ncelseq &lt;- NormalizeData(celseq, normalization.method = \"LogNormalize\", scale.factor = 10000)\ncelseq &lt;- FindVariableFeatures(celseq, selection.method = \"vst\", nfeatures = 2000)\ncelseq &lt;- ScaleData(celseq)\ncelseq[[\"tech\"]] &lt;- \"celseq\"\n\n# CEL-Seq2 https://www.cell.com/molecular-cell/fulltext/S1097-2765(09)00641-8\n# In subset, use low.thresholds = 2500.\ncelseq2 &lt;- CreateSeuratObject(counts = celseq2.data)\nVlnPlot(celseq2, \"nFeature_RNA\")\ncelseq2 &lt;- subset(celseq2, subset = nFeature_RNA &gt; 2500)\nVlnPlot(celseq2, \"nFeature_RNA\")\ncelseq2 &lt;- NormalizeData(celseq2, normalization.method = \"LogNormalize\", scale.factor = 10000)\ncelseq2 &lt;- FindVariableFeatures(celseq2, selection.method = \"vst\", nfeatures = 2000)\ncelseq2 &lt;- ScaleData(celseq2)\ncelseq2[[\"tech\"]] &lt;- \"celseq2\"\n\n# Fluidigm C1\n# Omit subset function because cells are already high quality.\nfluidigmc1 &lt;- CreateSeuratObject(counts = fluidigmc1.data)\nVlnPlot(fluidigmc1, \"nFeature_RNA\")\nfluidigmc1 &lt;- NormalizeData(fluidigmc1, normalization.method = \"LogNormalize\", scale.factor = 10000)\nfluidigmc1 &lt;- FindVariableFeatures(fluidigmc1, selection.method = \"vst\", nfeatures = 2000)\nfluidigmc1 &lt;- ScaleData(fluidigmc1)\nfluidigmc1[[\"tech\"]] &lt;- \"fluidigmc1\"\n\n# SMART-Seq2\n# In subset, use low.thresholds = 2500.\nsmartseq2 &lt;- CreateSeuratObject(counts = smartseq2.data)\nVlnPlot(smartseq2, \"nFeature_RNA\")\nsmartseq2 &lt;- subset(smartseq2, subset = nFeature_RNA &gt; 2500)\nVlnPlot(smartseq2, \"nFeature_RNA\")\nsmartseq2 &lt;- NormalizeData(smartseq2, normalization.method = \"LogNormalize\", scale.factor = 10000)\nsmartseq2 &lt;- FindVariableFeatures(smartseq2, selection.method = \"vst\", nfeatures = 2000)\nsmartseq2 &lt;- ScaleData(smartseq2)\nsmartseq2[[\"tech\"]] &lt;- \"smartseq2\"\n\n# This code sub-samples the data in order to speed up calculations and not use too much memory.\nIdents(celseq) &lt;- \"tech\"\ncelseq &lt;- subset(celseq, downsample = 500, seed = 1)\nIdents(celseq2) &lt;- \"tech\"\ncelseq2 &lt;- subset(celseq2, downsample = 500, seed = 1)\nIdents(fluidigmc1) &lt;- \"tech\"\nfluidigmc1 &lt;- subset(fluidigmc1, downsample = 500, seed = 1)\nIdents(smartseq2) &lt;- \"tech\"\nsmartseq2 &lt;- subset(smartseq2, downsample = 500, seed = 1)\n\n# Save the sub-sampled Seurat objects\nsave(celseq, celseq2, fluidigmc1, smartseq2, file = Rda.sparse.path)"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#cluster-pancreatic-datasets-without-batch-correction",
    "href": "content/day3/Lab6_batch_correction.html#cluster-pancreatic-datasets-without-batch-correction",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.3 Cluster pancreatic datasets without batch correction",
    "text": "11.3 Cluster pancreatic datasets without batch correction\nWe will first merge all the cells from the four different experiments together, and cluster all the pancreatic islet datasets to see whether there is a batch effect.\n\n\n\n\n\n\nQuestion\n\n\n\nMerge the datasets into a single Seurat object.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n# Merge Seurat objects. Original sample identities are stored in gcdata[[\"tech\"]].\n# Cell names will now have the format tech_cellID (smartseq2_cell1...)\nadd.cell.ids &lt;- c(\"celseq\", \"celseq2\", \"fluidigmc1\", \"smartseq2\")\ngcdata &lt;- merge(x = celseq, y = list(celseq2, fluidigmc1, smartseq2), add.cell.ids = add.cell.ids, merge.data = FALSE)\nIdents(gcdata) &lt;- \"tech\"  # use identity based on sample identity\ngcdata\n\n\nAn object of class Seurat \n33633 features across 6321 samples within 1 assay \nActive assay: RNA (33633 features, 2000 variable features)\n 12 layers present: counts.1, counts.2, counts.3, counts.4, data.1, scale.data.1, data.2, scale.data.2, data.3, scale.data.3, data.4, scale.data.4\n\nVlnPlot(gcdata, \"nFeature_RNA\", group.by = \"tech\")\n\n\n\n\n\n\n\n\n\nAfter merging, we will perform again the normalization, variable gene selection, and scaling.\n\n\n\n\n\n\nQuestion\n\n\n\nWhat is the difference between SelectIntegrationFeatures and FindVariableFeatures in Seurat?\nRun NormalizeData, SelectIntegrationFeatures, and ScaleData on the merged dataset.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngcdata &lt;- NormalizeData(gcdata, normalization.method = \"LogNormalize\", scale.factor = 10000)\n\n\nNormalizing layer: counts.1\n\n\nNormalizing layer: counts.2\n\n\nNormalizing layer: counts.3\n\n\nNormalizing layer: counts.4\n\nvar.genes &lt;- SelectIntegrationFeatures(\n  list(celseq, celseq2, fluidigmc1, smartseq2), \n  nfeatures = 2000, \n  verbose = TRUE, \n  fvf.nfeatures = 2000, \n  selection.method = \"vst\"\n)\nVariableFeatures(gcdata) &lt;- var.genes\ngcdata &lt;- ScaleData(gcdata, features = VariableFeatures(gcdata))\n\nCentering and scaling data matrix\n\n\n\n\n\n\n\nNow that data is merged, normalized, and scaled, we will perform principal component analysis (PCA) and visualize the data.\n\n\n\n\n\n\nQuestion\n\n\n\nDo PCA on data including only the variable genes.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngcdata &lt;- RunPCA(gcdata, features = VariableFeatures(gcdata), npcs = 40, ndims.print = 1:5, nfeatures.print = 5)\n\n\nPC_ 1 \nPositive:  IFITM3, ZFP36L1, LGALS3, S100A11, TACSTD2 \nNegative:  CHGB, CHGA, PAM, ABCC8, MIR7-3HG \nPC_ 2 \nPositive:  KRT8, ELF3, KRT18, CLDN4, TACSTD2 \nNegative:  SPARC, COL1A2, PDGFRB, COL3A1, COL15A1 \nPC_ 3 \nPositive:  TMEM212, MAB21L3, CCDC142, NLRP12, TLCD2 \nNegative:  CTSD, TIMP1, PEMT, HIF1A, GSTP1 \nPC_ 4 \nPositive:  CPA2, CTRC, PNLIP, CTRB2, CTRB1 \nNegative:  CFTR, IGFBP7, AQP1, VTCN1, TINAGL1 \nPC_ 5 \nPositive:  FLT1, KDR, ESAM, PODXL, CD93 \nNegative:  COL5A1, COL3A1, COL1A1, SFRP2, COL1A2 \n\n\n\n\n\nColor the PCA biplot by the scRNA-seq technology.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nDimPlot(gcdata, reduction = \"pca\", dims = c(1, 2), group.by = \"tech\")\n\n\n\n\n\n\n\n\n\n\nNow we will cluster the cells and visualize the clusters in reduced dimensional space.\n\n\n\n\n\n\nQuestion\n\n\n\n\nFind the k=20 nearest neighbors for each cell in the PCA space, using the first 20 principal components.\nCluster the cells.\nPerform UMAP embedding and visualize clustering results in 2D.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n# Cluster the cells using the first twenty principal components.\ngcdata &lt;- FindNeighbors(gcdata, reduction = \"pca\", dims = 1:20, k.param = 20)\n\n\nComputing nearest neighbor graph\n\n\nComputing SNN\n\ngcdata &lt;- FindClusters(gcdata, resolution = 0.8, algorithm = 1, random.seed = 100)\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 6321\nNumber of edges: 220127\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9323\nNumber of communities: 23\nElapsed time: 0 seconds\n\n# Create a UMAP visualization. \ngcdata &lt;- RunUMAP(gcdata, dims = 1:20, reduction = \"pca\", n.neighbors = 15, min.dist = 0.5, spread = 1, metric = \"euclidean\", seed.use = 1)  \n\nWarning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\nTo use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\nThis message will be shown once per session\n\n\n15:51:39 UMAP embedding parameters a = 0.583 b = 1.334\n\n\n15:51:39 Read 6321 rows and found 20 numeric columns\n\n\n15:51:39 Using Annoy for neighbor search, n_neighbors = 15\n\n\n15:51:39 Building Annoy index with metric = euclidean, n_trees = 50\n\n\n0%   10   20   30   40   50   60   70   80   90   100%\n\n\n[----|----|----|----|----|----|----|----|----|----|\n\n\n**************************************************|\n15:51:39 Writing NN index file to temp file /var/folders/dg/mbw146s905lgqgswn6w4ghk80000gn/T//RtmpmeI3uf/filec4c630907302\n15:51:39 Searching Annoy index using 1 thread, search_k = 1500\n15:51:40 Annoy recall = 100%\n15:51:40 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 15\n15:51:41 Initializing from normalized Laplacian + noise (using RSpectra)\n15:51:41 Commencing optimization for 500 epochs, with 127374 positive edges\n15:51:45 Optimization finished\n\n# Visualize the Leiden clustering and the batches on the UMAP. \n# Remember, the clustering is stored in @meta.data in column seurat_clusters and the technology is\n# stored in the column tech. Remember you can also use DimPlot\nDimPlot(gcdata, reduction = \"umap\", group.by = \"seurat_clusters\")\n\n\n\nDimPlot(gcdata, reduction = \"umap\", group.by = \"tech\")\n\n\n\n\n\n\n\nAre you surprised by the results? Compare to your expectations from the PC biplot of PC1 vs PC2.\nWhat explains these results?\n\n\nWe can assess the quality of the clustering by calculating the adjusted rand index (ARI) between the technology and the cluster labels. This goes between 0 (completely dissimilar clustering) to 1 (identical clustering). The adjustment corrects for chance grouping between cluster elements.\n\n\n\nR\n\nlibrary(fossil)\n\n\nLoading required package: maps\n\n\nLoading required package: shapefiles\n\n\nLoading required package: foreign\n\n\n\nAttaching package: 'shapefiles'\n\n\nThe following objects are masked from 'package:foreign':\n\n    read.dbf, write.dbf\n\nari &lt;- dplyr::select(gcdata[[]], tech, seurat_clusters)\nari$tech &lt;- plyr::mapvalues(ari$tech, from = c(\"celseq\", \"celseq2\", \"fluidigmc1\", \"smartseq2\"), to = c(0, 1, 2, 3))\nadj.rand.index(as.numeric(ari$tech), as.numeric(ari$seurat_clusters))\n\n[1] 0.67147"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#additional-exploration",
    "href": "content/day3/Lab6_batch_correction.html#additional-exploration",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.6 Additional exploration",
    "text": "11.6 Additional exploration\n\n11.6.1 Regressing out unwanted covariates\nLearn how to regress out different technical covariates (number of UMIs, number of genes, percent mitochondrial reads) by studying Seurat’s PBMC tutorial and the ScaleData() function.\n\n11.6.2 kBET\nWithin your RStudio session, install k-nearest neighbour batch effect test and learn how to use its functionality to quantify batch effects in the pancreatic data."
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#acknowledgements",
    "href": "content/day3/Lab6_batch_correction.html#acknowledgements",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.7 Acknowledgements",
    "text": "11.7 Acknowledgements\nThis document builds off a tutorial from the Seurat website and a tutorial from the LIGER website."
  },
  {
    "objectID": "content/day4/Lecture6_pseudotime.html",
    "href": "content/day4/Lecture6_pseudotime.html",
    "title": "12  Lecture 7 - Trajectories and pseudotimes",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7 - Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-df06f69911ab808ad1be095f974e0508\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-5e712df3e0816821987134d06cdb73a1\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day3/Lab6_batch_correction.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;11&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day4/Lab7_pseudotime.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;13&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day4/Lab7_pseudotime.html#process-testis-data-in-r",
    "href": "content/day4/Lab7_pseudotime.html#process-testis-data-in-r",
    "title": "\n13  Lab 8: Pseudotime analyses\n",
    "section": "\n13.1 Process testis data in R",
    "text": "13.1 Process testis data in R\n\n13.1.1 Import testis data from GSE112013 and pre-process it\nWe will work on a testis dataset, from the “The adult human testis transcriptional cell atlas” study (Guo et al., 2018). This dataset contains single-cell RNAseq data from human testis. It is available on the GEO database under the accession number GSE112013.\nThe pre-processing of the testis dataset has already been done for you. We have applied the different analysis steps we have learned over the past three days to the count matrix GSE112013_Combined_UMI_table.txt.gz. See the code below for the details of pre-processing steps.\n\n\n\n\n\n\n👀 Data pre-processing 👇\n\n\n\n\n\nCheck the GEO page for supplementary processed data, and download the GSE112013_Combined_UMI_table.txt.gz table.\nWith this data, we will:\n\nImport the dataset in R as a SingleCellExperiment object,\nRemove doublets,\nFilter genes,\nNormalize counts,\nCorrect for batch effect,\nCluster cells.\n\n\n\n\nR\n\nlibrary(SingleCellExperiment)\nlibrary(tidyverse)\n\n# Download raw file\ndir.create('Guo_testis')\ndownload.file(\n    'https://ftp.ncbi.nlm.nih.gov/geo/series/GSE112nnn/GSE112013/suppl/GSE112013_Combined_UMI_table.txt.gz', \n    'Guo_testis/GSE112013_Combined_UMI_table.txt.gz'\n)\nsystem('gunzip Guo_testis/GSE112013_Combined_UMI_table.txt.gz')\n\n# Create SingleCellExperiment object\nx &lt;- vroom::vroom('Guo_testis/GSE112013_Combined_UMI_table.txt')\ncounts &lt;- as.matrix(x[, -1])\ncounts &lt;- as(counts, 'dgCMatrix')\ngenes &lt;- as.data.frame(x[, 1])\ncells &lt;- data.frame(cellid = colnames(x[, -1]))\ntestis &lt;- SingleCellExperiment(\n    assays = list(counts = counts), \n    colData = cells, \n    rowData = genes\n)\ntestis$Barcode &lt;- str_replace(testis$cellid, 'Donor.-', '') |&gt; str_replace('-.', '')\ntestis &lt;- testis[, !duplicated(testis$Barcode)]\ntestis$donor &lt;- str_replace(testis$cellid, '-.*', '')\ntestis$replicate &lt;- str_replace(testis$cellid, '.*-', '')\nrownames(testis) &lt;- rowData(testis)$Gene\nset.seed(1000)\n\n# Remove doublets\ntestis &lt;- scDblFinder::scDblFinder(testis)\ntestis &lt;- testis[, testis$scDblFinder.class == 'singlet']\n\n# Recover human genomic, protein-coding gene informations\nlibrary(plyranges)\nah &lt;- AnnotationHub::AnnotationHub()\nAnnotationHub::query(ah, c('gene annotation', 'ensembl', '102', 'homo_sapiens', 'GRCh38'))\ngtf &lt;- AnnotationHub::query(ah, c('Homo_sapiens.GRCh38.102.chr.gtf'))[[1]]\ngenes &lt;- gtf |&gt; \n    filter(type == 'gene') |&gt; \n    filter(gene_biotype == 'protein_coding') |&gt; \n    filter(gene_source == 'ensembl_havana') \ngenes &lt;- genes[!duplicated(genes$gene_name)]\n\n# Annotate genes in testis dataset and filter out non-relevant genes\ntestis &lt;- testis[genes$gene_name[genes$gene_name %in% rownames(testis)], ]\nrowRanges(testis) &lt;- genes[match(rownames(testis), genes$gene_name)]\nrowData(testis) &lt;- rowData(testis)[, c('gene_name', 'gene_id')]\nrownames(testis) &lt;- scuttle::uniquifyFeatureNames(rowData(testis)$gene_id, rowData(testis)$gene_name)\n\n# Get preliminary QCs per cell and per gene\ntestis &lt;- scuttle::addPerCellQCMetrics(testis)\ntestis &lt;- scuttle::addPerFeatureQCMetrics(testis)\n\n# Filter out genes not expressed in at least 10 cells\ntestis &lt;- testis[rowSums(assay(testis, 'counts') &gt; 0) &gt;= 10, ]\n\n# Normalize counts using VST\ncnts &lt;- as(assay(testis, 'counts'), 'dgCMatrix')\ncolnames(cnts) &lt;- testis$cellid\nrownames(cnts) &lt;- rownames(testis)\ntestis_vst &lt;- sctransform::vst(cnts, return_cell_attr = TRUE)\ncorrected_cnts &lt;- sctransform::correct(testis_vst)\nassay(testis, 'corrected_counts', withDimnames = FALSE) &lt;- corrected_cnts\nassay(testis, 'logcounts', withDimnames = FALSE) &lt;- log1p(corrected_cnts)\n\n# Computing biological variance of each gene\ntestis_variance &lt;- scran::modelGeneVar(testis)\nHVGs &lt;- scran::getTopHVGs(testis_variance, prop = 0.1)\nrowData(testis)$isHVG &lt;- rownames(testis) %in% HVGs\n\n# Embedding dataset in PCA space, correcting for batch effect\nmergedBatches &lt;- batchelor::fastMNN(\n    testis, \n    batch = testis$donor, \n    subset.row = HVGs, \n    BPPARAM = BiocParallel::MulticoreParam(workers = 12)\n)\nreducedDim(testis, 'corrected') &lt;- reducedDim(mergedBatches, 'corrected')\n\n# Embedding dataset in shared k-nearest neighbors graph for clustering \ngraph &lt;- scran::buildSNNGraph(testis, use.dimred = 'corrected')\n\n# Cluster cells using Louvain community finding algorithm\ntestis_clust &lt;- igraph::cluster_louvain(graph)$membership\ntable(testis_clust)\ntestis$cluster &lt;- factor(testis_clust)\n\n# Embedding dataset in TSNE space for visualization\nset.seed(10)\ntestis &lt;- scater::runTSNE(testis, dimred = 'corrected')\n\n# Visualize embeddings\np &lt;- cowplot::plot_grid(\n    scater::plotReducedDim(testis, 'corrected', colour_by = 'donor'),\n    scater::plotReducedDim(testis, 'corrected', colour_by = 'cluster'),\n    scater::plotReducedDim(testis, 'TSNE', colour_by = 'donor'),\n    scater::plotReducedDim(testis, 'TSNE', colour_by = 'cluster')\n)\np\nsaveRDS(testis, '~/Share/Guo_testis.rds')\n\n\n\n\n\n\n13.1.2 Annotate cells using HPA resources\nThe Human Protein Atlas (HPA) is a valuable resource for cell type annotations. It provides single-cell RNAseq data for a large number of cell types.\n\n\n\n\n\n\nQuestion\n\n\n\nDownload HPA scRNAseq atlas (combined per cell type) from here, and import it in R as a SummarizedExperiment object.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(SingleCellExperiment)\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, colCounts, colCummaxs, colCummins, colCumprods, colCumsums, colDiffs, colIQRDiffs, colIQRs, colLogSumExps,\n    colMadDiffs, colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, colSums2, colTabulates,\n    colVarDiffs, colVars, colWeightedMads, colWeightedMeans, colWeightedMedians, colWeightedSds, colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, rowCollapse,\n    rowCounts, rowCummaxs, rowCummins, rowCumprods, rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, rowWeightedMads, rowWeightedMeans,\n    rowWeightedMedians, rowWeightedSds, rowWeightedVars\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted,\n    lapply, Map, mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, table, tapply, union, unique,\n    unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with 'browseVignettes()'. To cite Bioconductor, see 'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ lubridate::%within%() masks IRanges::%within%()\n✖ dplyr::collapse()     masks IRanges::collapse()\n✖ dplyr::combine()      masks Biobase::combine(), BiocGenerics::combine()\n✖ dplyr::count()        masks matrixStats::count()\n✖ dplyr::desc()         masks IRanges::desc()\n✖ tidyr::expand()       masks S4Vectors::expand()\n✖ dplyr::filter()       masks stats::filter()\n✖ dplyr::first()        masks S4Vectors::first()\n✖ dplyr::lag()          masks stats::lag()\n✖ ggplot2::Position()   masks BiocGenerics::Position(), base::Position()\n✖ purrr::reduce()       masks GenomicRanges::reduce(), IRanges::reduce()\n✖ dplyr::rename()       masks S4Vectors::rename()\n✖ lubridate::second()   masks S4Vectors::second()\n✖ lubridate::second&lt;-() masks S4Vectors::second&lt;-()\n✖ dplyr::slice()        masks IRanges::slice()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nHPA &lt;- read_tsv('~/Share/rna_single_cell_type.tsv.zip') |&gt; \n    pivot_wider(names_from = `Cell type`, values_from = 'nTPM') |&gt; \n    dplyr::select(-Gene) |&gt; \n    distinct(`Gene name`, .keep_all = TRUE) |&gt; \n    column_to_rownames('Gene name')\n\nRows: 1626642 Columns: 4\n── Column specification ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (3): Gene, Gene name, Cell type\ndbl (1): nTPM\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nHPA_se &lt;- SummarizedExperiment::SummarizedExperiment(HPA, colData = tibble(cell_type = colnames(HPA)), assays = list('logcounts' = HPA))\n\n\n\n\nHow many and what cell types are profiled?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlength(HPA_se$cell_type)\n\n\n[1] 81\n\nHPA_se$cell_type\n\n [1] \"Adipocytes\"                      \"Alveolar cells type 1\"           \"Alveolar cells type 2\"           \"Astrocytes\"                      \"B-cells\"                        \n [6] \"Basal keratinocytes\"             \"Basal prostatic cells\"           \"Basal respiratory cells\"         \"Basal squamous epithelial cells\" \"Bipolar cells\"                  \n[11] \"Breast glandular cells\"          \"Breast myoepithelial cells\"      \"Cardiomyocytes\"                  \"Cholangiocytes\"                  \"Ciliated cells\"                 \n[16] \"Club cells\"                      \"Collecting duct cells\"           \"Cone photoreceptor cells\"        \"Cytotrophoblasts\"                \"dendritic cells\"                \n[21] \"Distal enterocytes\"              \"Distal tubular cells\"            \"Ductal cells\"                    \"Early spermatids\"                \"Endometrial stromal cells\"      \n[26] \"Endothelial cells\"               \"Enteroendocrine cells\"           \"Erythroid cells\"                 \"Excitatory neurons\"              \"Exocrine glandular cells\"       \n[31] \"Extravillous trophoblasts\"       \"Fibroblasts\"                     \"Gastric mucus-secreting cells\"   \"Glandular and luminal cells\"     \"granulocytes\"                   \n[36] \"Granulosa cells\"                 \"Hepatocytes\"                     \"Hofbauer cells\"                  \"Horizontal cells\"                \"Inhibitory neurons\"             \n[41] \"Intestinal goblet cells\"         \"Ionocytes\"                       \"Kupffer cells\"                   \"Langerhans cells\"                \"Late spermatids\"                \n[46] \"Leydig cells\"                    \"Lymphatic endothelial cells\"     \"Macrophages\"                     \"Melanocytes\"                     \"Mesothelial cells\"              \n[51] \"Microglial cells\"                \"monocytes\"                       \"Mucus glandular cells\"           \"Muller glia cells\"               \"NK-cells\"                       \n[56] \"Oligodendrocyte precursor cells\" \"Oligodendrocytes\"                \"Oocytes\"                         \"Ovarian stromal cells\"           \"Pancreatic endocrine cells\"     \n[61] \"Paneth cells\"                    \"Peritubular cells\"               \"Plasma cells\"                    \"Prostatic glandular cells\"       \"Proximal enterocytes\"           \n[66] \"Proximal tubular cells\"          \"Rod photoreceptor cells\"         \"Salivary duct cells\"             \"Schwann cells\"                   \"Secretory cells\"                \n[71] \"Serous glandular cells\"          \"Sertoli cells\"                   \"Skeletal myocytes\"               \"Smooth muscle cells\"             \"Spermatocytes\"                  \n[76] \"Spermatogonia\"                   \"Squamous epithelial cells\"       \"Suprabasal keratinocytes\"        \"Syncytiotrophoblasts\"            \"T-cells\"                        \n[81] \"Undifferentiated cells\"         \n\n\n\n\n\n\n\nWe can use the HPA reference to annotate cell types in the testis dataset.\n\n\n\n\n\n\nQuestion\n\n\n\nUse SingleR to annotate cell types in the testis dataset using HPA reference.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ntestis &lt;- readRDS('~/Share/Guo_testis.rds')\npredictions &lt;- SingleR::SingleR(\n    test = testis, \n    ref = HPA_se, \n    labels = colData(HPA_se)$cell_type, \n    clusters = testis$cluster\n)\ntestis$annotation &lt;- predictions$labels[testis$cluster]\ncowplot::plot_grid(\n    scater::plotReducedDim(testis, dimred = 'corrected', colour_by = 'cluster', text_by = 'cluster') + ggtitle('Testis data, PCA, graph-based clusters'), \n    scater::plotReducedDim(testis, dimred = 'corrected', colour_by = 'annotation', text_by = 'annotation') + ggtitle('PCA, Annotations transferred from HPA'),\n    scater::plotReducedDim(testis, dimred = 'TSNE', colour_by = 'cluster', text_by = 'cluster') + ggtitle('Testis data, tSNE, graph-based clusters'), \n    scater::plotReducedDim(testis, dimred = 'TSNE', colour_by = 'annotation', text_by = 'annotation') + ggtitle('tSNE, Annotations transferred from HPA')\n)\n\n\n\n\n\n\n\n\n\n\n\n13.1.3 Filter the testis dataset to only germinal cells.\nIn this notebook, we will focus on germinal cells only.\n\n\n\n\n\n\nQuestion\n\n\n\nFilter the testis dataset to only retain germinal cells.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngermcells &lt;- testis[\n    , \n    testis$annotation %in% c(\"Spermatogonia\", \"Spermatocytes\", \"Early spermatids\", \"Late spermatids\")\n]"
  },
  {
    "objectID": "content/day4/Lab7_pseudotime.html#trajectory-inference-ti-in-scrnaseq",
    "href": "content/day4/Lab7_pseudotime.html#trajectory-inference-ti-in-scrnaseq",
    "title": "\n13  Lab 8: Pseudotime analyses\n",
    "section": "\n13.2 Trajectory inference (TI) in scRNAseq",
    "text": "13.2 Trajectory inference (TI) in scRNAseq\nAn important question in scRNAseq field of research is: how to identify a cell trajectory from high-dimensional expression data and map individual cells onto it? A large number of methods have currently emerged, each one with their own specificities, assumptions, and strengths. A nice breakdown (from 2019, so already very outdated!) is available from Saelens et al., Nat. Biotech. 2018 (doi: 10.1038/s41587-019-0071-9):\n\n\n13.2.1 Trajectory\nSlingshot is perhaps one of the most widely used algorithms for users who want to focus on R-based approaches.\n\n\n\n\n\n\nQuestion\n\n\n\nRead Slingshot documentation to understand how to identify lineages in a scRNAseq dataset in R.\nWhy is it recommended to infer lineages from PCA space rather than t-SNE or UMAP space, even though these spaces do “reveal” an obvious trajectory in 2D?\nInfer lineages, using cluster annotations as information to build the MST. Note that you will first need to remove the 50th PCA dimension for slingshot to work (bug reported).\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nreducedDim(germcells, 'corrected_2') &lt;- reducedDim(germcells, 'corrected')[, 1:49]\ngermcells_slingshot &lt;- slingshot::slingshot(\n    germcells, \n    reducedDim = 'corrected_2', \n    clusterLabels = germcells$annotation\n)\nslingshot::slingLineages(germcells_slingshot)\n\n\n$Lineage1\n[1] \"Late spermatids\"  \"Early spermatids\" \"Spermatocytes\"    \"Spermatogonia\"   \n\n\n\n\n\n\n\n\n13.2.2 Pseudotime\nslingshot automatically deduces a pseudotime for each cell, based on the inferred lineage. It can be useful to visualize the trajectory of cells in a 2D space, and to order cells along the trajectory.\n\n\n\n\n\n\nQuestion\n\n\n\nRecover pseudotime values and principal curves from slingshot output.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n# Fetching pseudotime\ngermcells$pseudotime &lt;- slingshot::slingPseudotime(germcells_slingshot)[, 'Lineage1']\n\n# Fetching principal curve in PCA space\npca_curve &lt;- slingshot::slingCurves(germcells_slingshot, as.df = TRUE)\ncolnames(pca_curve) &lt;- paste0('PC', 1:ncol(pca_curve))\nhead(pca_curve)\n\n\n      PC1     PC2      PC3      PC4      PC5       PC6     PC7        PC8      PC9      PC10     PC11        PC12      PC13      PC14      PC15     PC16       PC17      PC18       PC19      PC20\n1 0.53255 0.12770 -0.33383 0.036078 -0.28674 -0.042046 0.13734 -0.0099950 0.026943 -0.050426 0.029891  0.00523859 -0.018911 -0.025575 -0.010748 0.020062 -0.0040499 0.0059456 -0.0089460 -0.016504\n2 0.53314 0.12574 -0.32473 0.034858 -0.27366 -0.040134 0.13099 -0.0091373 0.025707 -0.047675 0.027900  0.00369063 -0.019211 -0.024697 -0.011852 0.021232 -0.0056933 0.0081235 -0.0086916 -0.018824\n3 0.53373 0.12378 -0.31562 0.033638 -0.26059 -0.038223 0.12463 -0.0082795 0.024471 -0.044924 0.025909  0.00214267 -0.019511 -0.023819 -0.012955 0.022401 -0.0073367 0.0103014 -0.0084373 -0.021144\n4 0.53432 0.12182 -0.30652 0.032417 -0.24752 -0.036311 0.11828 -0.0074218 0.023234 -0.042174 0.023918  0.00059497 -0.019812 -0.022941 -0.014059 0.023570 -0.0089799 0.0124791 -0.0081829 -0.023463\n5 0.53491 0.11986 -0.29741 0.031197 -0.23445 -0.034396 0.11193 -0.0065652 0.022000 -0.039433 0.021936 -0.00094697 -0.020113 -0.022066 -0.015167 0.024740 -0.0106199 0.0146528 -0.0079287 -0.025777\n6 0.53549 0.11789 -0.28827 0.029976 -0.22137 -0.032474 0.10560 -0.0057110 0.020771 -0.036713 0.019972 -0.00247587 -0.020416 -0.021198 -0.016285 0.025909 -0.0122525 0.0168175 -0.0076749 -0.028076\n         PC21      PC22       PC23      PC24        PC25      PC26      PC27       PC28       PC29       PC30      PC31       PC32       PC33      PC34        PC35      PC36       PC37       PC38\n1 -0.00292927 -0.017404 -0.0087785 0.0074640  5.4695e-05 0.0100871 -0.010260 -0.0035944 -0.0062462 -0.0068927 0.0078310 -0.0015015 -0.0060110 0.0087654 -5.8788e-04 0.0083160 -0.0041018 -0.0025883\n2 -0.00236729 -0.017099 -0.0093209 0.0071747 -6.9630e-04 0.0100163 -0.010516 -0.0036699 -0.0069872 -0.0065120 0.0080722 -0.0016012 -0.0054229 0.0086525 -2.6930e-04 0.0082659 -0.0044179 -0.0028582\n3 -0.00180531 -0.016794 -0.0098634 0.0068854 -1.4473e-03 0.0099455 -0.010772 -0.0037454 -0.0077282 -0.0061313 0.0083134 -0.0017009 -0.0048349 0.0085396  4.9288e-05 0.0082158 -0.0047340 -0.0031281\n4 -0.00124336 -0.016489 -0.0104058 0.0065961 -2.1982e-03 0.0098747 -0.011028 -0.0038209 -0.0084691 -0.0057504 0.0085546 -0.0018006 -0.0042468 0.0084266  3.6783e-04 0.0081658 -0.0050501 -0.0033981\n5 -0.00068232 -0.016182 -0.0109479 0.0063063 -2.9476e-03 0.0098036 -0.011285 -0.0038952 -0.0092075 -0.0053672 0.0087948 -0.0019006 -0.0036577 0.0083132  6.8528e-04 0.0081161 -0.0053667 -0.0036683\n6 -0.00012305 -0.015872 -0.0114893 0.0060156 -3.6933e-03 0.0097315 -0.011544 -0.0039673 -0.0099406 -0.0049789 0.0090328 -0.0020012 -0.0030666 0.0081991  1.0003e-03 0.0080672 -0.0056841 -0.0039391\n       PC39      PC40        PC41      PC42       PC43       PC44       PC45      PC46       PC47        PC48        PC49 PC50 PC51\n1 0.0057976 0.0010192 -1.1903e-03 0.0024878 -0.0027841 0.00064003 0.00340531 0.0053154 -0.0028912 -0.00019255 -0.00221046    1    1\n2 0.0060588 0.0015296 -9.6893e-04 0.0026406 -0.0026553 0.00071086 0.00282910 0.0048515 -0.0025377 -0.00027362 -0.00173842    2    1\n3 0.0063200 0.0020400 -7.4761e-04 0.0027933 -0.0025265 0.00078169 0.00225288 0.0043876 -0.0021843 -0.00035469 -0.00126638    3    1\n4 0.0065813 0.0025503 -5.2628e-04 0.0029460 -0.0023976 0.00085250 0.00167667 0.0039237 -0.0018308 -0.00043577 -0.00079433    4    1\n5 0.0068431 0.0030609 -3.0488e-04 0.0030985 -0.0022684 0.00092308 0.00110042 0.0034599 -0.0014773 -0.00051683 -0.00032216    5    1\n6 0.0071058 0.0035716 -8.3373e-05 0.0032503 -0.0021385 0.00099312 0.00052435 0.0029962 -0.0011239 -0.00059804  0.00015009    6    1\n\n\n\n\n\nWe would like to visualize the trajectory of cells in our TSNE space, but the principal curve is only available in PCA space. We can use slingshot to embed it in the TSNE space!\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ntsne_curve &lt;- slingshot::embedCurves(germcells_slingshot, 'TSNE', smoother = 'loess', span = 0.1) |&gt; \n    slingshot::slingCurves(as.df = TRUE)\ntsne_curve &lt;- tsne_curve[order(tsne_curve$Order), ]\nhead(tsne_curve)\n\n\n                           TSNE1  TSNE2 Order Lineage\nDonor3-AACTCCCGTCTGGTCG-2 -25.23 11.729     1       1\nDonor1-GGGATGACATTCTCAT-2 -25.23 11.729     2       1\nDonor1-CGCTTCATCTAACTGG-1 -25.23 11.729     3       1\nDonor1-GGGTCTGAGCTGATAA-2 -25.23 11.729     4       1\nDonor1-CGGACACTCAGCAACT-1 -25.23 11.729     5       1\nDonor1-GGATTACAGTCAATAG-2 -25.23 11.729     6       1\n\n\n\n\n\nPlot PCA and tSNE embeddings, coloring cells by either their annotation or their pseudotime value. Overlay the principal curves to each embedding.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndf &lt;- tibble(\n    PC1 = reducedDim(germcells, 'corrected')[,1], \n    PC2 = reducedDim(germcells, 'corrected')[,2], \n    TSNE1 = reducedDim(germcells, 'TSNE')[,1], \n    TSNE2 = reducedDim(germcells, 'TSNE')[,2], \n    annotation = germcells$annotation, \n    pseudotime = germcells$pseudotime\n)\ncowplot::plot_grid(\n    df |&gt; \n        ggplot() + \n        geom_point(aes(PC1, PC2, col = annotation)) + \n        geom_path(data = pca_curve, aes(x = PC1, y = PC2)) + \n        theme_bw() + \n        coord_fixed(),\n    df |&gt; \n        ggplot() + \n        geom_point(aes(TSNE1, TSNE2, col = annotation)) + \n        geom_path(data = tsne_curve, aes(x = TSNE1, y = TSNE2)) + \n        theme_bw() + \n        coord_fixed(),\n    df |&gt; \n        ggplot() + \n        geom_point(aes(PC1, PC2, col = pseudotime)) + \n        geom_path(data = pca_curve, aes(x = PC1, y = PC2)) + \n        theme_bw() + \n        coord_fixed(),\n    df |&gt; \n        ggplot() + \n        geom_point(aes(TSNE1, TSNE2, col = pseudotime)) + \n        geom_path(data = tsne_curve, aes(x = TSNE1, y = TSNE2)) + \n        theme_bw() + \n        coord_fixed()\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCheck the distribution of pseudotime values across the different cell clusters.\nWhat do you observe? Where you expecting this?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ntibble(\n    annotation = factor(germcells$annotation, c(\"Spermatogonia\", \"Spermatocytes\", \"Early spermatids\", \"Late spermatids\")), \n    pseudotime = germcells$pseudotime\n) |&gt; \n    ggplot(aes(x = annotation, y = pseudotime, fill = annotation)) + \n    geom_violin(scale = 'width') + \n    geom_boxplot(outlier.shape = NULL, width = 0.1, fill = 'white') + \n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) \n\n\n\n\n\n\n\n\nCorrect pseudotime values as you would expect it to be\n\n\n\nR\n\ngermcells$pseudotime &lt;- scales::rescale((-1 * slingshot::slingPseudotime(germcells_slingshot)[, 'Lineage1']), c(0, 1))\n\n\n\n\n\n13.2.3 BONUS: Daunting snippet but that makes a cool figure for a paper: modeling pseudotime-dependent gene expression\nUsing pseudotime / cell, one can model gene expression along the differentiation process. This alleviates the need to study gene expression per cell, and allows one to focus on process-related effects (e.g. gene expression during a developmental trajectory).\n\n\n\n\n\n\nQuestion\n\n\n\nTry to do so for few markers of spermatogonia, spermatocytes and spermatids.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngenes &lt;- c('ID4', 'SYCP3', 'DMC1', 'ACR', 'PRM1', 'PGK2')\nfitExprs &lt;- logcounts(germcells[genes, ]) |&gt; # ----------------------------------- Get norm. counts for genes of interest\n    as.matrix() |&gt; \n    t() |&gt; \n    as_tibble() |&gt; \n    mutate(  # ----------------------------------------------------------------- Add information for each cell\n        cellID = colnames(germcells), \n        annotation = factor(germcells$annotation, c(\"Spermatogonia\", \"Spermatocytes\", \"Early spermatids\", \"Late spermatids\")), \n        pseudotime = germcells$pseudotime\n    ) |&gt; \n    pivot_longer(contains(genes), names_to = 'gene', values_to = 'obs_expr') |&gt; # - Pivot in \"long\" tidy format \n    mutate(gene = factor(gene, genes)) |&gt; \n    group_by(gene) |&gt; # ------------------------------------------------------- Group rows by genes\n    nest(.key = 'data') |&gt; # -------------------------------------------------- For each gene, extract the subtable into a column named data\n    mutate(\n        gamModel = map(data, ~mgcv::gam(obs_expr ~ s(pseudotime, bs = \"cs\"), data = .)), \n        gamFitted_expr = map(gamModel, predict) # ------------------------------ For each gene, fit the expression values ~ pseudotime with a GAM\n    ) |&gt; \n    dplyr::select(-ends_with('Model')) |&gt; \n    unnest(c(data, ends_with('_expr'))) # -------------------------------------- Unnest all the modelled expressions\nggplot(fitExprs) + \n    geom_point(aes(x = pseudotime, y = obs_expr, col = annotation), alpha = 0.5) + \n    geom_line(aes(x = pseudotime, y = gamFitted_expr), col = 'white', size = 2, alpha = 0.5) + \n    geom_line(aes(x = pseudotime, y = gamFitted_expr), col = '#af2d0c', size = 1) +\n    theme_bw() + \n    facet_grid(gene~., scales = 'free') + \n    labs(y = 'logcounts') + \n    ggtitle('Fitted models of pseudotime-dependent gene expression')\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "content/day4/Lab7_pseudotime.html#ordering-trajectory-with-rna-velocity",
    "href": "content/day4/Lab7_pseudotime.html#ordering-trajectory-with-rna-velocity",
    "title": "\n13  Lab 8: Pseudotime analyses\n",
    "section": "\n13.3 Ordering trajectory with RNA velocity",
    "text": "13.3 Ordering trajectory with RNA velocity\nAs we saw earlier, TI does not necessarily know which direction is right for a given trajectory. This orientation can be sometimes refined using RNA velocity. Let’s see whether RNA velocity helps orientating our spermatocyte differentiation lineage trajectory here.\n\n\n\n\n\n\nQuestion\n\n\n\n\nRead velociraptor documentation. What do you need to compute RNA velocity scores in R?\nImport spliced and unspliced counts computed with velocyto in R.\nTry and compute RNA velocity.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Import entire GSE112013 dataset with spliced/unspliced counts \nfull_GSE112013_counts &lt;- LoomExperiment::import('~/Share/Guo_testis/Guo_testis_full-counts.loom')\nfull_GSE112013_counts\n\n## - Filter `germcells` genes and cells to only retain those present in `full_GSE112013_counts`\ngermcells &lt;- germcells[\n    rowData(germcells)$gene_id %in% rowData(full_GSE112013_counts)$Accession, \n    germcells$Barcode %in% full_GSE112013_counts$Barcode\n]\n\n## - Reorder rows of `full_GSE112013_counts_germcells` to match those of `germcells`\nfull_GSE112013_counts_germcells &lt;- full_GSE112013_counts[match(rowData(germcells)$gene_id, rowData(full_GSE112013_counts)$Accession), match(germcells$Barcode, full_GSE112013_counts$Barcode)]\ndim(germcells)\ndim(full_GSE112013_counts_germcells)\n\n## - Add spliced/unspliced counts to germcells\nassay(germcells, 'spliced', withDimnames=FALSE) &lt;- as(assay(full_GSE112013_counts_germcells, 'spliced'), 'dgCMatrix')\nassay(germcells, 'unspliced', withDimnames=FALSE) &lt;- as(assay(full_GSE112013_counts_germcells, 'unspliced'), 'dgCMatrix')\ngermcells\n\n## - Run velociraptor\nvelo_out &lt;- velociraptor::scvelo(\n    germcells, \n    assay.X = \"counts\", \n    subset.row = rowData(germcells)$isHVG, \n    use.dimred = \"corrected\"\n)\nvelo_out\n\n\n\n\n\n\n\n\nEmbed the velocity field in tSNE scRNAseq embedding and plot the RNA velocity field on top of tSNE projection. Conclude.\n\n\n\n\nR\n\nembedded_velo &lt;- velociraptor::embedVelocity(reducedDim(germcells, \"TSNE\"), velo_out)\nhead(embedded_velo)\ngrid_df &lt;- velociraptor::gridVectors(reducedDim(germcells, \"TSNE\"), embedded_velo, resolution = 30, scale = TRUE)\nhead(grid_df)\nscater::plotReducedDim(germcells, 'TSNE', colour_by = \"annotation\", point_alpha = 0.5) +\n    geom_segment(\n        data = grid_df, \n        mapping = aes(x = start.1, y = start.2, xend = end.1, yend = end.2), \n        arrow = arrow(length = unit(0.05, \"inches\"), type = \"closed\")\n    )"
  },
  {
    "objectID": "content/day4/Lab7_pseudotime.html#session-info",
    "href": "content/day4/Lab7_pseudotime.html#session-info",
    "title": "\n13  Lab 8: Pseudotime analyses\n",
    "section": "\n13.4 Session info",
    "text": "13.4 Session info\n\n\n─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.1 (2024-06-14)\n os       macOS Sonoma 14.6.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Paris\n date     2024-10-31\n pandoc   2.19.2 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n package              * version date (UTC) lib source\n abind                  1.4-8   2024-09-12 [1] CRAN (R 4.4.1)\n beachmat               2.20.0  2024-05-06 [1] Bioconduc~\n beeswarm               0.4.0   2021-06-01 [1] CRAN (R 4.4.0)\n Biobase              * 2.64.0  2024-04-30 [1] Bioconduc~\n BiocGenerics         * 0.50.0  2024-04-30 [1] Bioconduc~\n BiocNeighbors          1.22.0  2024-04-30 [1] Bioconduc~\n BiocParallel           1.38.0  2024-04-30 [1] Bioconduc~\n BiocSingular           1.20.0  2024-04-30 [1] Bioconduc~\n bit                    4.5.0   2024-09-20 [1] CRAN (R 4.4.1)\n bit64                  4.5.2   2024-09-22 [1] CRAN (R 4.4.1)\n cachem                 1.1.0   2024-05-16 [1] CRAN (R 4.4.0)\n cli                    3.6.3   2024-06-21 [1] CRAN (R 4.4.0)\n codetools              0.2-20  2024-03-31 [1] CRAN (R 4.4.1)\n colorspace             2.1-1   2024-07-26 [1] CRAN (R 4.4.0)\n cowplot                1.1.3   2024-01-22 [1] CRAN (R 4.4.0)\n crayon                 1.5.3   2024-06-20 [1] CRAN (R 4.4.0)\n DelayedArray           0.30.1  2024-05-30 [1] Bioconduc~\n DelayedMatrixStats     1.26.0  2024-04-30 [1] Bioconduc~\n devtools               2.4.5   2022-10-11 [1] CRAN (R 4.4.0)\n digest                 0.6.37  2024-08-19 [1] CRAN (R 4.4.1)\n dplyr                * 1.1.4   2023-11-17 [1] CRAN (R 4.4.0)\n ellipsis               0.3.2   2021-04-29 [1] CRAN (R 4.4.0)\n evaluate               1.0.1   2024-10-10 [1] CRAN (R 4.4.1)\n fansi                  1.0.6   2023-12-08 [1] CRAN (R 4.4.0)\n farver                 2.1.2   2024-05-13 [1] CRAN (R 4.4.0)\n fastmap                1.2.0   2024-05-15 [1] CRAN (R 4.4.0)\n forcats              * 1.0.0   2023-01-29 [1] CRAN (R 4.4.0)\n fs                     1.6.4   2024-04-25 [1] CRAN (R 4.4.0)\n generics               0.1.3   2022-07-05 [1] CRAN (R 4.4.0)\n GenomeInfoDb         * 1.40.1  2024-06-16 [1] Bioconduc~\n GenomeInfoDbData       1.2.12  2024-10-29 [1] Bioconductor\n GenomicRanges        * 1.56.2  2024-10-09 [1] Bioconduc~\n ggbeeswarm             0.7.2   2023-04-29 [1] CRAN (R 4.4.0)\n ggplot2              * 3.5.1   2024-04-23 [1] CRAN (R 4.4.0)\n ggrepel                0.9.6   2024-09-07 [1] CRAN (R 4.4.1)\n glue                   1.8.0   2024-09-30 [1] CRAN (R 4.4.1)\n gridExtra              2.3     2017-09-09 [1] CRAN (R 4.4.0)\n gtable                 0.3.6   2024-10-25 [1] CRAN (R 4.4.1)\n hms                    1.1.3   2023-03-21 [1] CRAN (R 4.4.0)\n htmltools              0.5.8.1 2024-04-04 [1] CRAN (R 4.4.0)\n htmlwidgets            1.6.4   2023-12-06 [1] CRAN (R 4.4.0)\n httpuv                 1.6.15  2024-03-26 [1] CRAN (R 4.4.0)\n httr                   1.4.7   2023-08-15 [1] CRAN (R 4.4.0)\n igraph                 2.1.1   2024-10-19 [1] CRAN (R 4.4.1)\n IRanges              * 2.38.1  2024-07-03 [1] Bioconduc~\n irlba                  2.3.5.1 2022-10-03 [1] CRAN (R 4.4.0)\n jsonlite               1.8.9   2024-09-20 [1] CRAN (R 4.4.1)\n knitr                  1.48    2024-07-07 [1] CRAN (R 4.4.0)\n labeling               0.4.3   2023-08-29 [1] CRAN (R 4.4.0)\n later                  1.3.2   2023-12-06 [1] CRAN (R 4.4.0)\n lattice                0.22-6  2024-03-20 [1] CRAN (R 4.4.1)\n lifecycle              1.0.4   2023-11-07 [1] CRAN (R 4.4.0)\n lubridate            * 1.9.3   2023-09-27 [1] CRAN (R 4.4.0)\n magrittr               2.0.3   2022-03-30 [1] CRAN (R 4.4.0)\n Matrix                 1.7-1   2024-10-18 [1] CRAN (R 4.4.1)\n MatrixGenerics       * 1.16.0  2024-04-30 [1] Bioconduc~\n matrixStats          * 1.4.1   2024-09-08 [1] CRAN (R 4.4.1)\n memoise                2.0.1   2021-11-26 [1] CRAN (R 4.4.0)\n mgcv                   1.9-1   2023-12-21 [1] CRAN (R 4.4.1)\n mime                   0.12    2021-09-28 [1] CRAN (R 4.4.0)\n miniUI                 0.1.1.1 2018-05-18 [1] CRAN (R 4.4.0)\n munsell                0.5.1   2024-04-01 [1] CRAN (R 4.4.0)\n nlme                   3.1-164 2023-11-27 [1] CRAN (R 4.4.1)\n pillar                 1.9.0   2023-03-22 [1] CRAN (R 4.4.0)\n pkgbuild               1.4.5   2024-10-28 [1] CRAN (R 4.4.1)\n pkgconfig              2.0.3   2019-09-22 [1] CRAN (R 4.4.0)\n pkgload                1.4.0   2024-06-28 [1] CRAN (R 4.4.0)\n princurve              2.1.6   2021-01-18 [1] CRAN (R 4.4.0)\n profvis                0.4.0   2024-09-20 [1] CRAN (R 4.4.1)\n promises               1.3.0   2024-04-05 [1] CRAN (R 4.4.0)\n purrr                * 1.0.2   2023-08-10 [1] CRAN (R 4.4.0)\n R6                     2.5.1   2021-08-19 [1] CRAN (R 4.4.0)\n Rcpp                   1.0.13  2024-07-17 [1] CRAN (R 4.4.0)\n readr                * 2.1.5   2024-01-10 [1] CRAN (R 4.4.0)\n remotes                2.5.0   2024-03-17 [1] CRAN (R 4.4.0)\n rlang                  1.1.4   2024-06-04 [1] CRAN (R 4.4.0)\n rmarkdown              2.28    2024-08-17 [1] CRAN (R 4.4.0)\n rsvd                   1.0.5   2021-04-16 [1] CRAN (R 4.4.0)\n S4Arrays               1.4.1   2024-05-30 [1] Bioconduc~\n S4Vectors            * 0.42.1  2024-07-03 [1] Bioconduc~\n ScaledMatrix           1.12.0  2024-04-30 [1] Bioconduc~\n scales                 1.3.0   2023-11-28 [1] CRAN (R 4.4.0)\n scater                 1.32.1  2024-07-21 [1] Bioconduc~\n scuttle                1.14.0  2024-04-30 [1] Bioconduc~\n sessioninfo            1.2.2   2021-12-06 [1] CRAN (R 4.4.0)\n shiny                  1.9.1   2024-08-01 [1] CRAN (R 4.4.0)\n SingleCellExperiment * 1.26.0  2024-04-30 [1] Bioconduc~\n SingleR                2.6.0   2024-04-30 [1] Bioconduc~\n slingshot              2.12.0  2024-04-30 [1] Bioconduc~\n SparseArray            1.4.8   2024-05-30 [1] Bioconduc~\n sparseMatrixStats      1.16.0  2024-04-30 [1] Bioconduc~\n stringi                1.8.4   2024-05-06 [1] CRAN (R 4.4.0)\n stringr              * 1.5.1   2023-11-14 [1] CRAN (R 4.4.0)\n SummarizedExperiment * 1.34.0  2024-04-30 [1] Bioconduc~\n tibble               * 3.2.1   2023-03-20 [1] CRAN (R 4.4.0)\n tidyr                * 1.3.1   2024-01-24 [1] CRAN (R 4.4.0)\n tidyselect             1.2.1   2024-03-11 [1] CRAN (R 4.4.0)\n tidyverse            * 2.0.0   2023-02-22 [1] CRAN (R 4.4.0)\n timechange             0.3.0   2024-01-18 [1] CRAN (R 4.4.0)\n TrajectoryUtils        1.12.0  2024-04-30 [1] Bioconduc~\n tzdb                   0.4.0   2023-05-12 [1] CRAN (R 4.4.0)\n UCSC.utils             1.0.0   2024-05-06 [1] Bioconduc~\n urlchecker             1.0.1   2021-11-30 [1] CRAN (R 4.4.0)\n usethis                3.0.0   2024-07-29 [1] CRAN (R 4.4.0)\n utf8                   1.2.4   2023-10-22 [1] CRAN (R 4.4.0)\n vctrs                  0.6.5   2023-12-01 [1] CRAN (R 4.4.0)\n vipor                  0.4.7   2023-12-18 [1] CRAN (R 4.4.0)\n viridis                0.6.5   2024-01-29 [1] CRAN (R 4.4.0)\n viridisLite            0.4.2   2023-05-02 [1] CRAN (R 4.4.0)\n vroom                  1.6.5   2023-12-05 [1] CRAN (R 4.4.0)\n withr                  3.0.2   2024-10-28 [1] CRAN (R 4.4.1)\n xfun                   0.48    2024-10-03 [1] CRAN (R 4.4.1)\n xtable                 1.8-4   2019-04-21 [1] CRAN (R 4.4.0)\n XVector                0.44.0  2024-04-30 [1] Bioconduc~\n zlibbioc               1.50.0  2024-04-30 [1] Bioconduc~\n\n [1] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "content/day4/Lecture7_ATAC.html",
    "href": "content/day4/Lecture7_ATAC.html",
    "title": "14  Lecture 6 - Advances in single-cell genomics: the epigenome",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7 - Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6 - Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7 - Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-df06f69911ab808ad1be095f974e0508\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-325aa7dc61d012e8ac46a2ca3243dc5a\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day4/Lab7_pseudotime.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;13&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day4/Lab8_atac-seq.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;15&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 7 - Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day4/Lab8_atac-seq.html#process-human-pbmc-dataset",
    "href": "content/day4/Lab8_atac-seq.html#process-human-pbmc-dataset",
    "title": "\n15  Lab 7: Single-cell ATAC-seq analysis workflow\n",
    "section": "\n15.1 Process human PBMC dataset",
    "text": "15.1 Process human PBMC dataset\n\n15.1.1 Download data\nData comes from 10X Genomics. Direct download links are provided below.\nDownload the files related to scATACseq of all human PBMC cells.\n\n\n\nR\n\ndir.create('scATAC', showWarnings = FALSE)\noptions(timeout=1000)\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5\", \"scATAC/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_peaks.bed\", \"scATAC/atac_v1_pbmc_10k_peaks.bed\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_singlecell.csv\", \"scATAC/atac_v1_pbmc_10k_singlecell.csv\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_fragments.tsv.gz\", \"scATAC/atac_v1_pbmc_10k_fragments.tsv.gz\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_fragments.tsv.gz.tbi\", \"scATAC/atac_v1_pbmc_10k_fragments.tsv.gz.tbi\")\n\n\n\ntrying URL 'https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5'\nContent type 'binary/octet-stream' length 79995014 bytes (76.3 MB)\n==================================================\ndownloaded 76.3 MB\n\ntrying URL 'https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_peaks.bed'\nContent type 'binary/octet-stream' length 2145757 bytes (2.0 MB)\n==================================================\ndownloaded 2.0 MB\n\ntrying URL 'https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_singlecell.csv'\nContent type 'text/csv' length 35207776 bytes (33.6 MB)\n==================================================\ndownloaded 33.6 MB\n\ntrying URL 'https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_fragments.tsv.gz'\nContent type 'text/tab-separated-values' length 1960680306 bytes (1869.9 MB)\n==================================================\ndownloaded 1869.9 MB\n\n\n15.1.2 Import data\nNotice how the count matrix is in a .h5 format. We have already encountered this format in Lab3. Back then, we imported it with DropletUtils::read10xCounts.\n\n\n\n\n\n\nQuestion\n\n\n\nDoes this function work here?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nDropletUtils::read10xCounts(\"scATAC/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5\")\n\n\nclass: SingleCellExperiment \ndim: 89796 8728 \nmetadata(1): Samples\nassays(1): counts\nrownames(89796): chr1:565107-565550 chr1:569174-569639 ... chrY:59001782-59002175 chrY:59017143-59017246\nrowData names(3): ID Symbol Type\ncolnames: NULL\ncolData names(2): Sample Barcode\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\n\n\n\n\n\n\n\nThis works because 10X Genomics make sure to distribute files in .h5 format that are consistent accross single-cell sequencing methodologies.\nHowever, the SingleCellExperiment obtained with this approach is not the most convenient, as it cannot natively leverage fragments file (see below).\nInstead, we can create a Signac object, a flavour of Seurat objects.\n\n\n\n\n\n\nQuestion\n\n\n\nImport counts matrix and feature annotations using an import function provided by Seurat.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(Seurat)\n\n\nLoading required package: SeuratObject\n\n\nLoading required package: sp\n\n\n'SeuratObject' was built under R 4.4.0 but the current version is 4.4.1; it is recomended that you reinstall 'SeuratObject' as the ABI for R may have changed\n\n\n'SeuratObject' was built with package 'Matrix' 1.7.0 but the current version is 1.7.1; it is recomended that you reinstall 'SeuratObject' as the ABI for 'Matrix' may have changed\n\n\n\nAttaching package: 'SeuratObject'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\nlibrary(Signac)\nlibrary(rtracklayer)\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    intersect\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted,\n    lapply, Map, mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, table, tapply, union, unique,\n    unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\n\nAttaching package: 'IRanges'\n\n\nThe following object is masked from 'package:sp':\n\n    %over%\n\n\nLoading required package: GenomeInfoDb\n\nlibrary(stringr)\ncnts &lt;- Read10X_h5('scATAC/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5')\nfeatures &lt;- import('scATAC/atac_v1_pbmc_10k_peaks.bed')\nfeatures$peak &lt;- as.character(features) |&gt; str_replace(':', '-')\nmetadata &lt;- read.csv(\n  file = \"scATAC/atac_v1_pbmc_10k_singlecell.csv\",\n  header = TRUE,\n  row.names = 1\n)\n\n\n\n\nHow many accessible genomic segments were found in this dataset?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nfeatures\n\n\nGRanges object with 89796 ranges and 1 metadata column:\n          seqnames            ranges strand |                   peak\n             &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; |            &lt;character&gt;\n      [1]     chr1     565108-565550      * |     chr1-565108-565550\n      [2]     chr1     569175-569639      * |     chr1-569175-569639\n      [3]     chr1     713461-714823      * |     chr1-713461-714823\n      [4]     chr1     752423-753038      * |     chr1-752423-753038\n      [5]     chr1     762107-763359      * |     chr1-762107-763359\n      ...      ...               ...    ... .                    ...\n  [89792]     chrY 58993393-58993760      * | chrY-58993393-58993760\n  [89793]     chrY 58994572-58994823      * | chrY-58994572-58994823\n  [89794]     chrY 58996353-58997331      * | chrY-58996353-58997331\n  [89795]     chrY 59001783-59002175      * | chrY-59001783-59002175\n  [89796]     chrY 59017144-59017246      * | chrY-59017144-59017246\n  -------\n  seqinfo: 24 sequences from an unspecified genome; no seqlengths\n\nlength(features)\n\n[1] 89796\n\n\n\n\n\n\n\n\n15.1.3 Create a Seurat object\nThe next step is to aggregate counts and features into a ChromatinAssay, a scATAC-seq flavour of Seurat standard Assays. The documentation for ?CreateChromatinAssay indicates that the user can provide:\n\nA fragments file, corresponding to the full list of all unique fragments mapped across all single cells.\nGenomic annotations to the ChromatinAssay, corresponding to gene annotations, promoter positions, etc. Such annotations can be generated from Ensembl.\n\n\n\n\n\n\n\nQuestion\n\n\n\nGenerate human annotations from Ensembl using a parsing function from Seurat.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Get human gene annotations (hg19/GRCh37) to feed it into the future `ChromatinAssay`\nBiocManager::install('EnsDb.Hsapiens.v75')\n\n\n'getOption(\"repos\")' replaces Bioconductor standard repositories, see 'help(\"repositories\", package = \"BiocManager\")' for details.\nReplacement repositories:\n    CRAN: https://cloud.r-project.org\n\n\nBioconductor version 3.19 (BiocManager 1.30.25), R 4.4.1 (2024-06-14)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use `force = TRUE` to re-install: 'EnsDb.Hsapiens.v75'\n\n\nOld packages: 'boot', 'foreign', 'fs', 'MASS', 'nlme', 'pak', 'progressr', 'rliger', 'survival'\n\nannotations &lt;- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v75::EnsDb.Hsapiens.v75)\n\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\n\n\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\n\nseqlevelsStyle(annotations) &lt;- 'UCSC'\n\n\n\n\nCreate a ChromatinAssay using counts, features, fragments and annotations.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Create Chromatin Assay\nassay &lt;- Signac::CreateChromatinAssay(\n    counts = cnts,\n    ranges = features,\n    fragments = \"scATAC/atac_v1_pbmc_10k_fragments.tsv.gz\",\n    annotation = annotations,\n    genome = \"hg19\",\n    min.cells = 10, \n    min.features = 10\n)\n\n\nComputing hash\n\nassay\n\nChromatinAssay data with 87561 features for 8728 cells\nVariable features: 0 \nGenome: hg19 \nAnnotation present: TRUE \nMotifs present: FALSE \nFragment files: 1 \n\n\n\n\n\nWhat are the dimensions of this object? Are they comparable to the count matrix? Comment.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndim(cnts)\n\n\n[1] 89796  8728\n\ndim(assay)\n\n[1] 87561  8728\n\n\n\n\n\n\n\nIt’s finally time to wrap the ChromatinAssay into a Seurat standard object! This is done using the CreateSeuratObject, as already covered in Lab6\n\n\n\n\n\n\nQuestion\n\n\n\nCreate a Seurat object from the ChromatinAssay object.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Create Seurat object\nPBMC &lt;- Seurat::CreateSeuratObject(\n    counts = assay,\n    assay = 'ATAC', \n    meta.data = metadata[metadata$is__cell_barcode == 1, ]\n)\nPBMC\n\n\nAn object of class Seurat \n87561 features across 8728 samples within 1 assay \nActive assay: ATAC (87561 features, 0 variable features)\n 2 layers present: counts, data\n\nPBMC[['ATAC']]\n\nChromatinAssay data with 87561 features for 8728 cells\nVariable features: 0 \nGenome: hg19 \nAnnotation present: TRUE \nMotifs present: FALSE \nFragment files: 1 \n\ngranges(PBMC)\n\nGRanges object with 87561 ranges and 1 metadata column:\n          seqnames            ranges strand |                   peak\n             &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; |            &lt;character&gt;\n      [1]     chr1     565108-565550      * |     chr1-565108-565550\n      [2]     chr1     569175-569639      * |     chr1-569175-569639\n      [3]     chr1     713461-714823      * |     chr1-713461-714823\n      [4]     chr1     752423-753038      * |     chr1-752423-753038\n      [5]     chr1     762107-763359      * |     chr1-762107-763359\n      ...      ...               ...    ... .                    ...\n  [87557]     chrY 58993393-58993760      * | chrY-58993393-58993760\n  [87558]     chrY 58994572-58994823      * | chrY-58994572-58994823\n  [87559]     chrY 58996353-58997331      * | chrY-58996353-58997331\n  [87560]     chrY 59001783-59002175      * | chrY-59001783-59002175\n  [87561]     chrY 59017144-59017246      * | chrY-59017144-59017246\n  -------\n  seqinfo: 24 sequences from an unspecified genome; no seqlengths\n\nAnnotation(PBMC)\n\nGRanges object with 3072120 ranges and 5 metadata columns:\n                  seqnames        ranges strand |           tx_id   gene_name         gene_id   gene_biotype     type\n                     &lt;Rle&gt;     &lt;IRanges&gt;  &lt;Rle&gt; |     &lt;character&gt; &lt;character&gt;     &lt;character&gt;    &lt;character&gt; &lt;factor&gt;\n  ENSE00001489430     chrX 192989-193061      + | ENST00000399012      PLCXD1 ENSG00000182378 protein_coding     exon\n  ENSE00001536003     chrX 192991-193061      + | ENST00000484611      PLCXD1 ENSG00000182378 protein_coding     exon\n  ENSE00002160563     chrX 193020-193061      + | ENST00000430923      PLCXD1 ENSG00000182378 protein_coding     exon\n  ENSE00001750899     chrX 197722-197788      + | ENST00000445062      PLCXD1 ENSG00000182378 protein_coding     exon\n  ENSE00001489388     chrX 197859-198351      + | ENST00000381657      PLCXD1 ENSG00000182378 protein_coding     exon\n              ...      ...           ...    ... .             ...         ...             ...            ...      ...\n  ENST00000361739    chrMT     7586-8269      + | ENST00000361739      MT-CO2 ENSG00000198712 protein_coding      cds\n  ENST00000361789    chrMT   14747-15887      + | ENST00000361789      MT-CYB ENSG00000198727 protein_coding      cds\n  ENST00000361851    chrMT     8366-8572      + | ENST00000361851     MT-ATP8 ENSG00000228253 protein_coding      cds\n  ENST00000361899    chrMT     8527-9207      + | ENST00000361899     MT-ATP6 ENSG00000198899 protein_coding      cds\n  ENST00000362079    chrMT     9207-9990      + | ENST00000362079      MT-CO3 ENSG00000198938 protein_coding      cds\n  -------\n  seqinfo: 25 sequences (1 circular) from hg19 genome\n\n\n\n\n\n\n\n\n15.1.4 Check QCs\n\n15.1.4.1 Cell-based QCs\nThe fraction of reads in peaks (FRiP) is a good indicator of how well each cell was handled during scATACseq processing.\n\n\n\nR\n\nPBMC$FRiP &lt;- PBMC$peak_region_fragments / PBMC$passed_filters\nPBMC$nCount_ATAC &lt;- colSums(GetAssayData(PBMC, layer = \"counts\"))\nPBMC$nFeature_ATAC &lt;- colSums(GetAssayData(PBMC, layer = \"counts\") &gt; 0)\n\nquantile(PBMC$FRiP, seq(0, 1, 0.1))\n\n\n      0%      10%      20%      30%      40%      50%      60%      70%      80%      90%     100% \n0.027703 0.552667 0.608955 0.640861 0.665830 0.685208 0.701947 0.719937 0.738010 0.760047 0.903831 \n\nquantile(PBMC$nCount_ATAC, seq(0, 1, 0.1))\n\n      0%      10%      20%      30%      40%      50%      60%      70%      80%      90%     100% \n  1710.0   5079.1   7619.8   9522.5  11300.8  13367.5  15754.6  19005.5  23502.6  31316.2 249799.0 \n\nquantile(PBMC$nFeature_ATAC, seq(0, 1, 0.1))\n\n     0%     10%     20%     30%     40%     50%     60%     70%     80%     90%    100% \n  654.0  2308.4  3349.4  4108.1  4765.0  5447.0  6234.2  7100.9  8241.6  9983.4 30313.0 \n\n\n\n15.1.4.2 Peaks-based QCs\n\n\n\n\n\n\nQuestion\n\n\n\nWhich analysis are the fragments required for, exactly?\nCould we still perform normalization/clustering/annotation without them? And motif enrichment analysis?\nSince we do have the fragments file at hand, most of the QC steps are available (e.g. TSSEnrichment, NucleosomeSignal or fragment size distribution). Let’s go through them one by one.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n# compute nucleosome signal score per cell\nPBMC &lt;- NucleosomeSignal(object = PBMC)\nPBMC\n\n\nAn object of class Seurat \n87561 features across 8728 samples within 1 assay \nActive assay: ATAC (87561 features, 0 variable features)\n 2 layers present: counts, data\n\n# compute TSS enrichment score per cell\nPBMC &lt;- Signac::TSSEnrichment(object = PBMC, fast = FALSE)\n\nExtracting TSS positions\n\n\nFinding + strand cut sites\n\n\nFinding - strand cut sites\n\n\nComputing mean insertion frequency in flanking regions\n\n\nNormalizing TSS score\n\nPBMC\n\nAn object of class Seurat \n87561 features across 8728 samples within 1 assay \nActive assay: ATAC (87561 features, 0 variable features)\n 2 layers present: counts, data\n\n\n\n\n\n\n\nThe TSSPlot function from Signac can be used to plot the fragment count per peak ~ TSS enrichment.\n\n\n\nR\n\nPBMC$high.tss &lt;- ifelse(PBMC$TSS.enrichment &gt; 3.5, 'High', 'Low')\nTSSPlot(PBMC, group.by = 'high.tss') + NoLegend()\n\n\n\n\nPBMC$high.tss &lt;- ifelse(PBMC$TSS.enrichment &gt; 2.5, 'High', 'Low')\nTSSPlot(PBMC, group.by = 'high.tss') + NoLegend()\n\n\n\n\nThe FragmentHistogram function from Signac can be used to plot the fragment size distribution in peaks with different nucleosome signals.\n\n\n\n\n\n\nQuestion\n\n\n\nGroup genomic loci by their nucleosome signal (&gt; 4 or &lt; 4) and plot the fragment size distribution.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nPBMC$nucleosome_group &lt;- ifelse(PBMC$nucleosome_signal &gt; 4, 'NS &gt; 4', 'NS &lt; 4')\nFragmentHistogram(object = PBMC, group.by = 'nucleosome_group')\n\n\nWarning: Removed 92 rows containing non-finite outside the scale range (`stat_bin()`).\n\n\nWarning: Removed 4 rows containing missing values or values outside the scale range (`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\n\n15.1.5 Filter cells and features\nJust like standard scRNAseq data, scATACseq data needs to be filtered to remove low-quality cells and peaks.\n\n\n\n\n\n\nQuestion\n\n\n\nFilter the Seurat object (cells and features) as deemed appropriate.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Filter data \nPBMC &lt;- subset(PBMC, subset = nCount_ATAC &gt; 3000 & nCount_ATAC &lt; 100000) \nPBMC &lt;- subset(PBMC, subset = nFeature_ATAC &gt; 1000 & nFeature_ATAC &lt; 20000) \nPBMC &lt;- subset(PBMC, subset = FRiP &gt; 0.30) \nPBMC\n\n\nAn object of class Seurat \n87561 features across 8231 samples within 1 assay \nActive assay: ATAC (87561 features, 0 variable features)\n 2 layers present: counts, data\n\n## - Remove peaks with low coverage\nPBMC &lt;- PBMC[rowSums(GetAssayData(PBMC, layer = \"counts\")) &gt; 10, ]\nPBMC &lt;- PBMC[rowSums(GetAssayData(PBMC, layer = \"counts\") &gt; 0) &gt; 10, ]\nPBMC\n\nAn object of class Seurat \n87212 features across 8231 samples within 1 assay \nActive assay: ATAC (87212 features, 0 variable features)\n 2 layers present: counts, data\n\n\n\n\n\n\n\n\n15.1.6 Dimensionality reduction and clustering\nNow that the dataset is filtered, we can proceed to data normalization, dimensionality reduction and clustering. Compared to scRNAseq, scATACseq data is much sparser and has a higher dimensionality. This has important implications for the choice of normalization and dimensionality reduction methods. scATACseq data are generally normalized using a TF-IDF normalization, which is implemented in the RunTFIDF function in Signac, and dimensionality reduction is performed using LSI (Latent Semantic Indexing) implemented in the RunSVD function.\n\n\n\n\n\n\nQuestion\n\n\n\nNormalize then further reduce the dimensionality for visualization purposes.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Normalize data \nPBMC &lt;- RunTFIDF(PBMC) \n\n\nPerforming TF-IDF normalization\n\n## - Reduce dimensionality\nPBMC &lt;- FindTopFeatures(PBMC, min.cutoff = 'q50') \nPBMC &lt;- RunSVD(PBMC) \n\nRunning SVD\n\n\nScaling cell embeddings\n\n## - Embed in 2D UMAP\nPBMC &lt;- RunUMAP(object = PBMC, reduction = 'lsi', dims = 2:30)\n\nWarning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\nTo use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\nThis message will be shown once per session\n\n\n01:17:53 UMAP embedding parameters a = 0.9922 b = 1.112\n\n\n01:17:53 Read 8231 rows and found 29 numeric columns\n\n\n01:17:53 Using Annoy for neighbor search, n_neighbors = 30\n\n\n01:17:53 Building Annoy index with metric = cosine, n_trees = 50\n\n\n0%   10   20   30   40   50   60   70   80   90   100%\n\n\n[----|----|----|----|----|----|----|----|----|----|\n\n\n**************************************************|\n01:17:54 Writing NN index file to temp file /var/folders/dg/mbw146s905lgqgswn6w4ghk80000gn/T//Rtmpaalwk0/file23de4972d6ff\n01:17:54 Searching Annoy index using 1 thread, search_k = 3000\n01:17:55 Annoy recall = 100%\n01:17:57 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n01:17:59 Initializing from normalized Laplacian + noise (using RSpectra)\n01:17:59 Commencing optimization for 500 epochs, with 316686 positive edges\n01:18:07 Optimization finished\n\n## - Cluster cells\nPBMC &lt;- FindNeighbors(object = PBMC, reduction = 'lsi', dims = 2:30)\n\nComputing nearest neighbor graph\nComputing SNN\n\nPBMC &lt;- FindClusters(object = PBMC, verbose = FALSE, algorithm = 3)\n\n## - Visualize data \nDimPlot(PBMC, label = TRUE) + NoLegend()\n\n\n\n\n\n\n\nWhat can you observe in the UMAP projection of the dataset? Comment on the separation of some cell types into different spatially-resolved clusters."
  },
  {
    "objectID": "content/day4/Lab8_atac-seq.html#compute-gene-activity-scores",
    "href": "content/day4/Lab8_atac-seq.html#compute-gene-activity-scores",
    "title": "\n15  Lab 7: Single-cell ATAC-seq analysis workflow\n",
    "section": "\n15.2 Compute gene activity scores",
    "text": "15.2 Compute gene activity scores\nSignac’s GeneActivity() function require scATACseq fragment information. Since we have them, we can estimate a gene activity score for each gene in the annotations.\n\n\n\nR\n\ngene.activities &lt;- GeneActivity(PBMC)\n\n\nExtracting gene coordinates\n\n\nWarning in SingleFeatureMatrix(fragment = fragments[[x]], features = features, : 13 features are on seqnames not present in the fragment file. These will be removed.\n\n\nExtracting reads overlapping genomic regions\n\n\nWe can now save this new object as an Assay in the PBMC object and normalize it.\n\n\n\nR\n\nPBMC[['RNA']] &lt;- CreateAssayObject(counts = gene.activities)\n\n\nWarning: Non-unique features (rownames) present in the input matrix, making unique\n\n# - Normalize the new RNA assay, this time with `SCTransform`\noptions('future.globals.maxSize' = 2e9)\nPBMC &lt;- SCTransform(\n  object = PBMC,\n  assay = 'RNA',\n)\n\nRunning SCTransform on assay: RNA\n\n\nvst.flavor='v2' set. Using model with fixed slope and excluding poisson genes.\n\n\nCalculating cell attributes from input UMI matrix: log_umi\n\n\nVariance stabilizing transformation of count matrix of size 19682 by 8231\n\n\nModel formula is y ~ log_umi\n\n\nGet Negative Binomial regression parameters per gene\n\n\nUsing 2000 genes, 5000 cells\n\n\nWarning in size + sum(size_args, na.rm = FALSE): NAs produced by integer overflow\n\n\nWarning in size + sum(size_args, na.rm = FALSE): NAs produced by integer overflow\nWarning in size + sum(size_args, na.rm = FALSE): NAs produced by integer overflow\nWarning in size + sum(size_args, na.rm = FALSE): NAs produced by integer overflow\n\n\nFound 11 outliers - those will be ignored in fitting/regularization step\n\n\nSecond step: Get residuals using fitted parameters for 19682 genes\n\n\nComputing corrected count matrix for 19682 genes\n\n\nCalculating gene attributes\n\n\nWall clock passed: Time difference of 31.455 secs\n\n\nDetermine variable features\n\n\nCentering data matrix\n\n\nPlace corrected count matrix in counts slot\n\n\nSet default assay to SCT\n\nPBMC\n\nAn object of class Seurat \n126904 features across 8231 samples within 3 assays \nActive assay: SCT (19682 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 2 other assays present: ATAC, RNA\n 2 dimensional reductions calculated: lsi, umap\n\n\nOne can now visualize expression of individual markers across clusters to infer cluster identity.\n\n\n\n\n\n\nQuestion\n\n\n\nAssess the expression of known markers across clusters, projecting the cells in a 2D UMAP.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nVlnPlot(\n  object = PBMC,\n  features = c(\n    'MS4A1', # B-cell\n    'CD3D', # T-cell\n    'NKG7', # NK cell\n    'TREM1' # Monocytes\n  ), \n  assay = \"SCT\"\n)\n\n\n\n\nPBMC$annotation &lt;- dplyr::case_when(\n  Idents(PBMC) %in% c(0, 5, 9, 12) ~ \"Monocytes\", \n  Idents(PBMC) %in% c(1, 2, 3, 4, 7, 10) ~ \"T-cells\", \n  Idents(PBMC) %in% c(6) ~ \"NK-cells\", \n  Idents(PBMC) %in% c(8, 11) ~ \"B-cells\", \n  Idents(PBMC) %in% c(13, 14) ~ \"DC\"\n)\nDimPlot(PBMC, group.by = 'annotation', label = TRUE) + NoLegend()"
  },
  {
    "objectID": "content/day4/Lab8_atac-seq.html#find-peaks-differentially-accessible-across-clusters",
    "href": "content/day4/Lab8_atac-seq.html#find-peaks-differentially-accessible-across-clusters",
    "title": "\n15  Lab 7: Single-cell ATAC-seq analysis workflow\n",
    "section": "\n15.3 Find peaks differentially accessible across clusters",
    "text": "15.3 Find peaks differentially accessible across clusters\nFinally, we can perform differential peak accessibility analysis to identify peaks that are differentially accessible between clusters. This is done using the FindMarkers function in Signac, which is similar to FindAllMarkers in Seurat.\n\n\n\nR\n\nIdents(PBMC) &lt;- PBMC$annotation\nda_peaks &lt;- FindMarkers(\n  object = PBMC,\n  ident.1 = \"Monocytes\",\n  ident.2 = \"B-cells\",\n  test.use = 'LR',\n  latent.vars = 'nCount_ATAC'\n)\n\n\nWarning: The following arguments are not used: norm.method\n\n\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\nVlnPlot(\n  object = PBMC,\n  features = rownames(da_peaks)[1],\n  pt.size = 0.1,\n  idents = c(\"Monocytes\",\"B-cells\")\n)"
  },
  {
    "objectID": "content/day5/Lecture8_spatial-transcriptomics.html",
    "href": "content/day5/Lecture8_spatial-transcriptomics.html",
    "title": "16  Lecture 8 - Advances in single-cell genomics: spatial transcriptomics",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8 - Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6 - Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8 - Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-b37043dfa5cf1c205558e40d1a3efbd7\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-8d1d7ab1e670422723c249eba20a79b7\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day4/Lab8_atac-seq.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;15&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 8 - Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/extra.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Extra resources&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/extra.html#general-bioinformatics",
    "href": "content/extra.html#general-bioinformatics",
    "title": "Extra resources",
    "section": "General bioinformatics",
    "text": "General bioinformatics\n\nA comprehensive overview of the different types of bioinformatic analyses, divided in 4 fundamental modules: LINK"
  },
  {
    "objectID": "content/extra.html#rbioconductor",
    "href": "content/extra.html#rbioconductor",
    "title": "Extra resources",
    "section": "R/Bioconductor",
    "text": "R/Bioconductor\n\nThe excellent R guide for beginners, by Emmanuel Paradis: PDF\nThe 150+ pages comprehensive book to learn everything about Bioconductor. This ebook has been published by Kasper D. Hansen and is freely available under the CC BY-NC-SA 4.0 license: Link to EPUB"
  },
  {
    "objectID": "content/extra.html#scientific-readings",
    "href": "content/extra.html#scientific-readings",
    "title": "Extra resources",
    "section": "Scientific readings",
    "text": "Scientific readings\n\n2014 Nat. Methods paper from Bioconductor core team describing important object classes\nTo see from how far Bioc comes from..."
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#aims-1",
    "href": "content/day1/Lab1_Intro.html#aims-1",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.1 Aims",
    "text": "3.1 Aims\n\nUnderstand the requirements for RNA velocity computation\nProcess scRNAseq using ‘spliced’ counts\nPerform lineage inference\nCompute RNA velocity and use it to orientate lineages"
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#infos",
    "href": "content/day1/Lab1_Intro.html#infos",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.1 Infos",
    "text": "3.1 Infos\n\nThe"
  },
  {
    "objectID": "content/day1/Lab1_Intro.html#aims",
    "href": "content/day1/Lab1_Intro.html#aims",
    "title": "\n3  Lab 1: Familiarizing yourself with the course AWS instance\n",
    "section": "\n3.1 Aims",
    "text": "3.1 Aims\n\nUnderstand the requirements for RNA velocity computation\nProcess scRNAseq using ‘spliced’ counts\nPerform lineage inference\nCompute RNA velocity and use it to orientate lineages"
  },
  {
    "objectID": "content/day2/Lab3_Rbioc.html",
    "href": "content/day2/Lab3_Rbioc.html",
    "title": "\n6  Lab 3: Introduction to R/Bioconductor\n",
    "section": "",
    "text": "7 insert image\n[content/day2/.img/2021-05-31-08-50-45.png]\nMake sure you understand the structure of objects from this class. A dedicated workshop that I would recommend quickly going over is available here. Generally speaking, a SummarizedExperiment object contains matrix-like objects (the assays), with rows representing features (e.g. genes, transcripts, …) and each column representing a sample. Information specific to genes and samples are stored in “parallel” data frames, for example to store gene locations, tissue of expression, biotypes (for genes) or batch, generation date, or machine ID (for samples). On top of that, metadata are also stored in the object (to store description of a project, …).\nAn important difference with S3 list-like objects usually used in R is that most of the underlying data (organized in precisely structured \"slots\") is accessed using getter functions, rather than the familiar $ or [. Here are some important getters:\nLet’s dig into an example (you may need to install the airway package from Bioconductor…)\nR\n\nlibrary(SummarizedExperiment)\nlibrary(airway)\ndata(airway)\nairway\nR\n\ndim(airway)\nrowData(airway)\ncolData(airway)\nR\n\nuntreated_LRG &lt;- airway[grepl('^LRG_', rownames(airway)), airway$dex == 'untrt']\nuntreated_LRG"
  },
  {
    "objectID": "index.html#what-1",
    "href": "index.html#what-1",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "What",
    "text": "What\nThis course will introduce biologists and bioinformaticians to the field of single-cell RNA sequencing. We will cover a range of software and analysis workflows that extend over the spectrum from the best practices in the filtering scRNA-seq data\nto the downstream analysis of cell clusters and temporal ordering. This course will help the attendees gain accurate insights in pre-processing, analysis and interpretation of scRNA-seq data.\nWe will start by introducing general concepts about single-cell RNA-sequencing. From there, we will then continue to describe the main analysis steps to go from raw sequencing data to processed and usable data. We will present classical analysis workflows, their output and the possible paths to investigate downstream of this.\nThroughout the workshop, bash tools and R/Bioconductor packages will be used to analyse datasets and learn new approaches."
  },
  {
    "objectID": "index.html#program",
    "href": "index.html#program",
    "title": "Single-cell RNAseq analysis with R/Bioconductor",
    "section": "Program",
    "text": "Program\n\n\nDay\nTime\nSession\nInstructor\n\n\n\nDay 1\n14:00 - 15:00\nLecture 1: Introduction to scRNAseq analysis\nJacques\n\n\n\n15:10 - 16:10\nLecture 2: From sequencing reads to expression matrices\nJacques\n\n\n\n16:10 - 17:10\nBreak\n\n\n\n\n17:10 - 18:30\nLab 1: Familiarizing with AWS instance\nJacques\n\n\n\n18:40 - 20:00\nLab 2: From .bcl to count matrix\nFabricio\n\n\nDay 2\n14:00 - 14:50\nFlash talks\n\n\n\n\n15:00 - 16:00\nLecture 3: Quality control for scRNAseq data\nJacques\n\n\n\n16:00 - 17:00\nBreak\n\n\n\n\n17:00 - 18:25\nLab 3: Introduction to R/Bioconductor\nFabricio\n\n\n\n18:35 - 20:00\nLab 4: scRNAseq data wrangling\nFabricio\n\n\nDay 3\n14:00 - 15:30\nLecture 4: Identifying cell populations\nJacques\n\n\n\n15:40 - 17:00\nLab 5: Dimension reduction, clustering, and annotations\nJacques\n\n\n\n17:00 - 18:00\nBreak\n\n\n\n\n18:00 - 19:00\nLecture 5: Data integration and batch effect correction\nOrr or Jacques\n\n\n\n19:10 - 20:00\nLab 6: Batch correction\nOrr\n\n\nDay 4\n14:00 - 15:00\nLecture 6: Advances in single-cell genomics - The epigenome\nOrr\n\n\n\n15:10 - 16:20\nLab 7: scATACseq analysis workflow\nOrr\n\n\n\n16:20 - 17:20\nBreak\n\n\n\n\n17:20 - 18:20\nLecture 7: Trajectories and pseudotimes\nOrr\n\n\n\n18:30 - 20:00\nLab 8: Pseudotime analyses\nFabricio\n\n\nDay 5\n14:00 - 15:00\nLecture 8: Advances in single-cell genomics - Spatial transcriptomics\nOrr\n\n\n\n15:10 - 16:20\nGroup Project: Project work\nJacques\n\n\n\n17:20 - 19:00\nGroup Project: Project work\nJacques\n\n\n\n19:00 - 20:00\nWrap-Up: Finalize Projects and Discussion\n\n\n\n\nMore details about the program can be found here. All the times are in Berlin time (CET)."
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#notes",
    "href": "content/day3/Lab6_batch_correction.html#notes",
    "title": "\n11  Lab 6 - Batch correction\n",
    "section": "\n11.1 Notes",
    "text": "11.1 Notes\nThe estimated time for this lab is around 1h30.\n:::\n\n\n\n\n\n\nAims\n\n\n\n\nLearn how to perform dimension reduction on scRNAseq data\nUnderstand the importance of feature selection\nLearn how to perform clustering on scRNAseq data\nLearn how to (automatically) annotate cells based on clustering results\n\n\n\nIn this lab, we will look at different single cell RNA-seq datasets collected from pancreatic islets. We will look at how different batch correction methods affect our data analysis."
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#analyze-each-pancreas-dataset-without-batch-correction",
    "href": "content/day3/Lab6_batch_correction.html#analyze-each-pancreas-dataset-without-batch-correction",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.2 Analyze each pancreas dataset without batch correction",
    "text": "11.2 Analyze each pancreas dataset without batch correction\nWe will first analyze each dataset separately to see if there are any differences between the datasets.\n\n\n\n\n\n\nQuestion\n\n\n\nWhat is the size of each single cell RNA-seq dataset?\nBriefly describe the technology used to collect each dataset.\nWhich datasets do you expect to be different and which do you expect to be similar?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndim(celseq.data)\n\n\n[1] 20148  1728\n\ndim(celseq2.data)\n\n[1] 19140  3072\n\ndim(fluidigmc1.data)\n\n[1] 25463   638\n\ndim(smartseq2.data)\n\n[1] 26179  3514\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCreate a Seurat object for each dataset, and look at the distributions of number of genes per cell.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(Seurat)\n\n\nLoading required package: SeuratObject\n\n\nLoading required package: sp\n\n\n'SeuratObject' was built under R 4.4.0 but the current version is 4.4.1; it is recomended that you reinstall 'SeuratObject' as the ABI for R may have changed\n\n\n'SeuratObject' was built with package 'Matrix' 1.7.0 but the current version is 1.7.1; it is recomended that you reinstall 'SeuratObject' as the ABI for 'Matrix' may have changed\n\n\n\nAttaching package: 'SeuratObject'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\n# CEL-Seq (https://www.cell.com/cell-reports/fulltext/S2211-1247(12)00228-8)\ncelseq &lt;- CreateSeuratObject(counts = celseq.data)\nVlnPlot(celseq, \"nFeature_RNA\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\n# CEL-Seq2 https://www.cell.com/molecular-cell/fulltext/S1097-2765(09)00641-8\ncelseq2 &lt;- CreateSeuratObject(counts = celseq2.data)\n\nWarning: Feature names cannot have underscores ('_'), replacing with dashes ('-')\n\nVlnPlot(celseq2, \"nFeature_RNA\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\n# Fluidigm C1\nfluidigmc1 &lt;- CreateSeuratObject(counts = fluidigmc1.data)\n\nWarning: Feature names cannot have underscores ('_'), replacing with dashes ('-')\n\nVlnPlot(fluidigmc1, \"nFeature_RNA\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\n# SMART-Seq2\nsmartseq2 &lt;- CreateSeuratObject(counts = smartseq2.data)\n\nWarning: Feature names cannot have underscores ('_'), replacing with dashes ('-')\n\nVlnPlot(smartseq2, \"nFeature_RNA\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\n\n\nNow we will subset the data to remove cells with low gene counts and normalize the data.\n\n\n\n\n\n\nQuestion\n\n\n\nSubset the data to remove cells with:\n\nfewer than 1750 genes for CEL-Seq;\nfewer than 2500 genes for CEL-Seq2;\nfewer than 2500 genes for SMART-Seq2.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncelseq &lt;- subset(celseq, subset = nFeature_RNA &gt; 1750)\nVlnPlot(celseq, \"nFeature_RNA\")\n\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\ncelseq2 &lt;- subset(celseq2, subset = nFeature_RNA &gt; 2500)\nVlnPlot(celseq2, \"nFeature_RNA\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\nsmartseq2 &lt;- subset(smartseq2, subset = nFeature_RNA &gt; 2500)\nVlnPlot(smartseq2, \"nFeature_RNA\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results; utilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\n\n\nNow we will normalize the data and identify variable genes. The procedure is the same for all datasets.\n\n\n\n\n\n\nQuestion\n\n\n\nNormalize the data with LogNormalize method, and identify the 2000 most variable genes for each dataset, using the vst approach.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ncelseq &lt;- NormalizeData(celseq, normalization.method = \"LogNormalize\", scale.factor = 10000)\n\n\nNormalizing layer: counts\n\ncelseq &lt;- FindVariableFeatures(celseq, selection.method = \"vst\", nfeatures = 2000)\n\nFinding variable features for layer counts\n\ncelseq &lt;- ScaleData(celseq)\n\nCentering and scaling data matrix\n\ncelseq[[\"tech\"]] &lt;- \"celseq\"\ncelseq\n\nAn object of class Seurat \n20148 features across 1004 samples within 1 assay \nActive assay: RNA (20148 features, 2000 variable features)\n 3 layers present: counts, data, scale.data\n\ncelseq2 &lt;- NormalizeData(celseq2, normalization.method = \"LogNormalize\", scale.factor = 10000)\n\nNormalizing layer: counts\n\ncelseq2 &lt;- FindVariableFeatures(celseq2, selection.method = \"vst\", nfeatures = 2000)\n\nFinding variable features for layer counts\n\ncelseq2 &lt;- ScaleData(celseq2)\n\nCentering and scaling data matrix\n\ncelseq2[[\"tech\"]] &lt;- \"celseq2\"\ncelseq2\n\nAn object of class Seurat \n19140 features across 2285 samples within 1 assay \nActive assay: RNA (19140 features, 2000 variable features)\n 3 layers present: counts, data, scale.data\n\nfluidigmc1 &lt;- NormalizeData(fluidigmc1, normalization.method = \"LogNormalize\", scale.factor = 10000)\n\nNormalizing layer: counts\n\nfluidigmc1 &lt;- FindVariableFeatures(fluidigmc1, selection.method = \"vst\", nfeatures = 2000)\n\nFinding variable features for layer counts\n\nfluidigmc1 &lt;- ScaleData(fluidigmc1)\n\nCentering and scaling data matrix\n\nfluidigmc1[[\"tech\"]] &lt;- \"fluidigmc1\"\nfluidigmc1\n\nAn object of class Seurat \n25463 features across 638 samples within 1 assay \nActive assay: RNA (25463 features, 2000 variable features)\n 3 layers present: counts, data, scale.data\n\nsmartseq2 &lt;- NormalizeData(smartseq2, normalization.method = \"LogNormalize\", scale.factor = 10000)\n\nNormalizing layer: counts\n\nsmartseq2 &lt;- FindVariableFeatures(smartseq2, selection.method = \"vst\", nfeatures = 2000)\n\nFinding variable features for layer counts\n\nsmartseq2 &lt;- ScaleData(smartseq2)\n\nCentering and scaling data matrix\n\nsmartseq2[[\"tech\"]] &lt;- \"smartseq2\"\nsmartseq2\n\nAn object of class Seurat \n26179 features across 2394 samples within 1 assay \nActive assay: RNA (26179 features, 2000 variable features)\n 3 layers present: counts, data, scale.data"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#session-info",
    "href": "content/day3/Lab6_batch_correction.html#session-info",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.8 Session info",
    "text": "11.8 Session info\n\n\n─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.1 (2024-06-14)\n os       macOS Sonoma 14.6.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Paris\n date     2024-11-03\n pandoc   2.19.2 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n package          * version    date (UTC) lib source\n abind              1.4-8      2024-09-12 [1] CRAN (R 4.4.1)\n beeswarm           0.4.0      2021-06-01 [1] CRAN (R 4.4.0)\n Biobase            2.64.0     2024-04-30 [1] Bioconduc~\n BiocGenerics       0.50.0     2024-04-30 [1] Bioconduc~\n cachem             1.1.0      2024-05-16 [1] CRAN (R 4.4.0)\n cli                3.6.3      2024-06-21 [1] CRAN (R 4.4.0)\n cluster            2.1.6      2023-12-01 [1] CRAN (R 4.4.1)\n codetools          0.2-20     2024-03-31 [1] CRAN (R 4.4.1)\n colorspace         2.1-1      2024-07-26 [1] CRAN (R 4.4.0)\n cowplot            1.1.3      2024-01-22 [1] CRAN (R 4.4.0)\n data.table         1.16.2     2024-10-10 [1] CRAN (R 4.4.1)\n deldir             2.0-4      2024-02-28 [1] CRAN (R 4.4.0)\n devtools           2.4.5      2022-10-11 [1] CRAN (R 4.4.0)\n digest             0.6.37     2024-08-19 [1] CRAN (R 4.4.1)\n dotCall64          1.2        2024-10-04 [1] CRAN (R 4.4.1)\n dplyr              1.1.4      2023-11-17 [1] CRAN (R 4.4.0)\n ellipsis           0.3.2      2021-04-29 [1] CRAN (R 4.4.0)\n evaluate           1.0.1      2024-10-10 [1] CRAN (R 4.4.1)\n fansi              1.0.6      2023-12-08 [1] CRAN (R 4.4.0)\n farver             2.1.2      2024-05-13 [1] CRAN (R 4.4.0)\n fastDummies        1.7.4      2024-08-16 [1] CRAN (R 4.4.0)\n fastmap            1.2.0      2024-05-15 [1] CRAN (R 4.4.0)\n fitdistrplus       1.2-1      2024-07-12 [1] CRAN (R 4.4.0)\n foreign          * 0.8-86     2023-11-28 [1] CRAN (R 4.4.1)\n fossil           * 0.4.0      2020-03-23 [1] CRAN (R 4.4.0)\n fs                 1.6.4      2024-04-25 [1] CRAN (R 4.4.0)\n future             1.34.0     2024-07-29 [1] CRAN (R 4.4.0)\n future.apply       1.11.3     2024-10-27 [1] CRAN (R 4.4.1)\n generics           0.1.3      2022-07-05 [1] CRAN (R 4.4.0)\n ggbeeswarm         0.7.2      2023-04-29 [1] CRAN (R 4.4.0)\n ggplot2            3.5.1      2024-04-23 [1] CRAN (R 4.4.0)\n ggrastr            1.0.2      2023-06-01 [1] CRAN (R 4.4.0)\n ggrepel            0.9.6      2024-09-07 [1] CRAN (R 4.4.1)\n ggridges           0.5.6      2024-01-23 [1] CRAN (R 4.4.0)\n globals            0.16.3     2024-03-08 [1] CRAN (R 4.4.0)\n glue               1.8.0      2024-09-30 [1] CRAN (R 4.4.1)\n goftest            1.2-3      2021-10-07 [1] CRAN (R 4.4.0)\n gridExtra          2.3        2017-09-09 [1] CRAN (R 4.4.0)\n gtable             0.3.6      2024-10-25 [1] CRAN (R 4.4.1)\n htmltools          0.5.8.1    2024-04-04 [1] CRAN (R 4.4.0)\n htmlwidgets        1.6.4      2023-12-06 [1] CRAN (R 4.4.0)\n httpuv             1.6.15     2024-03-26 [1] CRAN (R 4.4.0)\n httr               1.4.7      2023-08-15 [1] CRAN (R 4.4.0)\n ica                1.0-3      2022-07-08 [1] CRAN (R 4.4.0)\n igraph             2.1.1      2024-10-19 [1] CRAN (R 4.4.1)\n irlba              2.3.5.1    2022-10-03 [1] CRAN (R 4.4.0)\n jsonlite           1.8.9      2024-09-20 [1] CRAN (R 4.4.1)\n KernSmooth         2.23-24    2024-05-17 [1] CRAN (R 4.4.1)\n knitr              1.48       2024-07-07 [1] CRAN (R 4.4.0)\n labeling           0.4.3      2023-08-29 [1] CRAN (R 4.4.0)\n later              1.3.2      2023-12-06 [1] CRAN (R 4.4.0)\n lattice            0.22-6     2024-03-20 [1] CRAN (R 4.4.1)\n lazyeval           0.2.2      2019-03-15 [1] CRAN (R 4.4.0)\n leiden             0.4.3.1    2023-11-17 [1] CRAN (R 4.4.0)\n leidenAlg          1.1.4      2024-10-17 [1] CRAN (R 4.4.1)\n lifecycle          1.0.4      2023-11-07 [1] CRAN (R 4.4.0)\n limma              3.60.6     2024-10-02 [1] Bioconduc~\n listenv            0.9.1      2024-01-29 [1] CRAN (R 4.4.0)\n lmtest             0.9-40     2022-03-21 [1] CRAN (R 4.4.0)\n magrittr           2.0.3      2022-03-30 [1] CRAN (R 4.4.0)\n maps             * 3.4.2      2023-12-15 [1] CRAN (R 4.4.0)\n MASS               7.3-60.2   2024-04-26 [1] CRAN (R 4.4.1)\n mathjaxr           1.6-0      2022-02-28 [1] CRAN (R 4.4.0)\n Matrix           * 1.7-1      2024-10-18 [1] CRAN (R 4.4.1)\n matrixStats        1.4.1      2024-09-08 [1] CRAN (R 4.4.1)\n memoise            2.0.1      2021-11-26 [1] CRAN (R 4.4.0)\n metap              1.11       2024-07-11 [1] CRAN (R 4.4.0)\n mime               0.12       2021-09-28 [1] CRAN (R 4.4.0)\n miniUI             0.1.1.1    2018-05-18 [1] CRAN (R 4.4.0)\n mnormt             2.1.1      2022-09-26 [1] CRAN (R 4.4.0)\n multcomp           1.4-26     2024-07-18 [1] CRAN (R 4.4.0)\n multtest           2.60.0     2024-04-30 [1] Bioconduc~\n munsell            0.5.1      2024-04-01 [1] CRAN (R 4.4.0)\n mutoss             0.1-13     2023-03-14 [1] CRAN (R 4.4.0)\n mvtnorm            1.3-1      2024-09-03 [1] CRAN (R 4.4.1)\n nlme               3.1-164    2023-11-27 [1] CRAN (R 4.4.1)\n numDeriv           2016.8-1.1 2019-06-06 [1] CRAN (R 4.4.0)\n parallelly         1.38.0     2024-07-27 [1] CRAN (R 4.4.0)\n patchwork          1.3.0      2024-09-16 [1] CRAN (R 4.4.1)\n pbapply            1.7-2      2023-06-27 [1] CRAN (R 4.4.0)\n pillar             1.9.0      2023-03-22 [1] CRAN (R 4.4.0)\n pkgbuild           1.4.5      2024-10-28 [1] CRAN (R 4.4.1)\n pkgconfig          2.0.3      2019-09-22 [1] CRAN (R 4.4.0)\n pkgload            1.4.0      2024-06-28 [1] CRAN (R 4.4.0)\n plotly             4.10.4     2024-01-13 [1] CRAN (R 4.4.0)\n plotrix            3.8-4      2023-11-10 [1] CRAN (R 4.4.0)\n plyr               1.8.9      2023-10-02 [1] CRAN (R 4.4.0)\n png                0.1-8      2022-11-29 [1] CRAN (R 4.4.0)\n polyclip           1.10-7     2024-07-23 [1] CRAN (R 4.4.0)\n profvis            0.4.0      2024-09-20 [1] CRAN (R 4.4.1)\n progressr          0.14.0     2023-08-10 [1] CRAN (R 4.4.0)\n promises           1.3.0      2024-04-05 [1] CRAN (R 4.4.0)\n purrr              1.0.2      2023-08-10 [1] CRAN (R 4.4.0)\n qqconf             1.3.2      2023-04-14 [1] CRAN (R 4.4.0)\n R6                 2.5.1      2021-08-19 [1] CRAN (R 4.4.0)\n RANN               2.6.2      2024-08-25 [1] CRAN (R 4.4.1)\n rbibutils          2.3        2024-10-04 [1] CRAN (R 4.4.1)\n RColorBrewer       1.1-3      2022-04-03 [1] CRAN (R 4.4.0)\n Rcpp               1.0.13     2024-07-17 [1] CRAN (R 4.4.0)\n RcppAnnoy          0.0.22     2024-01-23 [1] CRAN (R 4.4.0)\n RcppHNSW           0.6.0      2024-02-04 [1] CRAN (R 4.4.0)\n RcppPlanc          1.0.0      2024-10-29 [1] https://welch-lab.r-universe.dev (R 4.4.1)\n Rdpack             2.6.1      2024-08-06 [1] CRAN (R 4.4.0)\n remotes            2.5.0      2024-03-17 [1] CRAN (R 4.4.0)\n reshape2           1.4.4      2020-04-09 [1] CRAN (R 4.4.0)\n reticulate         1.39.0     2024-09-05 [1] CRAN (R 4.4.1)\n rlang              1.1.4      2024-06-04 [1] CRAN (R 4.4.0)\n rliger           * 2.0.1      2024-04-04 [1] CRAN (R 4.4.0)\n rmarkdown          2.28       2024-08-17 [1] CRAN (R 4.4.0)\n ROCR               1.0-11     2020-05-02 [1] CRAN (R 4.4.0)\n RSpectra           0.16-2     2024-07-18 [1] CRAN (R 4.4.0)\n Rtsne              0.17       2023-12-07 [1] CRAN (R 4.4.0)\n S4Vectors          0.42.1     2024-07-03 [1] Bioconduc~\n sandwich           3.1-1      2024-09-15 [1] CRAN (R 4.4.1)\n scales             1.3.0      2023-11-28 [1] CRAN (R 4.4.0)\n scattermore        1.2        2023-06-12 [1] CRAN (R 4.4.0)\n sccore             1.0.5      2024-02-23 [1] CRAN (R 4.4.0)\n sctransform        0.4.1      2023-10-19 [1] CRAN (R 4.4.0)\n sessioninfo        1.2.2      2021-12-06 [1] CRAN (R 4.4.0)\n Seurat           * 5.1.0      2024-05-10 [1] CRAN (R 4.4.0)\n SeuratObject     * 5.0.2      2024-05-08 [1] CRAN (R 4.4.0)\n shapefiles       * 0.7.2      2022-08-25 [1] CRAN (R 4.4.0)\n shiny              1.9.1      2024-08-01 [1] CRAN (R 4.4.0)\n sn                 2.1.1      2023-04-04 [1] CRAN (R 4.4.0)\n sp               * 2.1-4      2024-04-30 [1] CRAN (R 4.4.0)\n spam               2.11-0     2024-10-03 [1] CRAN (R 4.4.1)\n spatstat.data      3.1-2      2024-06-21 [1] CRAN (R 4.4.0)\n spatstat.explore   3.3-3      2024-10-22 [1] CRAN (R 4.4.1)\n spatstat.geom      3.3-3      2024-09-18 [1] CRAN (R 4.4.1)\n spatstat.random    3.3-2      2024-09-18 [1] CRAN (R 4.4.1)\n spatstat.sparse    3.1-0      2024-06-21 [1] CRAN (R 4.4.0)\n spatstat.univar    3.0-1      2024-09-05 [1] CRAN (R 4.4.1)\n spatstat.utils     3.1-0      2024-08-17 [1] CRAN (R 4.4.0)\n statmod            1.5.0      2023-01-06 [1] CRAN (R 4.4.0)\n stringi            1.8.4      2024-05-06 [1] CRAN (R 4.4.0)\n stringr            1.5.1      2023-11-14 [1] CRAN (R 4.4.0)\n survival           3.6-4      2024-04-24 [1] CRAN (R 4.4.1)\n tensor             1.5        2012-05-05 [1] CRAN (R 4.4.0)\n TFisher            0.2.0      2018-03-21 [1] CRAN (R 4.4.0)\n TH.data            1.1-2      2023-04-17 [1] CRAN (R 4.4.0)\n tibble             3.2.1      2023-03-20 [1] CRAN (R 4.4.0)\n tidyr              1.3.1      2024-01-24 [1] CRAN (R 4.4.0)\n tidyselect         1.2.1      2024-03-11 [1] CRAN (R 4.4.0)\n urlchecker         1.0.1      2021-11-30 [1] CRAN (R 4.4.0)\n usethis            3.0.0      2024-07-29 [1] CRAN (R 4.4.0)\n utf8               1.2.4      2023-10-22 [1] CRAN (R 4.4.0)\n uwot               0.2.2      2024-04-21 [1] CRAN (R 4.4.0)\n vctrs              0.6.5      2023-12-01 [1] CRAN (R 4.4.0)\n vipor              0.4.7      2023-12-18 [1] CRAN (R 4.4.0)\n viridisLite        0.4.2      2023-05-02 [1] CRAN (R 4.4.0)\n withr              3.0.2      2024-10-28 [1] CRAN (R 4.4.1)\n xfun               0.48       2024-10-03 [1] CRAN (R 4.4.1)\n xtable             1.8-4      2019-04-21 [1] CRAN (R 4.4.0)\n zoo                1.8-12     2023-04-13 [1] CRAN (R 4.4.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#batch-correction-canonical-correlation-analysis-cca-mutual-nearest-neighbors-mnn",
    "href": "content/day3/Lab6_batch_correction.html#batch-correction-canonical-correlation-analysis-cca-mutual-nearest-neighbors-mnn",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.4 Batch correction: canonical correlation analysis (CCA)+ mutual nearest neighbors (MNN)",
    "text": "11.4 Batch correction: canonical correlation analysis (CCA)+ mutual nearest neighbors (MNN)\nWe will now use Seurat to see to what extent it can remove potential batch effects.\nThe first piece of code will identify variable genes that are highly variable in at least 2/4 datasets. We will use these variable genes in our batch correction.\nWhy would we implement such a requirement?\n\n\n\n\n\n\nQuestion\n\n\n\nThe integration workflow in Seurat requires the identification of variable genes that are variable across most samples. Use the FindIntegrationAnchors function to identify anchors on the 4 pancreatic islet datasets, commonly shared variable genes across samples, and integrate samples.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nob.list &lt;- list(celseq, celseq2, fluidigmc1, smartseq2)\ngcdata.anchors &lt;- FindIntegrationAnchors(object.list = ob.list, anchor.features = 2000, dims = 1:30)\n\n\nComputing 2000 integration features\n\n\nScaling features for provided objects\n\n\nWarning: Different features in new layer data than already exists for scale.data\nWarning: Different features in new layer data than already exists for scale.data\nWarning: Different features in new layer data than already exists for scale.data\nWarning: Different features in new layer data than already exists for scale.data\n\n\nFinding all pairwise anchors\n\n\nRunning CCA\n\n\nMerging objects\n\n\nFinding neighborhoods\n\n\nFinding anchors\n\n\n    Found 3525 anchors\n\n\nFiltering anchors\n\n\n    Retained 2761 anchors\n\n\nRunning CCA\n\n\nMerging objects\n\n\nFinding neighborhoods\n\n\nFinding anchors\n\n\n    Found 2182 anchors\n\n\nFiltering anchors\n\n\n    Retained 1806 anchors\n\n\nRunning CCA\n\n\nMerging objects\n\n\nFinding neighborhoods\n\n\nFinding anchors\n\n\n    Found 2801 anchors\n\n\nFiltering anchors\n\n\n    Retained 2472 anchors\n\n\nRunning CCA\n\n\nMerging objects\n\n\nFinding neighborhoods\n\n\nFinding anchors\n\n\n    Found 3558 anchors\n\n\nFiltering anchors\n\n\n    Retained 2723 anchors\n\n\nRunning CCA\n\n\nMerging objects\n\n\nFinding neighborhoods\n\n\nFinding anchors\n\n\n    Found 6214 anchors\n\n\nFiltering anchors\n\n\n    Retained 4693 anchors\n\n\nRunning CCA\n\n\nMerging objects\n\n\nFinding neighborhoods\n\n\nFinding anchors\n\n\n    Found 2713 anchors\n\n\nFiltering anchors\n\n\n    Retained 1724 anchors\n\ngcdata &lt;- IntegrateData(anchorset = gcdata.anchors, dims = 1:30)\n\nMerging dataset 3 into 2\n\n\nExtracting anchors for merged samples\n\n\nFinding integration vectors\n\n\nFinding integration vector weights\n\n\nIntegrating data\n\n\nWarning: Layer counts isn't present in the assay object; returning NULL\n\n\nMerging dataset 1 into 2 3\n\n\nExtracting anchors for merged samples\n\n\nFinding integration vectors\n\n\nWarning: Different cells in new layer data than already exists for scale.data\n\n\nFinding integration vector weights\n\n\nIntegrating data\n\n\nWarning: Layer counts isn't present in the assay object; returning NULL\n\n\nMerging dataset 4 into 2 3 1\n\n\nExtracting anchors for merged samples\n\n\nFinding integration vectors\n\n\nWarning: Different cells in new layer data than already exists for scale.data\n\n\nFinding integration vector weights\n\n\nIntegrating data\n\n\nWarning: Layer counts isn't present in the assay object; returning NULL\n\nDefaultAssay(gcdata) &lt;- \"integrated\"\n\n\n\n\n\n\nNow that the integration anchors have been used to integrate multiple datasets, we will perform the same analysis as before.\n\n\n\n\n\n\nQuestion\n\n\n\n\nNormalize the integrated data with LogNormalize method.\nIdentify the 2000 most variable genes for the integrated dataset, using the vst approach.\nScale the data.\nPerform PCA on data including only the variable genes.\nCluster the cells.\nPerform UMAP embedding and visualize clustering results in 2D.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n# Run the standard workflow for visualization and clustering.\ngcdata &lt;- ScaleData(gcdata, do.center = TRUE, do.scale = FALSE)\n\n\nCentering data matrix\n\ngcdata &lt;- FindVariableFeatures(gcdata)\n\nWarning in FindVariableFeatures.Assay(object = object[[assay]], selection.method = selection.method, : selection.method set to 'vst' but count slot is empty; will use data slot instead\n\n\nWarning in eval(predvars, data, env): NaNs produced\n\n\nWarning in hvf.info$variance.expected[not.const] &lt;- 10^fit$fitted: number of items to replace is not a multiple of replacement length\n\ngcdata &lt;- RunPCA(gcdata, npcs = 40, ndims.print = 1:5, nfeatures.print = 5)\n\nPC_ 1 \nPositive:  CHGB, CHGA, VGF, ABCC8, TM4SF4 \nNegative:  SERPINA3, REG1A, TACSTD2, ANXA4, CD44 \nPC_ 2 \nPositive:  REG1B, REG1A, CTRB2, SPINK1, PRSS1 \nNegative:  IGFBP7, SPP1, CFTR, PMEPA1, ANXA2 \nPC_ 3 \nPositive:  INS, IAPP, RBP4, PCSK1, HADH \nNegative:  TM4SF4, GC, CHGB, LOXL4, MUC13 \nPC_ 4 \nPositive:  SPARC, COL1A1, FAP, VIM, COL1A2 \nNegative:  INS, IAPP, RBP4, HADH, PCSK1 \nPC_ 5 \nPositive:  PPY, SST, AQP3, ID2, PRG4 \nNegative:  INS, G6PC2, IAPP, FAP, LOXL4 \n\nDimPlot(gcdata, dims = c(1, 2), reduction = \"pca\", split.by = \"tech\")\n\n\n\n# Clustering\ngcdata &lt;- FindNeighbors(gcdata, reduction = \"pca\", dims = 1:20, k.param = 20)\n\nComputing nearest neighbor graph\n\n\nComputing SNN\n\ngcdata &lt;- FindClusters(gcdata, resolution = 0.8, algorithm = 1, random.seed = 100)\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 6321\nNumber of edges: 251064\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8658\nNumber of communities: 16\nElapsed time: 0 seconds\n\n# UMAP\ngcdata &lt;- RunUMAP(gcdata, dims = 1:30, reduction = \"pca\", n.neighbors = 15, min.dist = 0.5, spread = 1, metric = \"euclidean\", seed.use = 1)  \n\n15:53:26 UMAP embedding parameters a = 0.583 b = 1.334\n\n\n15:53:26 Read 6321 rows and found 30 numeric columns\n\n\n15:53:26 Using Annoy for neighbor search, n_neighbors = 15\n\n\n15:53:26 Building Annoy index with metric = euclidean, n_trees = 50\n\n\n0%   10   20   30   40   50   60   70   80   90   100%\n\n\n[----|----|----|----|----|----|----|----|----|----|\n\n\n**************************************************|\n15:53:27 Writing NN index file to temp file /var/folders/dg/mbw146s905lgqgswn6w4ghk80000gn/T//RtmpmeI3uf/filec4c666ff06ea\n15:53:27 Searching Annoy index using 1 thread, search_k = 1500\n15:53:27 Annoy recall = 100%\n15:53:28 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 15\n15:53:28 Found 2 connected components, falling back to 'spca' initialization with init_sdev = 1\n15:53:28 Using 'irlba' for PCA\n15:53:28 PCA: 2 components explained 55.6% variance\n15:53:28 Scaling init to sdev = 1\n15:53:28 Commencing optimization for 500 epochs, with 139426 positive edges\n15:53:33 Optimization finished\n\n# After data integration, use the original expression data in all visualization and DE tests.\n# The integrated data must not be used in DE tests as it violates assumptions of independence in DE tests!\nDefaultAssay(gcdata) &lt;- \"RNA\"  \n\n# Visualize the Louvain clustering and the batches on the UMAP. \np1 &lt;- DimPlot(gcdata, reduction = \"umap\", group.by = \"seurat_clusters\")\np2 &lt;- DimPlot(gcdata, reduction = \"umap\", group.by = \"tech\")\np1 + p2\n\n\n\n\n\n\n\n\n\nLet’s look again to see how the adjusted rand index changed compared to using no batch correction.\n\n\n\nR\n\nari &lt;- dplyr::select(gcdata[[]], tech, seurat_clusters)\nari$tech &lt;- plyr::mapvalues(ari$tech, from = c(\"celseq\", \"celseq2\", \"fluidigmc1\", \"smartseq2\"), to = c(0, 1, 2, 3))\nadj.rand.index(as.numeric(ari$tech), as.numeric(ari$seurat_clusters))\n\n\n[1] 0.2728\n\n\n\n11.4.1 Differential gene expression and visualization\nWe can also identify conserved marker genes across the batches. Differential gene expression is done across each batch, and the p-values are combined. (requires metap package installation).\n\n\n\nR\n\ngcdata &lt;- JoinLayers(gcdata)\nmarkers &lt;- FindConservedMarkers(gcdata, ident.1 = 0, grouping.var = \"tech\", assay = \"RNA\", print.bar = TRUE)\n\n\nTesting group fluidigmc1: (0) vs (1, 9, 8, 5, 3, 11, 4, 2, 14, 7, 6, 13, 10, 15, 12)\n\n\nFor a (much!) faster implementation of the Wilcoxon Rank Sum Test,\n(default method for FindMarkers) please install the presto package\n--------------------------------------------\ninstall.packages('devtools')\ndevtools::install_github('immunogenomics/presto')\n--------------------------------------------\nAfter installation of presto, Seurat will automatically use the more \nefficient implementation (no further action necessary).\nThis message will be shown once per session\n\n\nTesting group celseq: (0) vs (4, 1, 10, 12, 11, 3, 6, 2, 8, 5, 13, 9, 7, 14)\n\n\nTesting group celseq2: (0) vs (3, 14, 6, 10, 1, 4, 11, 5, 2, 15, 7, 12, 8, 9, 13)\n\n\nTesting group smartseq2: (0) vs (7, 2, 4, 5, 3, 8, 1, 6, 11, 13, 9, 14, 15, 12, 10)\n\nhead(markers)\n\n        fluidigmc1_p_val fluidigmc1_avg_log2FC fluidigmc1_pct.1 fluidigmc1_pct.2 fluidigmc1_p_val_adj celseq_p_val celseq_avg_log2FC celseq_pct.1 celseq_pct.2 celseq_p_val_adj celseq2_p_val\nADCYAP1       1.8084e-82                2.5378            0.957            0.210           6.0822e-78  1.2992e-100            4.5213        0.776        0.060       4.3697e-96   1.9710e-177\nMAFA          9.7556e-71                3.3517            0.760            0.072           3.2811e-66  3.0290e-119            5.2347        0.966        0.108      1.0188e-114   4.9483e-207\nWSCD2         3.8400e-50                2.9897            0.597            0.067           1.2915e-45   8.4615e-75            6.3746        0.414        0.007       2.8458e-70   4.7006e-171\nCYYR1         3.7322e-52                3.5740            0.635            0.072           1.2552e-47   4.0528e-44            4.1326        0.379        0.030       1.3631e-39   2.1459e-125\nSAMD11        3.0785e-71                3.6260            0.893            0.215           1.0354e-66   6.4422e-66            4.3544        0.526        0.038       2.1667e-61    1.9511e-33\nLRRTM3        5.8711e-47                4.6925            0.545            0.049           1.9746e-42   1.2573e-07            2.9436        0.103        0.018       4.2287e-03   9.8492e-118\n        celseq2_avg_log2FC celseq2_pct.1 celseq2_pct.2 celseq2_p_val_adj smartseq2_p_val smartseq2_avg_log2FC smartseq2_pct.1 smartseq2_pct.2 smartseq2_p_val_adj   max_pval minimump_p_val\nADCYAP1             3.0496         0.904         0.155       6.6289e-173      0.0000e+00               4.8627           0.951           0.076          0.0000e+00 1.8084e-82     0.0000e+00\nMAFA                3.4302         0.985         0.174       1.6643e-202      0.0000e+00               6.3772           0.892           0.033          0.0000e+00 9.7556e-71     0.0000e+00\nWSCD2               3.6747         0.661         0.057       1.5810e-166     4.2769e-290               6.7790           0.760           0.033         1.4385e-285 3.8400e-50    1.7108e-289\nCYYR1               2.4830         0.646         0.085       7.2174e-121     3.6204e-254               4.6442           0.801           0.059         1.2176e-249 4.0528e-44    1.4481e-253\nSAMD11              2.1395         0.210         0.032        6.5622e-29     1.2463e-223               4.5995           0.843           0.098         4.1916e-219 1.9511e-33    4.9851e-223\nLRRTM3              3.8726         0.472         0.042       3.3126e-113     2.0788e-209               7.0461           0.502           0.010         6.9917e-205 1.2573e-07    8.3153e-209\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nVisualize the expression of the first 5 marker genes on UMAP across the different batches using DoHeatmap.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngcdata &lt;- ScaleData(gcdata, features = rownames(gcdata), do.center = T, do.scale = F)\n\n\nCentering data matrix\n\n\nWarning: Different features in new layer data than already exists for scale.data\n\nDoHeatmap(gcdata, features = rownames(markers)[1:5], group.by = \"tech\", disp.max = 3)\n\n\n\n\n\n\n\nCheck the expression of some known marker genes for pancreatic cells (see the Human pancreas cell atlas).\n\n\n\nR\n\ngenes &lt;- c(\"GCG\", \"INS\", \"SST\", \"PPY\", \"PRSS1\", \"KRT19\", \"PECAM1\", \"COL1A1\")\nFeaturePlot(gcdata, genes, ncol = 4)"
  },
  {
    "objectID": "content/day3/Lab6_batch_correction.html#batch-correction-integrative-non-negative-matrix-factorization-nmf",
    "href": "content/day3/Lab6_batch_correction.html#batch-correction-integrative-non-negative-matrix-factorization-nmf",
    "title": "\n11  Lab 6: Batch correction\n",
    "section": "\n11.5 Batch correction: integrative non-negative matrix factorization (NMF)",
    "text": "11.5 Batch correction: integrative non-negative matrix factorization (NMF)\nHere we use integrative non-negative matrix factorization to see to what extent it can remove potential batch effects.\nThe important parameters in the batch correction are the number of factors (k), the penalty parameter (lambda), and the clustering resolution. The number of factors sets the number of factors (consisting of shared and dataset-specific factors) used in factorizing the matrix. The penalty parameter sets the balance between factors shared across the batches and factors specific to the individual batches. The default setting of lambda=5.0 is usually used by the Macosko lab. Resolution=1.0 is used in the Louvain clustering of the shared neighbor factors that have been quantile normalized.\n\n\n\nR\n\nob.list &lt;- list(\"celseq\" = celseq, \"celseq2\" = celseq2, \"fluidigmc1\" = fluidigmc1, \"smartseq2\" = smartseq2)\n\n# Create a LIGER object with raw counts data from each batch.\nlibrary(rliger)\n\n\nPackage `rliger` has been updated massively since version 1.99.0, including the object structure which is not compatible with old versions.\n\nWe recommand you backup your old analysis before overwriting any existing result.\n\n`readLiger()` is provided for reading an RDS file storing an old object and it converts the object to the up-to-date structure.\n\ndata.liger &lt;- createLiger(sapply(ob.list, function(data) LayerData(data[['RNA']], 'counts')[, colnames(data)]))\n\nℹ calculating QC for dataset \"celseq\"\n\n\n✔ calculating QC for dataset \"celseq\" ... done\n\n\n\n\n\nℹ calculating QC for dataset \"celseq2\"\n\n\n✔ calculating QC for dataset \"celseq2\" ... done\n\n\n\n\n\nℹ calculating QC for dataset \"fluidigmc1\"\n\n\n✔ calculating QC for dataset \"fluidigmc1\" ... done\n\n\n\n\n\nℹ calculating QC for dataset \"smartseq2\"\n\n\n✔ calculating QC for dataset \"smartseq2\" ... done\n\n\n\n\n\nℹ Removing missing in dataset: \"celseq\"\n\n\nℹ Removing missing in dataset: \"celseq2\"\n\n\nℹ Removing missing in dataset: \"fluidigmc1\"\n\n\nℹ Removing missing in dataset: \"smartseq2\"\n\n# Normalize gene expression for each batch.\ndata.liger &lt;- rliger::normalize(data.liger)\n\nℹ Normalizing datasets \"celseq\"\n\n\nℹ Normalizing datasets \"celseq2\"\n\n\nℹ Normalizing datasets \"fluidigmc1\"\n\n\nℹ Normalizing datasets \"smartseq2\"\n\n\n✔ Normalizing datasets \"smartseq2\" ... done\n\n\n\n\n\nℹ Normalizing datasets \"fluidigmc1\"\n✔ Normalizing datasets \"fluidigmc1\" ... done\n\nℹ Normalizing datasets \"celseq2\"\n✔ Normalizing datasets \"celseq2\" ... done\n\nℹ Normalizing datasets \"celseq\"\n✔ Normalizing datasets \"celseq\" ... done\n\n# Find variable genes for LIGER analysis.\ndata.liger &lt;- selectGenes(data.liger, var.thresh = 0.1, do.plot = FALSE)\n\nWarning: The `var.thresh` argument of `selectGenes.liger()` is deprecated as of rliger 1.99.0.\nℹ Please use the `thresh` argument instead.\nℹ The deprecated feature was likely used in the rliger package.\n  Please report the issue at &lt;https://github.com/welch-lab/liger/issues&gt;.\n\n\nWarning: The `do.plot` argument of `selectGenes.liger()` is deprecated as of rliger 1.99.0.\nℹ Ignored.\nℹ The deprecated feature was likely used in the rliger package.\n  Please report the issue at &lt;https://github.com/welch-lab/liger/issues&gt;.\n\n\nℹ Selecting variable features for dataset \"celseq\"\n✔ ... 3885 features selected out of 15217 shared features.\nℹ Selecting variable features for dataset \"celseq2\"\n✔ ... 6990 features selected out of 15217 shared features.\nℹ Selecting variable features for dataset \"fluidigmc1\"\n✔ ... 14985 features selected out of 15217 shared features.\nℹ Selecting variable features for dataset \"smartseq2\"\n✔ ... 14909 features selected out of 15217 shared features.\n✔ Finally 15170 shared variable features are selected.\n\nprint(length(varFeatures(data.liger)))\n\n[1] 15170\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nScale the gene expression across the datasets.\nWhy does LIGER not center the data?\nHint: think about the use of non-negative matrix factorization and the constraints that this imposes.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndata.liger &lt;- scaleNotCenter(data.liger)\n\n\nℹ Scaling dataset \"celseq\"\n\n\n✔ Scaling dataset \"celseq\" ... done\n\n\n\n\n\nℹ Scaling dataset \"celseq2\"\n\n\n✔ Scaling dataset \"celseq2\" ... done\n\n\n\n\n\nℹ Scaling dataset \"fluidigmc1\"\n\n\n✔ Scaling dataset \"fluidigmc1\" ... done\n\n\n\n\n\nℹ Scaling dataset \"smartseq2\"\n\n\n✔ Scaling dataset \"smartseq2\" ... done\n\n\n\n\n\n\n\n\n\n\nNext, we will run the integrative non-negative matrix factorization.\n\n\n\n\n\n\nQuestion\n\n\n\nUse the runIntegration function to perform the integrative non-negative matrix factorization.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndata.liger &lt;- runIntegration(data.liger) \n\n\n\n\n\nWhat do matrices H, V, and W represent, and what are their dimensions?\n\n\n\nR\n\ndim(getMatrix(data.liger, \"H\")$celseq)\n\n\n[1]   20 1004\n\ndim(getMatrix(data.liger, \"V\")$celseq)\n\n[1] 15170    20\n\ndim(getMatrix(data.liger, \"W\"))\n\n[1] 15170    20\n\n\n\n\nNext, do clustering of cells in shared nearest factor space.\n\n\n\n\n\n\nQuestion\n\n\n\nDo quantile normalization, cluster quantile normalized data\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndata.liger &lt;- quantileNorm(data.liger, resolution = 1) \n\n\nℹ Using largest dataset of recommended type as reference: \"smartseq2\" with 2394 cells\n\ndata.liger &lt;- runCluster(data.liger)\n\nℹ leiden clustering on quantile normalized cell factor loadings\n\n\n✔ leiden clustering on quantile normalized cell factor loadings ... Found 33 clusters.\n\n\n\n\n\nℹ cellMeta variable \"leiden_cluster\" is now set as default.\n\n\n\n\n\nWhat are the dimensions of H.norm. What does this represent?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndim(getMatrix(data.liger, \"H.norm\"))\n\n\n[1] 6321   20\n\n\n\n\n\n\n\nLet’s see what the liger data looks like mapped onto a UMAP visualization.\n\n\n\n\n\n\nQuestion\n\n\n\nRun UMAP on the quantile normalized data and visualize the clusters.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndata.liger &lt;- runUMAP(data.liger, n_neighbors = 15, min_dist = 0.5)\n\n\nWarning: The `n_neighbors` argument of `runUMAP()` is deprecated as of rliger 1.99.0.\nℹ Please use the `nNeighbors` argument instead.\nℹ The deprecated feature was likely used in the rliger package.\n  Please report the issue at &lt;https://github.com/welch-lab/liger/issues&gt;.\n\n\nWarning: The `min_dist` argument of `runUMAP()` is deprecated as of rliger 1.99.0.\nℹ Please use the `minDist` argument instead.\nℹ The deprecated feature was likely used in the rliger package.\n  Please report the issue at &lt;https://github.com/welch-lab/liger/issues&gt;.\n\n\nℹ Generating UMAP on quantile normalized cell factor loadings\n\n\n✔ Generating UMAP on quantile normalized cell factor loadings ... done\n\n\n\n\n\nℹ DimRed \"UMAP\" is now set as default.\n\np &lt;- plotByDatasetAndCluster(data.liger) \n\nℹ Plotting feature \"dataset\" on 6321 cells\n\n\n✔ Plotting feature \"dataset\" on 6321 cells ... done\n\n\n\n\n\nℹ Plotting feature \"leiden_cluster\" on 6321 cells\n\n\n✔ Plotting feature \"leiden_cluster\" on 6321 cells ... done\n\n\n\n\np\n\n\n\n\n\n\n\n\n\nHere is the end of the LIGER analysis:\n\n# Let's look to see how the adjusted rand index changed compared to using no batch correction.\ntech &lt;- cellMeta(data.liger)$dataset\nclusters &lt;- cellMeta(data.liger)$leiden_cluster\nari &lt;- data.frame(\"tech\" = tech, \"clusters\" = clusters)\nari$tech &lt;- plyr::mapvalues(ari$tech, from = c(\"celseq\", \"celseq2\", \"fluidigmc1\", \"smartseq2\"), to = c(0, 1, 2, 3))\nadj.rand.index(as.numeric(ari$tech), as.numeric(ari$clusters))\n\n[1] 0.30721\n\n# Look at factor loadings for each cell using plotFactors. \nplotFactorDimRed(data.liger, factors = 1:5)\n\nℹ Plotting feature \"Factor_1\" on 6321 cells\n\n\n✔ Plotting feature \"Factor_1\" on 6321 cells ... done\n\n\n\n\n\nℹ Plotting feature \"Factor_2\" on 6321 cells\n\n\n✔ Plotting feature \"Factor_2\" on 6321 cells ... done\n\n\n\n\n\nℹ Plotting feature \"Factor_3\" on 6321 cells\n\n\n✔ Plotting feature \"Factor_3\" on 6321 cells ... done\n\n\n\n\n\nℹ Plotting feature \"Factor_4\" on 6321 cells\n\n\n✔ Plotting feature \"Factor_4\" on 6321 cells ... done\n\n\n\n\n\nℹ Plotting feature \"Factor_5\" on 6321 cells\n\n\n✔ Plotting feature \"Factor_5\" on 6321 cells ... done\n\n\n\n\n\n$Factor_1\n\n\n\n\n\n\n$Factor_2\n\n\n\n\n\n\n$Factor_3\n\n\n\n\n\n\n$Factor_4\n\n\n\n\n\n\n$Factor_5\n\n\n\n\n# Identify shared and batch-specific marker genes from liger factorization.\n# Use the getFactorMarkers function and choose 2 datasets.\n# Then plot some genes of interest using plotGene.\nmarkers &lt;- getFactorMarkers(data.liger, dataset1 = \"celseq2\", dataset2 = \"smartseq2\", num.genes = 10)\n\nWarning: The `num.genes` argument of `getFactorMarkers()` is deprecated as of rliger 1.99.0.\nℹ Please use the `nGenes` argument instead.\nℹ The deprecated feature was likely used in the rliger package.\n  Please report the issue at &lt;https://github.com/welch-lab/liger/issues&gt;.\n\n\nTesting between {.val {dataset1}} and {.val {dataset2}} ■■■■■■■■■■■■■■■■■■■■■■■■          78% | ETA:  1s\n\n\nTesting between {.val {dataset1}} and {.val {dataset2}} ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s\n\n\n\n\nplotGeneDimRed(data.liger, features = \"INS\")\n\nℹ Plotting feature \"INS\" on 6321 cells\n\n\n✔ Plotting feature \"INS\" on 6321 cells ... done"
  },
  {
    "objectID": "content/program.html#monday---classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#monday---classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Monday - Classes from 14:00 to 20:00 (Paris time)",
    "text": "Monday - Classes from 14:00 to 20:00 (Paris time)\n\nLecture 1 - Introduction to scRNA-Seq analysis [Jacques]\n\nGeneral introduction: cell atlas overviews\nComparison of bulk and single cell RNA-Seq\nOverview of available scRNA-seq technologies (10x) and experimental protocols\n\n\n\nLecture 2 - From sequencing reads to expression matrices [Jacques]\n\nscRNA-Seq processing workflow starting with choice of sequencer (NextSeq, HiSeq, MiSeq) / barcode swapping and bcl files\nOverview of Popular tools and algorithms\nCommon single-cell analyses and interpretation\nSequencing data: alignment and quality control\nIGV: Looking at cool things in alignment like where reads are, mutations, splicing\n\n\n\nLab 1 - Familiarizing yourself with the course AWS instance [Jacques]\n\nUsing RStudio\nLogging in AWS\nShell and Unix commands to navigate directories, create folders, open files\nRaw file formats\nGet data from 10x website, single cell portal, from GEO (fastqs, counts)\n\n\n\nLab 2 - From sequencing reads to expression matrices [Fabricio]\n\nMapping sequencing data with Cellranger\nQuality Control reports (CellRanger, dropEst, fastqc)"
  },
  {
    "objectID": "content/program.html#tuesday---classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#tuesday---classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Tuesday - Classes from 14:00 to 20:00 (Paris time)",
    "text": "Tuesday - Classes from 14:00 to 20:00 (Paris time)\n\nFlash talks [Everybody]\n\n\nLecture 3 - Quality control for scRNA-Seq data [Jacques]\n\nWhat CellRanger does for quality filtering\nNormalisation methods\nDoublets, empty droplets, DropletUtils\nBarcode swapping\nRegression with technical covariates\n\n\n\nLab 3 - Introduction to R/Bioconductor [Fabricio]\n\nInstalling packages with CRAN and Bioconductor\nData types, data manipulation, slicing\nI/O for scRNAseq analysis in R\n\n\n\nLab 4 - scRNA-Seq data wrangling [Fabricio]\n\nData structure\nData filtering\nExploratory data analysis"
  },
  {
    "objectID": "content/program.html#wednesday---classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#wednesday---classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Wednesday - Classes from 14:00 to 20:00 (Paris time)",
    "text": "Wednesday - Classes from 14:00 to 20:00 (Paris time)\n\nLecture 4 - Identifying cell populations [Jacques]\n\nFeature selection\nDimensionality reduction\nGraph-based clustering and other cluster methods\nAssigning cluster identity\nDifferential expression tests\n\n\n\nLab 5 - Identifying Cell Populations: dimensionality reduction, clustering and annotation [Jacques]\n\nFeature selection\nDimensional reduction\nGraph-based clustering\nMarker gene detection\nCell type annotation\nData visualization\n\n\n\nLecture 5 - Data integration and batch effect correction [Orr]\n\nBatch correction methods (regress out batch, scaling within batch, Seurat v3, MNN, Liger, Harmony, scvi, scgen)\nEvaluation methods for batch correction (ARI, average silhouette width, kBET…)\n\n\n\nLab 6 - Data integration and batch effect correction [Orr]\n\nComparison of batch correction methods\nChoosing the optimal batch correction approach"
  },
  {
    "objectID": "content/program.html#thursday---classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#thursday---classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Thursday - Classes from 14:00 to 20:00 (Paris time)",
    "text": "Thursday - Classes from 14:00 to 20:00 (Paris time)\n\nLecture 6 - Advances in single-cell genomics: the epigenome [Orr]\n\n\nLab 7 - Single-cell ATAC-Seq analysis [Orr]\n\n\nLecture 7 - Trajectories and pseudotimes [Orr]\n\nTrajectory inference\nPopular tools and packages for trajectory analysis (https://github.com/dynverse/dynmethods#list-of-included-methods)\nPseudotime inference\nRNA velocity\nDifferential expression through pseudotime\n\n\n\nLab 8 - Inferring differentiation trajectories and pseudotime [Fabricio]\n\nInfering trajectory in sperm cell lineage\nOrientating a trajectory with RNA veloctiy\nDE analysis along a trajectory"
  },
  {
    "objectID": "content/program.html#friday---classes-from-1400-to-2000-paris-time",
    "href": "content/program.html#friday---classes-from-1400-to-2000-paris-time",
    "title": "Program",
    "section": "Friday - Classes from 14:00 to 20:00 (Paris time)",
    "text": "Friday - Classes from 14:00 to 20:00 (Paris time)\n\nLecture 8 - Advances in single-cell genomics: spatial transcriptomics [Orr]\nFriday will then be divided in two parts:\n\nMorning & afternoon (1h + 1h30): Group projects: analysing scRNA-seq data by yourself, from A to Z\nAfternoon (1h): Group presentations (10’ each group, max 5 slides: what/why/where/when/how, conclusions)\n\nHappy hour time!!"
  },
  {
    "objectID": "content/day4/Lecture6_ATAC.html",
    "href": "content/day4/Lecture6_ATAC.html",
    "title": "12  Lecture 6 - Advances in single-cell genomics: the epigenome",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-df06f69911ab808ad1be095f974e0508\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-19993a053d5b90c39600e9a3527289cd\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day3/Lab6_batch_correction.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;11&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day4/Lab7_atac-seq.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;13&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day4/Lab7_atac-seq.html#process-human-pbmc-dataset",
    "href": "content/day4/Lab7_atac-seq.html#process-human-pbmc-dataset",
    "title": "\n13  Lab 7: Single-cell ATAC-seq analysis workflow\n",
    "section": "\n13.1 Process human PBMC dataset",
    "text": "13.1 Process human PBMC dataset\n\n13.1.1 Download data\nData comes from 10X Genomics. Direct download links are provided below.\nDownload the files related to scATACseq of all human PBMC cells.\n\n\n\nR\n\ndir.create('scATAC', showWarnings = FALSE)\noptions(timeout=1000)\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5\", \"scATAC/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_peaks.bed\", \"scATAC/atac_v1_pbmc_10k_peaks.bed\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_singlecell.csv\", \"scATAC/atac_v1_pbmc_10k_singlecell.csv\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_fragments.tsv.gz\", \"scATAC/atac_v1_pbmc_10k_fragments.tsv.gz\")\ndownload.file(\"https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_fragments.tsv.gz.tbi\", \"scATAC/atac_v1_pbmc_10k_fragments.tsv.gz.tbi\")\n\n\n\ntrying URL 'https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5'\nContent type 'binary/octet-stream' length 79995014 bytes (76.3 MB)\n==================================================\ndownloaded 76.3 MB\n\ntrying URL 'https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_peaks.bed'\nContent type 'binary/octet-stream' length 2145757 bytes (2.0 MB)\n==================================================\ndownloaded 2.0 MB\n\ntrying URL 'https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_singlecell.csv'\nContent type 'text/csv' length 35207776 bytes (33.6 MB)\n==================================================\ndownloaded 33.6 MB\n\ntrying URL 'https://cf.10xgenomics.com/samples/cell-atac/1.0.1/atac_v1_pbmc_10k/atac_v1_pbmc_10k_fragments.tsv.gz'\nContent type 'text/tab-separated-values' length 1960680306 bytes (1869.9 MB)\n==================================================\ndownloaded 1869.9 MB\n\n\n13.1.2 Import data\nNotice how the count matrix is in a .h5 format. We have already encountered this format in Lab3. Back then, we imported it with DropletUtils::read10xCounts.\n\n\n\n\n\n\nQuestion\n\n\n\nDoes this function work here?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nDropletUtils::read10xCounts(\"scATAC/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5\")\n\n\nclass: SingleCellExperiment \ndim: 89796 8728 \nmetadata(1): Samples\nassays(1): counts\nrownames(89796): chr1:565107-565550 chr1:569174-569639 ... chrY:59001782-59002175 chrY:59017143-59017246\nrowData names(3): ID Symbol Type\ncolnames: NULL\ncolData names(2): Sample Barcode\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\n\n\n\n\n\n\n\nThis works because 10X Genomics make sure to distribute files in .h5 format that are consistent accross single-cell sequencing methodologies.\nHowever, the SingleCellExperiment obtained with this approach is not the most convenient, as it cannot natively leverage fragments file (see below).\nInstead, we can create a Signac object, a flavour of Seurat objects.\n\n\n\n\n\n\nQuestion\n\n\n\nImport counts matrix and feature annotations using an import function provided by Seurat.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(Seurat)\n\n\nLoading required package: SeuratObject\n\n\nLoading required package: sp\n\n\n'SeuratObject' was built under R 4.4.0 but the current version is 4.4.1; it is recomended that you reinstall 'SeuratObject' as the ABI for R may have changed\n\n\n'SeuratObject' was built with package 'Matrix' 1.7.0 but the current version is 1.7.1; it is recomended that you reinstall 'SeuratObject' as the ABI for 'Matrix' may have changed\n\n\n\nAttaching package: 'SeuratObject'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\nlibrary(Signac)\nlibrary(rtracklayer)\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    intersect\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted,\n    lapply, Map, mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, table, tapply, union, unique,\n    unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\n\nAttaching package: 'IRanges'\n\n\nThe following object is masked from 'package:sp':\n\n    %over%\n\n\nLoading required package: GenomeInfoDb\n\nlibrary(stringr)\ncnts &lt;- Read10X_h5('scATAC/atac_v1_pbmc_10k_filtered_peak_bc_matrix.h5')\nfeatures &lt;- import('scATAC/atac_v1_pbmc_10k_peaks.bed')\nfeatures$peak &lt;- as.character(features) |&gt; str_replace(':', '-')\nmetadata &lt;- read.csv(\n  file = \"scATAC/atac_v1_pbmc_10k_singlecell.csv\",\n  header = TRUE,\n  row.names = 1\n)\n\n\n\n\nHow many accessible genomic segments were found in this dataset?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nfeatures\n\n\nGRanges object with 89796 ranges and 1 metadata column:\n          seqnames            ranges strand |                   peak\n             &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; |            &lt;character&gt;\n      [1]     chr1     565108-565550      * |     chr1-565108-565550\n      [2]     chr1     569175-569639      * |     chr1-569175-569639\n      [3]     chr1     713461-714823      * |     chr1-713461-714823\n      [4]     chr1     752423-753038      * |     chr1-752423-753038\n      [5]     chr1     762107-763359      * |     chr1-762107-763359\n      ...      ...               ...    ... .                    ...\n  [89792]     chrY 58993393-58993760      * | chrY-58993393-58993760\n  [89793]     chrY 58994572-58994823      * | chrY-58994572-58994823\n  [89794]     chrY 58996353-58997331      * | chrY-58996353-58997331\n  [89795]     chrY 59001783-59002175      * | chrY-59001783-59002175\n  [89796]     chrY 59017144-59017246      * | chrY-59017144-59017246\n  -------\n  seqinfo: 24 sequences from an unspecified genome; no seqlengths\n\nlength(features)\n\n[1] 89796\n\n\n\n\n\n\n\n\n13.1.3 Create a Seurat object\nThe next step is to aggregate counts and features into a ChromatinAssay, a scATAC-seq flavour of Seurat standard Assays. The documentation for ?CreateChromatinAssay indicates that the user can provide:\n\nA fragments file, corresponding to the full list of all unique fragments mapped across all single cells.\nGenomic annotations to the ChromatinAssay, corresponding to gene annotations, promoter positions, etc. Such annotations can be generated from Ensembl.\n\n\n\n\n\n\n\nQuestion\n\n\n\nGenerate human annotations from Ensembl using a parsing function from Seurat.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Get human gene annotations (hg19/GRCh37) to feed it into the future `ChromatinAssay`\nBiocManager::install('EnsDb.Hsapiens.v75')\n\n\n'getOption(\"repos\")' replaces Bioconductor standard repositories, see 'help(\"repositories\", package = \"BiocManager\")' for details.\nReplacement repositories:\n    CRAN: https://cloud.r-project.org\n\n\nBioconductor version 3.19 (BiocManager 1.30.25), R 4.4.1 (2024-06-14)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use `force = TRUE` to re-install: 'EnsDb.Hsapiens.v75'\n\n\nOld packages: 'boot', 'foreign', 'fs', 'MASS', 'nlme', 'pak', 'progressr', 'R.oo', 'Rcpp', 'rliger', 'spatstat.utils', 'survival', 'tinytex', 'xfun'\n\nannotations &lt;- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v75::EnsDb.Hsapiens.v75)\n\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\n\n\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\nWarning in .merge_two_Seqinfo_objects(x, y): The 2 combined objects have no sequence levels in common. (Use\n  suppressWarnings() to suppress this warning.)\n\nseqlevelsStyle(annotations) &lt;- 'UCSC'\n\n\n\n\nCreate a ChromatinAssay using counts, features, fragments and annotations.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Create Chromatin Assay\nassay &lt;- Signac::CreateChromatinAssay(\n    counts = cnts,\n    ranges = features,\n    fragments = \"scATAC/atac_v1_pbmc_10k_fragments.tsv.gz\",\n    annotation = annotations,\n    genome = \"hg19\",\n    min.cells = 10, \n    min.features = 10\n)\n\n\nComputing hash\n\nassay\n\nChromatinAssay data with 87561 features for 8728 cells\nVariable features: 0 \nGenome: hg19 \nAnnotation present: TRUE \nMotifs present: FALSE \nFragment files: 1 \n\n\n\n\n\nWhat are the dimensions of this object? Are they comparable to the count matrix? Comment.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndim(cnts)\n\n\n[1] 89796  8728\n\ndim(assay)\n\n[1] 87561  8728\n\n\n\n\n\n\n\nIt’s finally time to wrap the ChromatinAssay into a Seurat standard object! This is done using the CreateSeuratObject, as already covered in Lab6\n\n\n\n\n\n\nQuestion\n\n\n\nCreate a Seurat object from the ChromatinAssay object.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Create Seurat object\nPBMC &lt;- Seurat::CreateSeuratObject(\n    counts = assay,\n    assay = 'ATAC', \n    meta.data = metadata[metadata$is__cell_barcode == 1, ]\n)\nPBMC\n\n\nAn object of class Seurat \n87561 features across 8728 samples within 1 assay \nActive assay: ATAC (87561 features, 0 variable features)\n 2 layers present: counts, data\n\nPBMC[['ATAC']]\n\nChromatinAssay data with 87561 features for 8728 cells\nVariable features: 0 \nGenome: hg19 \nAnnotation present: TRUE \nMotifs present: FALSE \nFragment files: 1 \n\ngranges(PBMC)\n\nGRanges object with 87561 ranges and 1 metadata column:\n          seqnames            ranges strand |                   peak\n             &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; |            &lt;character&gt;\n      [1]     chr1     565108-565550      * |     chr1-565108-565550\n      [2]     chr1     569175-569639      * |     chr1-569175-569639\n      [3]     chr1     713461-714823      * |     chr1-713461-714823\n      [4]     chr1     752423-753038      * |     chr1-752423-753038\n      [5]     chr1     762107-763359      * |     chr1-762107-763359\n      ...      ...               ...    ... .                    ...\n  [87557]     chrY 58993393-58993760      * | chrY-58993393-58993760\n  [87558]     chrY 58994572-58994823      * | chrY-58994572-58994823\n  [87559]     chrY 58996353-58997331      * | chrY-58996353-58997331\n  [87560]     chrY 59001783-59002175      * | chrY-59001783-59002175\n  [87561]     chrY 59017144-59017246      * | chrY-59017144-59017246\n  -------\n  seqinfo: 24 sequences from an unspecified genome; no seqlengths\n\nAnnotation(PBMC)\n\nGRanges object with 3072120 ranges and 5 metadata columns:\n                  seqnames        ranges strand |           tx_id   gene_name         gene_id   gene_biotype     type\n                     &lt;Rle&gt;     &lt;IRanges&gt;  &lt;Rle&gt; |     &lt;character&gt; &lt;character&gt;     &lt;character&gt;    &lt;character&gt; &lt;factor&gt;\n  ENSE00001489430     chrX 192989-193061      + | ENST00000399012      PLCXD1 ENSG00000182378 protein_coding     exon\n  ENSE00001536003     chrX 192991-193061      + | ENST00000484611      PLCXD1 ENSG00000182378 protein_coding     exon\n  ENSE00002160563     chrX 193020-193061      + | ENST00000430923      PLCXD1 ENSG00000182378 protein_coding     exon\n  ENSE00001750899     chrX 197722-197788      + | ENST00000445062      PLCXD1 ENSG00000182378 protein_coding     exon\n  ENSE00001489388     chrX 197859-198351      + | ENST00000381657      PLCXD1 ENSG00000182378 protein_coding     exon\n              ...      ...           ...    ... .             ...         ...             ...            ...      ...\n  ENST00000361739    chrMT     7586-8269      + | ENST00000361739      MT-CO2 ENSG00000198712 protein_coding      cds\n  ENST00000361789    chrMT   14747-15887      + | ENST00000361789      MT-CYB ENSG00000198727 protein_coding      cds\n  ENST00000361851    chrMT     8366-8572      + | ENST00000361851     MT-ATP8 ENSG00000228253 protein_coding      cds\n  ENST00000361899    chrMT     8527-9207      + | ENST00000361899     MT-ATP6 ENSG00000198899 protein_coding      cds\n  ENST00000362079    chrMT     9207-9990      + | ENST00000362079      MT-CO3 ENSG00000198938 protein_coding      cds\n  -------\n  seqinfo: 25 sequences (1 circular) from hg19 genome\n\n\n\n\n\n\n\n\n13.1.4 Check QCs\n\n13.1.4.1 Cell-based QCs\nThe fraction of reads in peaks (FRiP) is a good indicator of how well each cell was handled during scATACseq processing.\n\n\n\nR\n\nPBMC$FRiP &lt;- PBMC$peak_region_fragments / PBMC$passed_filters\nPBMC$nCount_ATAC &lt;- colSums(GetAssayData(PBMC, layer = \"counts\"))\nPBMC$nFeature_ATAC &lt;- colSums(GetAssayData(PBMC, layer = \"counts\") &gt; 0)\n\nquantile(PBMC$FRiP, seq(0, 1, 0.1))\n\n\n      0%      10%      20%      30%      40%      50%      60%      70%      80%      90%     100% \n0.027703 0.552667 0.608955 0.640861 0.665830 0.685208 0.701947 0.719937 0.738010 0.760047 0.903831 \n\nquantile(PBMC$nCount_ATAC, seq(0, 1, 0.1))\n\n      0%      10%      20%      30%      40%      50%      60%      70%      80%      90%     100% \n  1710.0   5079.1   7619.8   9522.5  11300.8  13367.5  15754.6  19005.5  23502.6  31316.2 249799.0 \n\nquantile(PBMC$nFeature_ATAC, seq(0, 1, 0.1))\n\n     0%     10%     20%     30%     40%     50%     60%     70%     80%     90%    100% \n  654.0  2308.4  3349.4  4108.1  4765.0  5447.0  6234.2  7100.9  8241.6  9983.4 30313.0 \n\n\n\n13.1.4.2 Peaks-based QCs\n\n\n\n\n\n\nQuestion\n\n\n\nWhich analysis are the fragments required for, exactly?\nCould we still perform normalization/clustering/annotation without them? And motif enrichment analysis?\nSince we do have the fragments file at hand, most of the QC steps are available (e.g. TSSEnrichment, NucleosomeSignal or fragment size distribution). Let’s go through them one by one.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n# compute nucleosome signal score per cell\nPBMC &lt;- NucleosomeSignal(object = PBMC)\nPBMC\n\n\nAn object of class Seurat \n87561 features across 8728 samples within 1 assay \nActive assay: ATAC (87561 features, 0 variable features)\n 2 layers present: counts, data\n\n# compute TSS enrichment score per cell\nPBMC &lt;- Signac::TSSEnrichment(object = PBMC, fast = FALSE)\n\nExtracting TSS positions\n\n\nFinding + strand cut sites\n\n\nFinding - strand cut sites\n\n\nComputing mean insertion frequency in flanking regions\n\n\nNormalizing TSS score\n\nPBMC\n\nAn object of class Seurat \n87561 features across 8728 samples within 1 assay \nActive assay: ATAC (87561 features, 0 variable features)\n 2 layers present: counts, data\n\n\n\n\n\n\n\nThe TSSPlot function from Signac can be used to plot the fragment count per peak ~ TSS enrichment.\n\n\n\nR\n\nPBMC$high.tss &lt;- ifelse(PBMC$TSS.enrichment &gt; 3.5, 'High', 'Low')\nTSSPlot(PBMC, group.by = 'high.tss') + NoLegend()\n\n\n\n\nPBMC$high.tss &lt;- ifelse(PBMC$TSS.enrichment &gt; 2.5, 'High', 'Low')\nTSSPlot(PBMC, group.by = 'high.tss') + NoLegend()\n\n\n\n\nThe FragmentHistogram function from Signac can be used to plot the fragment size distribution in peaks with different nucleosome signals.\n\n\n\n\n\n\nQuestion\n\n\n\nGroup genomic loci by their nucleosome signal (&gt; 4 or &lt; 4) and plot the fragment size distribution.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nPBMC$nucleosome_group &lt;- ifelse(PBMC$nucleosome_signal &gt; 4, 'NS &gt; 4', 'NS &lt; 4')\nFragmentHistogram(object = PBMC, group.by = 'nucleosome_group')\n\n\nWarning: Removed 92 rows containing non-finite outside the scale range (`stat_bin()`).\n\n\nWarning: Removed 4 rows containing missing values or values outside the scale range (`geom_bar()`).\n\n\n\n\n\n\n\n\n\n\n\n13.1.5 Filter cells and features\nJust like standard scRNAseq data, scATACseq data needs to be filtered to remove low-quality cells and peaks.\n\n\n\n\n\n\nQuestion\n\n\n\nFilter the Seurat object (cells and features) as deemed appropriate.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Filter data \nPBMC &lt;- subset(PBMC, subset = nCount_ATAC &gt; 3000 & nCount_ATAC &lt; 100000) \nPBMC &lt;- subset(PBMC, subset = nFeature_ATAC &gt; 1000 & nFeature_ATAC &lt; 20000) \nPBMC &lt;- subset(PBMC, subset = FRiP &gt; 0.30) \nPBMC\n\n\nAn object of class Seurat \n87561 features across 8231 samples within 1 assay \nActive assay: ATAC (87561 features, 0 variable features)\n 2 layers present: counts, data\n\n## - Remove peaks with low coverage\nPBMC &lt;- PBMC[rowSums(GetAssayData(PBMC, layer = \"counts\")) &gt; 10, ]\nPBMC &lt;- PBMC[rowSums(GetAssayData(PBMC, layer = \"counts\") &gt; 0) &gt; 10, ]\nPBMC\n\nAn object of class Seurat \n87212 features across 8231 samples within 1 assay \nActive assay: ATAC (87212 features, 0 variable features)\n 2 layers present: counts, data\n\n\n\n\n\n\n\n\n13.1.6 Dimensionality reduction and clustering\nNow that the dataset is filtered, we can proceed to data normalization, dimensionality reduction and clustering. Compared to scRNAseq, scATACseq data is much sparser and has a higher dimensionality. This has important implications for the choice of normalization and dimensionality reduction methods. scATACseq data are generally normalized using a TF-IDF normalization, which is implemented in the RunTFIDF function in Signac, and dimensionality reduction is performed using LSI (Latent Semantic Indexing) implemented in the RunSVD function.\n\n\n\n\n\n\nQuestion\n\n\n\nNormalize then further reduce the dimensionality for visualization purposes.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Normalize data \nPBMC &lt;- RunTFIDF(PBMC) \n\n\nPerforming TF-IDF normalization\n\n## - Reduce dimensionality\nPBMC &lt;- FindTopFeatures(PBMC, min.cutoff = 'q50') \nPBMC &lt;- RunSVD(PBMC) \n\nRunning SVD\n\n\nScaling cell embeddings\n\n## - Embed in 2D UMAP\nPBMC &lt;- RunUMAP(object = PBMC, reduction = 'lsi', dims = 2:30)\n\nWarning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\nTo use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\nThis message will be shown once per session\n\n\n16:17:56 UMAP embedding parameters a = 0.9922 b = 1.112\n\n\n16:17:56 Read 8231 rows and found 29 numeric columns\n\n\n16:17:56 Using Annoy for neighbor search, n_neighbors = 30\n\n\n16:17:56 Building Annoy index with metric = cosine, n_trees = 50\n\n\n0%   10   20   30   40   50   60   70   80   90   100%\n\n\n[----|----|----|----|----|----|----|----|----|----|\n\n\n**************************************************|\n16:17:57 Writing NN index file to temp file /var/folders/dg/mbw146s905lgqgswn6w4ghk80000gn/T//Rtmpk6RpxF/filece145462ba11\n16:17:57 Searching Annoy index using 1 thread, search_k = 3000\n16:17:59 Annoy recall = 100%\n16:18:00 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n16:18:02 Initializing from normalized Laplacian + noise (using RSpectra)\n16:18:02 Commencing optimization for 500 epochs, with 316686 positive edges\n16:18:10 Optimization finished\n\n## - Cluster cells\nPBMC &lt;- FindNeighbors(object = PBMC, reduction = 'lsi', dims = 2:30)\n\nComputing nearest neighbor graph\nComputing SNN\n\nPBMC &lt;- FindClusters(object = PBMC, verbose = FALSE, algorithm = 3)\n\n## - Visualize data \nDimPlot(PBMC, label = TRUE) + NoLegend()\n\n\n\n\n\n\n\nWhat can you observe in the UMAP projection of the dataset? Comment on the separation of some cell types into different spatially-resolved clusters."
  },
  {
    "objectID": "content/day4/Lab7_atac-seq.html#compute-gene-activity-scores",
    "href": "content/day4/Lab7_atac-seq.html#compute-gene-activity-scores",
    "title": "\n13  Lab 7: Single-cell ATAC-seq analysis workflow\n",
    "section": "\n13.2 Compute gene activity scores",
    "text": "13.2 Compute gene activity scores\nSignac’s GeneActivity() function require scATACseq fragment information. Since we have them, we can estimate a gene activity score for each gene in the annotations.\n\n\n\nR\n\ngene.activities &lt;- GeneActivity(PBMC)\n\n\nExtracting gene coordinates\n\n\nWarning in SingleFeatureMatrix(fragment = fragments[[x]], features = features, : 13 features are on seqnames not present in the fragment file. These will be removed.\n\n\nExtracting reads overlapping genomic regions\n\n\nWe can now save this new object as an Assay in the PBMC object and normalize it.\n\n\n\nR\n\nPBMC[['RNA']] &lt;- CreateAssayObject(counts = gene.activities)\n\n\nWarning: Non-unique features (rownames) present in the input matrix, making unique\n\n# - Normalize the new RNA assay, this time with `SCTransform`\noptions('future.globals.maxSize' = 2e9)\nPBMC &lt;- SCTransform(\n  object = PBMC,\n  assay = 'RNA',\n)\n\nRunning SCTransform on assay: RNA\n\n\nvst.flavor='v2' set. Using model with fixed slope and excluding poisson genes.\n\n\nCalculating cell attributes from input UMI matrix: log_umi\n\n\nVariance stabilizing transformation of count matrix of size 19682 by 8231\n\n\nModel formula is y ~ log_umi\n\n\nGet Negative Binomial regression parameters per gene\n\n\nUsing 2000 genes, 5000 cells\n\n\nWarning in size + sum(size_args, na.rm = FALSE): NAs produced by integer overflow\n\n\nWarning in size + sum(size_args, na.rm = FALSE): NAs produced by integer overflow\nWarning in size + sum(size_args, na.rm = FALSE): NAs produced by integer overflow\nWarning in size + sum(size_args, na.rm = FALSE): NAs produced by integer overflow\n\n\nFound 11 outliers - those will be ignored in fitting/regularization step\n\n\nSecond step: Get residuals using fitted parameters for 19682 genes\n\n\nComputing corrected count matrix for 19682 genes\n\n\nCalculating gene attributes\n\n\nWall clock passed: Time difference of 33.542 secs\n\n\nDetermine variable features\n\n\nCentering data matrix\n\n\nPlace corrected count matrix in counts slot\n\n\nSet default assay to SCT\n\nPBMC\n\nAn object of class Seurat \n126904 features across 8231 samples within 3 assays \nActive assay: SCT (19682 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 2 other assays present: ATAC, RNA\n 2 dimensional reductions calculated: lsi, umap\n\n\nOne can now visualize expression of individual markers across clusters to infer cluster identity.\n\n\n\n\n\n\nQuestion\n\n\n\nAssess the expression of known markers across clusters, projecting the cells in a 2D UMAP.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nVlnPlot(\n  object = PBMC,\n  features = c(\n    'MS4A1', # B-cell\n    'CD3D', # T-cell\n    'NKG7', # NK cell\n    'TREM1' # Monocytes\n  ), \n  assay = \"SCT\"\n)\n\n\n\n\nPBMC$annotation &lt;- dplyr::case_when(\n  Idents(PBMC) %in% c(0, 5, 9, 12) ~ \"Monocytes\", \n  Idents(PBMC) %in% c(1, 2, 3, 4, 7, 10) ~ \"T-cells\", \n  Idents(PBMC) %in% c(6) ~ \"NK-cells\", \n  Idents(PBMC) %in% c(8, 11) ~ \"B-cells\", \n  Idents(PBMC) %in% c(13, 14) ~ \"DC\"\n)\nDimPlot(PBMC, group.by = 'annotation', label = TRUE) + NoLegend()"
  },
  {
    "objectID": "content/day4/Lab7_atac-seq.html#find-peaks-differentially-accessible-across-clusters",
    "href": "content/day4/Lab7_atac-seq.html#find-peaks-differentially-accessible-across-clusters",
    "title": "\n13  Lab 7: Single-cell ATAC-seq analysis workflow\n",
    "section": "\n13.3 Find peaks differentially accessible across clusters",
    "text": "13.3 Find peaks differentially accessible across clusters\nFinally, we can perform differential peak accessibility analysis to identify peaks that are differentially accessible between clusters. This is done using the FindMarkers function in Signac, which is similar to FindAllMarkers in Seurat.\n\n\n\nR\n\nIdents(PBMC) &lt;- PBMC$annotation\nda_peaks &lt;- FindMarkers(\n  object = PBMC,\n  ident.1 = \"Monocytes\",\n  ident.2 = \"B-cells\",\n  test.use = 'LR',\n  latent.vars = 'nCount_ATAC'\n)\n\n\nWarning: The following arguments are not used: norm.method\n\n\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\nVlnPlot(\n  object = PBMC,\n  features = rownames(da_peaks)[1],\n  pt.size = 0.1,\n  idents = c(\"Monocytes\",\"B-cells\")\n)"
  },
  {
    "objectID": "content/day4/Lecture7_pseudotime.html",
    "href": "content/day4/Lecture7_pseudotime.html",
    "title": "14  Lecture 7 - Trajectories and pseudotimes",
    "section": "",
    "text": "Slides here\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/Rstudio.html\"&gt;RStudio&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequisites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_introduction.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 1 - Introduction to scRNAseq analysis&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bcl2matrix.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 2 - From sequencing reads to expression matrices&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab1_Intro.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 1: Familiarizing yourself with the course AWS instance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lab2_processingreads.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 2: From .bcl to count matrix&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture3_qualitycontrol.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 3 - Quality control for scRNA-Seq data&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab3_Rbioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 3: Introduction to R/Bioconductor&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lab4_data_wrangling_scRNAseq.html\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 4 - Single-cell RNA-seq data wrangling&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture4_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 4 - Identifying cell populations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab5_clustering.html\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 5: Dimension reduction, clustering and annotation&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture5_batchcorrection.html\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 5 - Data integration and batch effect correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lab6_batch_correction.html\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 6: Batch correction&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture6_ATAC.html\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 6 - Advances in single-cell genomics: the epigenome&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab7_atac-seq.html\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture7_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lab8_pseudotime.html\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture8_spatial-transcriptomics.html\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 8 - Advances in single-cell genomics: spatial transcriptomics&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Single-cell RNAseq analysis with R/Bioconductor |&lt;br /&gt;\nJ. Serizay, O. Ashenberg, F. Almeida-Silva&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-df06f69911ab808ad1be095f974e0508\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-35204b7a6d44e5967906c90cbdda8417\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Single-cell RNAseq analysis with R/Bioconductor - &lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Lecture 7 - Trajectories and pseudotimes&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Single-cell RNAseq analysis with R/Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day4/Lab7_atac-seq.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;13&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 7: Single-cell ATAC-seq analysis workflow&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day4/Lab8_pseudotime.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;15&lt;/span&gt;  &lt;span class='chapter-title'&gt;Lab 8: Pseudotime analyses&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Single-cell RNAseq analysis with R/Bioconductor |  \nJ. Serizay, O. Ashenberg, F. Almeida-Silva\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day4/Lab8_pseudotime.html#process-testis-data-in-r",
    "href": "content/day4/Lab8_pseudotime.html#process-testis-data-in-r",
    "title": "\n15  Lab 8: Pseudotime analyses\n",
    "section": "\n15.1 Process testis data in R",
    "text": "15.1 Process testis data in R\n\n15.1.1 Import testis data from GSE112013 and pre-process it\nWe will work on a testis dataset, from the “The adult human testis transcriptional cell atlas” study (Guo et al., 2018). This dataset contains single-cell RNAseq data from human testis. It is available on the GEO database under the accession number GSE112013.\nThe pre-processing of the testis dataset has already been done for you. We have applied the different analysis steps we have learned over the past three days to the count matrix GSE112013_Combined_UMI_table.txt.gz. See the code below for the details of pre-processing steps.\n\n\n\n\n\n\n👀 Data pre-processing 👇\n\n\n\n\n\nCheck the GEO page for supplementary processed data, and download the GSE112013_Combined_UMI_table.txt.gz table.\nWith this data, we will:\n\nImport the dataset in R as a SingleCellExperiment object,\nRemove doublets,\nFilter genes,\nNormalize counts,\nCorrect for batch effect,\nCluster cells.\n\n\n\n\nR\n\nlibrary(SingleCellExperiment)\nlibrary(tidyverse)\n\n# Download raw file\ndir.create('Guo_testis')\ndownload.file(\n    'https://ftp.ncbi.nlm.nih.gov/geo/series/GSE112nnn/GSE112013/suppl/GSE112013_Combined_UMI_table.txt.gz', \n    'Guo_testis/GSE112013_Combined_UMI_table.txt.gz'\n)\nsystem('gunzip Guo_testis/GSE112013_Combined_UMI_table.txt.gz')\n\n# Create SingleCellExperiment object\nx &lt;- vroom::vroom('Guo_testis/GSE112013_Combined_UMI_table.txt')\ncounts &lt;- as.matrix(x[, -1])\ncounts &lt;- as(counts, 'dgCMatrix')\ngenes &lt;- as.data.frame(x[, 1])\ncells &lt;- data.frame(cellid = colnames(x[, -1]))\ntestis &lt;- SingleCellExperiment(\n    assays = list(counts = counts), \n    colData = cells, \n    rowData = genes\n)\ntestis$Barcode &lt;- str_replace(testis$cellid, 'Donor.-', '') |&gt; str_replace('-.', '')\ntestis &lt;- testis[, !duplicated(testis$Barcode)]\ntestis$donor &lt;- str_replace(testis$cellid, '-.*', '')\ntestis$replicate &lt;- str_replace(testis$cellid, '.*-', '')\nrownames(testis) &lt;- rowData(testis)$Gene\nset.seed(1000)\n\n# Remove doublets\ntestis &lt;- scDblFinder::scDblFinder(testis)\ntestis &lt;- testis[, testis$scDblFinder.class == 'singlet']\n\n# Recover human genomic, protein-coding gene informations\nlibrary(plyranges)\nah &lt;- AnnotationHub::AnnotationHub()\nAnnotationHub::query(ah, c('gene annotation', 'ensembl', '102', 'homo_sapiens', 'GRCh38'))\ngtf &lt;- AnnotationHub::query(ah, c('Homo_sapiens.GRCh38.102.chr.gtf'))[[1]]\ngenes &lt;- gtf |&gt; \n    filter(type == 'gene') |&gt; \n    filter(gene_biotype == 'protein_coding') |&gt; \n    filter(gene_source == 'ensembl_havana') \ngenes &lt;- genes[!duplicated(genes$gene_name)]\n\n# Annotate genes in testis dataset and filter out non-relevant genes\ntestis &lt;- testis[genes$gene_name[genes$gene_name %in% rownames(testis)], ]\nrowRanges(testis) &lt;- genes[match(rownames(testis), genes$gene_name)]\nrowData(testis) &lt;- rowData(testis)[, c('gene_name', 'gene_id')]\nrownames(testis) &lt;- scuttle::uniquifyFeatureNames(rowData(testis)$gene_id, rowData(testis)$gene_name)\n\n# Get preliminary QCs per cell and per gene\ntestis &lt;- scuttle::addPerCellQCMetrics(testis)\ntestis &lt;- scuttle::addPerFeatureQCMetrics(testis)\n\n# Filter out genes not expressed in at least 10 cells\ntestis &lt;- testis[rowSums(assay(testis, 'counts') &gt; 0) &gt;= 10, ]\n\n# Normalize counts using VST\ncnts &lt;- as(assay(testis, 'counts'), 'dgCMatrix')\ncolnames(cnts) &lt;- testis$cellid\nrownames(cnts) &lt;- rownames(testis)\ntestis_vst &lt;- sctransform::vst(cnts, return_cell_attr = TRUE)\ncorrected_cnts &lt;- sctransform::correct(testis_vst)\nassay(testis, 'corrected_counts', withDimnames = FALSE) &lt;- corrected_cnts\nassay(testis, 'logcounts', withDimnames = FALSE) &lt;- log1p(corrected_cnts)\n\n# Computing biological variance of each gene\ntestis_variance &lt;- scran::modelGeneVar(testis)\nHVGs &lt;- scran::getTopHVGs(testis_variance, prop = 0.1)\nrowData(testis)$isHVG &lt;- rownames(testis) %in% HVGs\n\n# Embedding dataset in PCA space, correcting for batch effect\nmergedBatches &lt;- batchelor::fastMNN(\n    testis, \n    batch = testis$donor, \n    subset.row = HVGs, \n    BPPARAM = BiocParallel::MulticoreParam(workers = 12)\n)\nreducedDim(testis, 'corrected') &lt;- reducedDim(mergedBatches, 'corrected')\n\n# Embedding dataset in shared k-nearest neighbors graph for clustering \ngraph &lt;- scran::buildSNNGraph(testis, use.dimred = 'corrected')\n\n# Cluster cells using Louvain community finding algorithm\ntestis_clust &lt;- igraph::cluster_louvain(graph)$membership\ntable(testis_clust)\ntestis$cluster &lt;- factor(testis_clust)\n\n# Embedding dataset in TSNE space for visualization\nset.seed(10)\ntestis &lt;- scater::runTSNE(testis, dimred = 'corrected')\n\n# Visualize embeddings\np &lt;- cowplot::plot_grid(\n    scater::plotReducedDim(testis, 'corrected', colour_by = 'donor'),\n    scater::plotReducedDim(testis, 'corrected', colour_by = 'cluster'),\n    scater::plotReducedDim(testis, 'TSNE', colour_by = 'donor'),\n    scater::plotReducedDim(testis, 'TSNE', colour_by = 'cluster')\n)\np\nsaveRDS(testis, '~/Share/Guo_testis.rds')\n\n\n\n\n\n\n15.1.2 Annotate cells using HPA resources\nThe Human Protein Atlas (HPA) is a valuable resource for cell type annotations. It provides single-cell RNAseq data for a large number of cell types.\n\n\n\n\n\n\nQuestion\n\n\n\nDownload HPA scRNAseq atlas (combined per cell type) from here, and import it in R as a SummarizedExperiment object.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlibrary(SingleCellExperiment)\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, colCounts, colCummaxs, colCummins, colCumprods, colCumsums, colDiffs, colIQRDiffs, colIQRs, colLogSumExps,\n    colMadDiffs, colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, colSums2, colTabulates,\n    colVarDiffs, colVars, colWeightedMads, colWeightedMeans, colWeightedMedians, colWeightedSds, colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, rowCollapse,\n    rowCounts, rowCummaxs, rowCummins, rowCumprods, rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, rowWeightedMads, rowWeightedMeans,\n    rowWeightedMedians, rowWeightedSds, rowWeightedVars\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted,\n    lapply, Map, mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, table, tapply, union, unique,\n    unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with 'browseVignettes()'. To cite Bioconductor, see 'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ lubridate::%within%() masks IRanges::%within%()\n✖ dplyr::collapse()     masks IRanges::collapse()\n✖ dplyr::combine()      masks Biobase::combine(), BiocGenerics::combine()\n✖ dplyr::count()        masks matrixStats::count()\n✖ dplyr::desc()         masks IRanges::desc()\n✖ tidyr::expand()       masks S4Vectors::expand()\n✖ dplyr::filter()       masks stats::filter()\n✖ dplyr::first()        masks S4Vectors::first()\n✖ dplyr::lag()          masks stats::lag()\n✖ ggplot2::Position()   masks BiocGenerics::Position(), base::Position()\n✖ purrr::reduce()       masks GenomicRanges::reduce(), IRanges::reduce()\n✖ dplyr::rename()       masks S4Vectors::rename()\n✖ lubridate::second()   masks S4Vectors::second()\n✖ lubridate::second&lt;-() masks S4Vectors::second&lt;-()\n✖ dplyr::slice()        masks IRanges::slice()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nHPA &lt;- read_tsv('~/Share/rna_single_cell_type.tsv.zip') |&gt; \n    pivot_wider(names_from = `Cell type`, values_from = 'nTPM') |&gt; \n    dplyr::select(-Gene) |&gt; \n    distinct(`Gene name`, .keep_all = TRUE) |&gt; \n    column_to_rownames('Gene name')\n\nRows: 1626642 Columns: 4\n── Column specification ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (3): Gene, Gene name, Cell type\ndbl (1): nTPM\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nHPA_se &lt;- SummarizedExperiment::SummarizedExperiment(HPA, colData = tibble(cell_type = colnames(HPA)), assays = list('logcounts' = HPA))\n\n\n\n\nHow many and what cell types are profiled?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nlength(HPA_se$cell_type)\n\n\n[1] 81\n\nHPA_se$cell_type\n\n [1] \"Adipocytes\"                      \"Alveolar cells type 1\"           \"Alveolar cells type 2\"           \"Astrocytes\"                      \"B-cells\"                        \n [6] \"Basal keratinocytes\"             \"Basal prostatic cells\"           \"Basal respiratory cells\"         \"Basal squamous epithelial cells\" \"Bipolar cells\"                  \n[11] \"Breast glandular cells\"          \"Breast myoepithelial cells\"      \"Cardiomyocytes\"                  \"Cholangiocytes\"                  \"Ciliated cells\"                 \n[16] \"Club cells\"                      \"Collecting duct cells\"           \"Cone photoreceptor cells\"        \"Cytotrophoblasts\"                \"dendritic cells\"                \n[21] \"Distal enterocytes\"              \"Distal tubular cells\"            \"Ductal cells\"                    \"Early spermatids\"                \"Endometrial stromal cells\"      \n[26] \"Endothelial cells\"               \"Enteroendocrine cells\"           \"Erythroid cells\"                 \"Excitatory neurons\"              \"Exocrine glandular cells\"       \n[31] \"Extravillous trophoblasts\"       \"Fibroblasts\"                     \"Gastric mucus-secreting cells\"   \"Glandular and luminal cells\"     \"granulocytes\"                   \n[36] \"Granulosa cells\"                 \"Hepatocytes\"                     \"Hofbauer cells\"                  \"Horizontal cells\"                \"Inhibitory neurons\"             \n[41] \"Intestinal goblet cells\"         \"Ionocytes\"                       \"Kupffer cells\"                   \"Langerhans cells\"                \"Late spermatids\"                \n[46] \"Leydig cells\"                    \"Lymphatic endothelial cells\"     \"Macrophages\"                     \"Melanocytes\"                     \"Mesothelial cells\"              \n[51] \"Microglial cells\"                \"monocytes\"                       \"Mucus glandular cells\"           \"Muller glia cells\"               \"NK-cells\"                       \n[56] \"Oligodendrocyte precursor cells\" \"Oligodendrocytes\"                \"Oocytes\"                         \"Ovarian stromal cells\"           \"Pancreatic endocrine cells\"     \n[61] \"Paneth cells\"                    \"Peritubular cells\"               \"Plasma cells\"                    \"Prostatic glandular cells\"       \"Proximal enterocytes\"           \n[66] \"Proximal tubular cells\"          \"Rod photoreceptor cells\"         \"Salivary duct cells\"             \"Schwann cells\"                   \"Secretory cells\"                \n[71] \"Serous glandular cells\"          \"Sertoli cells\"                   \"Skeletal myocytes\"               \"Smooth muscle cells\"             \"Spermatocytes\"                  \n[76] \"Spermatogonia\"                   \"Squamous epithelial cells\"       \"Suprabasal keratinocytes\"        \"Syncytiotrophoblasts\"            \"T-cells\"                        \n[81] \"Undifferentiated cells\"         \n\n\n\n\n\n\n\nWe can use the HPA reference to annotate cell types in the testis dataset.\n\n\n\n\n\n\nQuestion\n\n\n\nUse SingleR to annotate cell types in the testis dataset using HPA reference.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ntestis &lt;- readRDS('~/Share/Guo_testis.rds')\npredictions &lt;- SingleR::SingleR(\n    test = testis, \n    ref = HPA_se, \n    labels = colData(HPA_se)$cell_type, \n    clusters = testis$cluster\n)\ntestis$annotation &lt;- predictions$labels[testis$cluster]\ncowplot::plot_grid(\n    scater::plotReducedDim(testis, dimred = 'corrected', colour_by = 'cluster', text_by = 'cluster') + ggtitle('Testis data, PCA, graph-based clusters'), \n    scater::plotReducedDim(testis, dimred = 'corrected', colour_by = 'annotation', text_by = 'annotation') + ggtitle('PCA, Annotations transferred from HPA'),\n    scater::plotReducedDim(testis, dimred = 'TSNE', colour_by = 'cluster', text_by = 'cluster') + ggtitle('Testis data, tSNE, graph-based clusters'), \n    scater::plotReducedDim(testis, dimred = 'TSNE', colour_by = 'annotation', text_by = 'annotation') + ggtitle('tSNE, Annotations transferred from HPA')\n)\n\n\n\n\n\n\n\n\n\n\n\n15.1.3 Filter the testis dataset to only germinal cells.\nIn this notebook, we will focus on germinal cells only.\n\n\n\n\n\n\nQuestion\n\n\n\nFilter the testis dataset to only retain germinal cells.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngermcells &lt;- testis[\n    , \n    testis$annotation %in% c(\"Spermatogonia\", \"Spermatocytes\", \"Early spermatids\", \"Late spermatids\")\n]"
  },
  {
    "objectID": "content/day4/Lab8_pseudotime.html#trajectory-inference-ti-in-scrnaseq",
    "href": "content/day4/Lab8_pseudotime.html#trajectory-inference-ti-in-scrnaseq",
    "title": "\n15  Lab 8: Pseudotime analyses\n",
    "section": "\n15.2 Trajectory inference (TI) in scRNAseq",
    "text": "15.2 Trajectory inference (TI) in scRNAseq\nAn important question in scRNAseq field of research is: how to identify a cell trajectory from high-dimensional expression data and map individual cells onto it? A large number of methods have currently emerged, each one with their own specificities, assumptions, and strengths. A nice breakdown (from 2019, so already very outdated!) is available from Saelens et al., Nat. Biotech. 2018 (doi: 10.1038/s41587-019-0071-9):\n\n\n15.2.1 Trajectory\nSlingshot is perhaps one of the most widely used algorithms for users who want to focus on R-based approaches.\n\n\n\n\n\n\nQuestion\n\n\n\nRead Slingshot documentation to understand how to identify lineages in a scRNAseq dataset in R.\nWhy is it recommended to infer lineages from PCA space rather than t-SNE or UMAP space, even though these spaces do “reveal” an obvious trajectory in 2D?\nInfer lineages, using cluster annotations as information to build the MST. Note that you will first need to remove the 50th PCA dimension for slingshot to work (bug reported).\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\nreducedDim(germcells, 'corrected_2') &lt;- reducedDim(germcells, 'corrected')[, 1:49]\ngermcells_slingshot &lt;- slingshot::slingshot(\n    germcells, \n    reducedDim = 'corrected_2', \n    clusterLabels = germcells$annotation\n)\nslingshot::slingLineages(germcells_slingshot)\n\n\n$Lineage1\n[1] \"Late spermatids\"  \"Early spermatids\" \"Spermatocytes\"    \"Spermatogonia\"   \n\n\n\n\n\n\n\n\n15.2.2 Pseudotime\nslingshot automatically deduces a pseudotime for each cell, based on the inferred lineage. It can be useful to visualize the trajectory of cells in a 2D space, and to order cells along the trajectory.\n\n\n\n\n\n\nQuestion\n\n\n\nRecover pseudotime values and principal curves from slingshot output.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n# Fetching pseudotime\ngermcells$pseudotime &lt;- slingshot::slingPseudotime(germcells_slingshot)[, 'Lineage1']\n\n# Fetching principal curve in PCA space\npca_curve &lt;- slingshot::slingCurves(germcells_slingshot, as.df = TRUE)\ncolnames(pca_curve) &lt;- paste0('PC', 1:ncol(pca_curve))\nhead(pca_curve)\n\n\n      PC1     PC2      PC3      PC4      PC5       PC6     PC7        PC8      PC9      PC10     PC11        PC12      PC13      PC14      PC15     PC16       PC17      PC18       PC19      PC20\n1 0.53255 0.12770 -0.33383 0.036078 -0.28674 -0.042046 0.13734 -0.0099950 0.026943 -0.050426 0.029891  0.00523859 -0.018911 -0.025575 -0.010748 0.020062 -0.0040499 0.0059456 -0.0089460 -0.016504\n2 0.53314 0.12574 -0.32473 0.034858 -0.27366 -0.040134 0.13099 -0.0091373 0.025707 -0.047675 0.027900  0.00369063 -0.019211 -0.024697 -0.011852 0.021232 -0.0056933 0.0081235 -0.0086916 -0.018824\n3 0.53373 0.12378 -0.31562 0.033638 -0.26059 -0.038223 0.12463 -0.0082795 0.024471 -0.044924 0.025909  0.00214267 -0.019511 -0.023819 -0.012955 0.022401 -0.0073367 0.0103014 -0.0084373 -0.021144\n4 0.53432 0.12182 -0.30652 0.032417 -0.24752 -0.036311 0.11828 -0.0074218 0.023234 -0.042174 0.023918  0.00059497 -0.019812 -0.022941 -0.014059 0.023570 -0.0089799 0.0124791 -0.0081829 -0.023463\n5 0.53491 0.11986 -0.29741 0.031197 -0.23445 -0.034396 0.11193 -0.0065652 0.022000 -0.039433 0.021936 -0.00094697 -0.020113 -0.022066 -0.015167 0.024740 -0.0106199 0.0146528 -0.0079287 -0.025777\n6 0.53549 0.11789 -0.28827 0.029976 -0.22137 -0.032474 0.10560 -0.0057110 0.020771 -0.036713 0.019972 -0.00247587 -0.020416 -0.021198 -0.016285 0.025909 -0.0122525 0.0168175 -0.0076749 -0.028076\n         PC21      PC22       PC23      PC24        PC25      PC26      PC27       PC28       PC29       PC30      PC31       PC32       PC33      PC34        PC35      PC36       PC37       PC38\n1 -0.00292927 -0.017404 -0.0087785 0.0074640  5.4695e-05 0.0100871 -0.010260 -0.0035944 -0.0062462 -0.0068927 0.0078310 -0.0015015 -0.0060110 0.0087654 -5.8788e-04 0.0083160 -0.0041018 -0.0025883\n2 -0.00236729 -0.017099 -0.0093209 0.0071747 -6.9630e-04 0.0100163 -0.010516 -0.0036699 -0.0069872 -0.0065120 0.0080722 -0.0016012 -0.0054229 0.0086525 -2.6930e-04 0.0082659 -0.0044179 -0.0028582\n3 -0.00180531 -0.016794 -0.0098634 0.0068854 -1.4473e-03 0.0099455 -0.010772 -0.0037454 -0.0077282 -0.0061313 0.0083134 -0.0017009 -0.0048349 0.0085396  4.9288e-05 0.0082158 -0.0047340 -0.0031281\n4 -0.00124336 -0.016489 -0.0104058 0.0065961 -2.1982e-03 0.0098747 -0.011028 -0.0038209 -0.0084691 -0.0057504 0.0085546 -0.0018006 -0.0042468 0.0084266  3.6783e-04 0.0081658 -0.0050501 -0.0033981\n5 -0.00068232 -0.016182 -0.0109479 0.0063063 -2.9476e-03 0.0098036 -0.011285 -0.0038952 -0.0092075 -0.0053672 0.0087948 -0.0019006 -0.0036577 0.0083132  6.8528e-04 0.0081161 -0.0053667 -0.0036683\n6 -0.00012305 -0.015872 -0.0114893 0.0060156 -3.6933e-03 0.0097315 -0.011544 -0.0039673 -0.0099406 -0.0049789 0.0090328 -0.0020012 -0.0030666 0.0081991  1.0003e-03 0.0080672 -0.0056841 -0.0039391\n       PC39      PC40        PC41      PC42       PC43       PC44       PC45      PC46       PC47        PC48        PC49 PC50 PC51\n1 0.0057976 0.0010192 -1.1903e-03 0.0024878 -0.0027841 0.00064003 0.00340531 0.0053154 -0.0028912 -0.00019255 -0.00221046    1    1\n2 0.0060588 0.0015296 -9.6893e-04 0.0026406 -0.0026553 0.00071086 0.00282910 0.0048515 -0.0025377 -0.00027362 -0.00173842    2    1\n3 0.0063200 0.0020400 -7.4761e-04 0.0027933 -0.0025265 0.00078169 0.00225288 0.0043876 -0.0021843 -0.00035469 -0.00126638    3    1\n4 0.0065813 0.0025503 -5.2628e-04 0.0029460 -0.0023976 0.00085250 0.00167667 0.0039237 -0.0018308 -0.00043577 -0.00079433    4    1\n5 0.0068431 0.0030609 -3.0488e-04 0.0030985 -0.0022684 0.00092308 0.00110042 0.0034599 -0.0014773 -0.00051683 -0.00032216    5    1\n6 0.0071058 0.0035716 -8.3373e-05 0.0032503 -0.0021385 0.00099312 0.00052435 0.0029962 -0.0011239 -0.00059804  0.00015009    6    1\n\n\n\n\n\nWe would like to visualize the trajectory of cells in our TSNE space, but the principal curve is only available in PCA space. We can use slingshot to embed it in the TSNE space!\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ntsne_curve &lt;- slingshot::embedCurves(germcells_slingshot, 'TSNE', smoother = 'loess', span = 0.1) |&gt; \n    slingshot::slingCurves(as.df = TRUE)\ntsne_curve &lt;- tsne_curve[order(tsne_curve$Order), ]\nhead(tsne_curve)\n\n\n                           TSNE1  TSNE2 Order Lineage\nDonor3-AACTCCCGTCTGGTCG-2 -25.23 11.729     1       1\nDonor1-GGGATGACATTCTCAT-2 -25.23 11.729     2       1\nDonor1-CGCTTCATCTAACTGG-1 -25.23 11.729     3       1\nDonor1-GGGTCTGAGCTGATAA-2 -25.23 11.729     4       1\nDonor1-CGGACACTCAGCAACT-1 -25.23 11.729     5       1\nDonor1-GGATTACAGTCAATAG-2 -25.23 11.729     6       1\n\n\n\n\n\nPlot PCA and tSNE embeddings, coloring cells by either their annotation or their pseudotime value. Overlay the principal curves to each embedding.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ndf &lt;- tibble(\n    PC1 = reducedDim(germcells, 'corrected')[,1], \n    PC2 = reducedDim(germcells, 'corrected')[,2], \n    TSNE1 = reducedDim(germcells, 'TSNE')[,1], \n    TSNE2 = reducedDim(germcells, 'TSNE')[,2], \n    annotation = germcells$annotation, \n    pseudotime = germcells$pseudotime\n)\ncowplot::plot_grid(\n    df |&gt; \n        ggplot() + \n        geom_point(aes(PC1, PC2, col = annotation)) + \n        geom_path(data = pca_curve, aes(x = PC1, y = PC2)) + \n        theme_bw() + \n        coord_fixed(),\n    df |&gt; \n        ggplot() + \n        geom_point(aes(TSNE1, TSNE2, col = annotation)) + \n        geom_path(data = tsne_curve, aes(x = TSNE1, y = TSNE2)) + \n        theme_bw() + \n        coord_fixed(),\n    df |&gt; \n        ggplot() + \n        geom_point(aes(PC1, PC2, col = pseudotime)) + \n        geom_path(data = pca_curve, aes(x = PC1, y = PC2)) + \n        theme_bw() + \n        coord_fixed(),\n    df |&gt; \n        ggplot() + \n        geom_point(aes(TSNE1, TSNE2, col = pseudotime)) + \n        geom_path(data = tsne_curve, aes(x = TSNE1, y = TSNE2)) + \n        theme_bw() + \n        coord_fixed()\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCheck the distribution of pseudotime values across the different cell clusters.\nWhat do you observe? Where you expecting this?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ntibble(\n    annotation = factor(germcells$annotation, c(\"Spermatogonia\", \"Spermatocytes\", \"Early spermatids\", \"Late spermatids\")), \n    pseudotime = germcells$pseudotime\n) |&gt; \n    ggplot(aes(x = annotation, y = pseudotime, fill = annotation)) + \n    geom_violin(scale = 'width') + \n    geom_boxplot(outlier.shape = NULL, width = 0.1, fill = 'white') + \n    theme_bw() + \n    theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) \n\n\n\n\n\n\n\n\nCorrect pseudotime values as you would expect it to be\n\n\n\nR\n\ngermcells$pseudotime &lt;- scales::rescale((-1 * slingshot::slingPseudotime(germcells_slingshot)[, 'Lineage1']), c(0, 1))\n\n\n\n\n\n15.2.3 BONUS: Daunting snippet but that makes a cool figure for a paper: modeling pseudotime-dependent gene expression\nUsing pseudotime / cell, one can model gene expression along the differentiation process. This alleviates the need to study gene expression per cell, and allows one to focus on process-related effects (e.g. gene expression during a developmental trajectory).\n\n\n\n\n\n\nQuestion\n\n\n\nTry to do so for few markers of spermatogonia, spermatocytes and spermatids.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\ngenes &lt;- c('ID4', 'SYCP3', 'DMC1', 'ACR', 'PRM1', 'PGK2')\nfitExprs &lt;- logcounts(germcells[genes, ]) |&gt; # ----------------------------------- Get norm. counts for genes of interest\n    as.matrix() |&gt; \n    t() |&gt; \n    as_tibble() |&gt; \n    mutate(  # ----------------------------------------------------------------- Add information for each cell\n        cellID = colnames(germcells), \n        annotation = factor(germcells$annotation, c(\"Spermatogonia\", \"Spermatocytes\", \"Early spermatids\", \"Late spermatids\")), \n        pseudotime = germcells$pseudotime\n    ) |&gt; \n    pivot_longer(contains(genes), names_to = 'gene', values_to = 'obs_expr') |&gt; # - Pivot in \"long\" tidy format \n    mutate(gene = factor(gene, genes)) |&gt; \n    group_by(gene) |&gt; # ------------------------------------------------------- Group rows by genes\n    nest(.key = 'data') |&gt; # -------------------------------------------------- For each gene, extract the subtable into a column named data\n    mutate(\n        gamModel = map(data, ~mgcv::gam(obs_expr ~ s(pseudotime, bs = \"cs\"), data = .)), \n        gamFitted_expr = map(gamModel, predict) # ------------------------------ For each gene, fit the expression values ~ pseudotime with a GAM\n    ) |&gt; \n    dplyr::select(-ends_with('Model')) |&gt; \n    unnest(c(data, ends_with('_expr'))) # -------------------------------------- Unnest all the modelled expressions\nggplot(fitExprs) + \n    geom_point(aes(x = pseudotime, y = obs_expr, col = annotation), alpha = 0.5) + \n    geom_line(aes(x = pseudotime, y = gamFitted_expr), col = 'white', size = 2, alpha = 0.5) + \n    geom_line(aes(x = pseudotime, y = gamFitted_expr), col = '#af2d0c', size = 1) +\n    theme_bw() + \n    facet_grid(gene~., scales = 'free') + \n    labs(y = 'logcounts') + \n    ggtitle('Fitted models of pseudotime-dependent gene expression')\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "content/day4/Lab8_pseudotime.html#ordering-trajectory-with-rna-velocity",
    "href": "content/day4/Lab8_pseudotime.html#ordering-trajectory-with-rna-velocity",
    "title": "\n15  Lab 8: Pseudotime analyses\n",
    "section": "\n15.3 Ordering trajectory with RNA velocity",
    "text": "15.3 Ordering trajectory with RNA velocity\nAs we saw earlier, TI does not necessarily know which direction is right for a given trajectory. This orientation can be sometimes refined using RNA velocity. Let’s see whether RNA velocity helps orientating our spermatocyte differentiation lineage trajectory here.\n\n\n\n\n\n\nQuestion\n\n\n\n\nRead velociraptor documentation. What do you need to compute RNA velocity scores in R?\nImport spliced and unspliced counts computed with velocyto in R.\nTry and compute RNA velocity.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nR\n\n## - Import entire GSE112013 dataset with spliced/unspliced counts \nfull_GSE112013_counts &lt;- LoomExperiment::import('~/Share/Guo_testis/Guo_testis_full-counts.loom')\nfull_GSE112013_counts\n\n## - Filter `germcells` genes and cells to only retain those present in `full_GSE112013_counts`\ngermcells &lt;- germcells[\n    rowData(germcells)$gene_id %in% rowData(full_GSE112013_counts)$Accession, \n    germcells$Barcode %in% full_GSE112013_counts$Barcode\n]\n\n## - Reorder rows of `full_GSE112013_counts_germcells` to match those of `germcells`\nfull_GSE112013_counts_germcells &lt;- full_GSE112013_counts[match(rowData(germcells)$gene_id, rowData(full_GSE112013_counts)$Accession), match(germcells$Barcode, full_GSE112013_counts$Barcode)]\ndim(germcells)\ndim(full_GSE112013_counts_germcells)\n\n## - Add spliced/unspliced counts to germcells\nassay(germcells, 'spliced', withDimnames=FALSE) &lt;- as(assay(full_GSE112013_counts_germcells, 'spliced'), 'dgCMatrix')\nassay(germcells, 'unspliced', withDimnames=FALSE) &lt;- as(assay(full_GSE112013_counts_germcells, 'unspliced'), 'dgCMatrix')\ngermcells\n\n## - Run velociraptor\nvelo_out &lt;- velociraptor::scvelo(\n    germcells, \n    assay.X = \"counts\", \n    subset.row = rowData(germcells)$isHVG, \n    use.dimred = \"corrected\"\n)\nvelo_out\n\n\n\n\n\n\n\n\nEmbed the velocity field in tSNE scRNAseq embedding and plot the RNA velocity field on top of tSNE projection. Conclude.\n\n\n\n\nR\n\nembedded_velo &lt;- velociraptor::embedVelocity(reducedDim(germcells, \"TSNE\"), velo_out)\nhead(embedded_velo)\ngrid_df &lt;- velociraptor::gridVectors(reducedDim(germcells, \"TSNE\"), embedded_velo, resolution = 30, scale = TRUE)\nhead(grid_df)\nscater::plotReducedDim(germcells, 'TSNE', colour_by = \"annotation\", point_alpha = 0.5) +\n    geom_segment(\n        data = grid_df, \n        mapping = aes(x = start.1, y = start.2, xend = end.1, yend = end.2), \n        arrow = arrow(length = unit(0.05, \"inches\"), type = \"closed\")\n    )"
  },
  {
    "objectID": "content/day4/Lab8_pseudotime.html#session-info",
    "href": "content/day4/Lab8_pseudotime.html#session-info",
    "title": "\n15  Lab 8: Pseudotime analyses\n",
    "section": "\n15.4 Session info",
    "text": "15.4 Session info\n\n\n─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.1 (2024-06-14)\n os       macOS Sonoma 14.6.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Paris\n date     2024-11-03\n pandoc   2.19.2 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n package              * version date (UTC) lib source\n abind                  1.4-8   2024-09-12 [1] CRAN (R 4.4.1)\n beachmat               2.20.0  2024-05-06 [1] Bioconduc~\n beeswarm               0.4.0   2021-06-01 [1] CRAN (R 4.4.0)\n Biobase              * 2.64.0  2024-04-30 [1] Bioconduc~\n BiocGenerics         * 0.50.0  2024-04-30 [1] Bioconduc~\n BiocNeighbors          1.22.0  2024-04-30 [1] Bioconduc~\n BiocParallel           1.38.0  2024-04-30 [1] Bioconduc~\n BiocSingular           1.20.0  2024-04-30 [1] Bioconduc~\n bit                    4.5.0   2024-09-20 [1] CRAN (R 4.4.1)\n bit64                  4.5.2   2024-09-22 [1] CRAN (R 4.4.1)\n cachem                 1.1.0   2024-05-16 [1] CRAN (R 4.4.0)\n cli                    3.6.3   2024-06-21 [1] CRAN (R 4.4.0)\n codetools              0.2-20  2024-03-31 [1] CRAN (R 4.4.1)\n colorspace             2.1-1   2024-07-26 [1] CRAN (R 4.4.0)\n cowplot                1.1.3   2024-01-22 [1] CRAN (R 4.4.0)\n crayon                 1.5.3   2024-06-20 [1] CRAN (R 4.4.0)\n DelayedArray           0.30.1  2024-05-30 [1] Bioconduc~\n DelayedMatrixStats     1.26.0  2024-04-30 [1] Bioconduc~\n devtools               2.4.5   2022-10-11 [1] CRAN (R 4.4.0)\n digest                 0.6.37  2024-08-19 [1] CRAN (R 4.4.1)\n dplyr                * 1.1.4   2023-11-17 [1] CRAN (R 4.4.0)\n ellipsis               0.3.2   2021-04-29 [1] CRAN (R 4.4.0)\n evaluate               1.0.1   2024-10-10 [1] CRAN (R 4.4.1)\n fansi                  1.0.6   2023-12-08 [1] CRAN (R 4.4.0)\n farver                 2.1.2   2024-05-13 [1] CRAN (R 4.4.0)\n fastmap                1.2.0   2024-05-15 [1] CRAN (R 4.4.0)\n forcats              * 1.0.0   2023-01-29 [1] CRAN (R 4.4.0)\n fs                     1.6.4   2024-04-25 [1] CRAN (R 4.4.0)\n generics               0.1.3   2022-07-05 [1] CRAN (R 4.4.0)\n GenomeInfoDb         * 1.40.1  2024-06-16 [1] Bioconduc~\n GenomeInfoDbData       1.2.12  2024-10-29 [1] Bioconductor\n GenomicRanges        * 1.56.2  2024-10-09 [1] Bioconduc~\n ggbeeswarm             0.7.2   2023-04-29 [1] CRAN (R 4.4.0)\n ggplot2              * 3.5.1   2024-04-23 [1] CRAN (R 4.4.0)\n ggrepel                0.9.6   2024-09-07 [1] CRAN (R 4.4.1)\n glue                   1.8.0   2024-09-30 [1] CRAN (R 4.4.1)\n gridExtra              2.3     2017-09-09 [1] CRAN (R 4.4.0)\n gtable                 0.3.6   2024-10-25 [1] CRAN (R 4.4.1)\n hms                    1.1.3   2023-03-21 [1] CRAN (R 4.4.0)\n htmltools              0.5.8.1 2024-04-04 [1] CRAN (R 4.4.0)\n htmlwidgets            1.6.4   2023-12-06 [1] CRAN (R 4.4.0)\n httpuv                 1.6.15  2024-03-26 [1] CRAN (R 4.4.0)\n httr                   1.4.7   2023-08-15 [1] CRAN (R 4.4.0)\n igraph                 2.1.1   2024-10-19 [1] CRAN (R 4.4.1)\n IRanges              * 2.38.1  2024-07-03 [1] Bioconduc~\n irlba                  2.3.5.1 2022-10-03 [1] CRAN (R 4.4.0)\n jsonlite               1.8.9   2024-09-20 [1] CRAN (R 4.4.1)\n knitr                  1.48    2024-07-07 [1] CRAN (R 4.4.0)\n labeling               0.4.3   2023-08-29 [1] CRAN (R 4.4.0)\n later                  1.3.2   2023-12-06 [1] CRAN (R 4.4.0)\n lattice                0.22-6  2024-03-20 [1] CRAN (R 4.4.1)\n lifecycle              1.0.4   2023-11-07 [1] CRAN (R 4.4.0)\n lubridate            * 1.9.3   2023-09-27 [1] CRAN (R 4.4.0)\n magrittr               2.0.3   2022-03-30 [1] CRAN (R 4.4.0)\n Matrix                 1.7-1   2024-10-18 [1] CRAN (R 4.4.1)\n MatrixGenerics       * 1.16.0  2024-04-30 [1] Bioconduc~\n matrixStats          * 1.4.1   2024-09-08 [1] CRAN (R 4.4.1)\n memoise                2.0.1   2021-11-26 [1] CRAN (R 4.4.0)\n mgcv                   1.9-1   2023-12-21 [1] CRAN (R 4.4.1)\n mime                   0.12    2021-09-28 [1] CRAN (R 4.4.0)\n miniUI                 0.1.1.1 2018-05-18 [1] CRAN (R 4.4.0)\n munsell                0.5.1   2024-04-01 [1] CRAN (R 4.4.0)\n nlme                   3.1-164 2023-11-27 [1] CRAN (R 4.4.1)\n pillar                 1.9.0   2023-03-22 [1] CRAN (R 4.4.0)\n pkgbuild               1.4.5   2024-10-28 [1] CRAN (R 4.4.1)\n pkgconfig              2.0.3   2019-09-22 [1] CRAN (R 4.4.0)\n pkgload                1.4.0   2024-06-28 [1] CRAN (R 4.4.0)\n princurve              2.1.6   2021-01-18 [1] CRAN (R 4.4.0)\n profvis                0.4.0   2024-09-20 [1] CRAN (R 4.4.1)\n promises               1.3.0   2024-04-05 [1] CRAN (R 4.4.0)\n purrr                * 1.0.2   2023-08-10 [1] CRAN (R 4.4.0)\n R6                     2.5.1   2021-08-19 [1] CRAN (R 4.4.0)\n Rcpp                   1.0.13  2024-07-17 [1] CRAN (R 4.4.0)\n readr                * 2.1.5   2024-01-10 [1] CRAN (R 4.4.0)\n remotes                2.5.0   2024-03-17 [1] CRAN (R 4.4.0)\n rlang                  1.1.4   2024-06-04 [1] CRAN (R 4.4.0)\n rmarkdown              2.28    2024-08-17 [1] CRAN (R 4.4.0)\n rsvd                   1.0.5   2021-04-16 [1] CRAN (R 4.4.0)\n S4Arrays               1.4.1   2024-05-30 [1] Bioconduc~\n S4Vectors            * 0.42.1  2024-07-03 [1] Bioconduc~\n ScaledMatrix           1.12.0  2024-04-30 [1] Bioconduc~\n scales                 1.3.0   2023-11-28 [1] CRAN (R 4.4.0)\n scater                 1.32.1  2024-07-21 [1] Bioconduc~\n scuttle                1.14.0  2024-04-30 [1] Bioconduc~\n sessioninfo            1.2.2   2021-12-06 [1] CRAN (R 4.4.0)\n shiny                  1.9.1   2024-08-01 [1] CRAN (R 4.4.0)\n SingleCellExperiment * 1.26.0  2024-04-30 [1] Bioconduc~\n SingleR                2.6.0   2024-04-30 [1] Bioconduc~\n slingshot              2.12.0  2024-04-30 [1] Bioconduc~\n SparseArray            1.4.8   2024-05-30 [1] Bioconduc~\n sparseMatrixStats      1.16.0  2024-04-30 [1] Bioconduc~\n stringi                1.8.4   2024-05-06 [1] CRAN (R 4.4.0)\n stringr              * 1.5.1   2023-11-14 [1] CRAN (R 4.4.0)\n SummarizedExperiment * 1.34.0  2024-04-30 [1] Bioconduc~\n tibble               * 3.2.1   2023-03-20 [1] CRAN (R 4.4.0)\n tidyr                * 1.3.1   2024-01-24 [1] CRAN (R 4.4.0)\n tidyselect             1.2.1   2024-03-11 [1] CRAN (R 4.4.0)\n tidyverse            * 2.0.0   2023-02-22 [1] CRAN (R 4.4.0)\n timechange             0.3.0   2024-01-18 [1] CRAN (R 4.4.0)\n TrajectoryUtils        1.12.0  2024-04-30 [1] Bioconduc~\n tzdb                   0.4.0   2023-05-12 [1] CRAN (R 4.4.0)\n UCSC.utils             1.0.0   2024-05-06 [1] Bioconduc~\n urlchecker             1.0.1   2021-11-30 [1] CRAN (R 4.4.0)\n usethis                3.0.0   2024-07-29 [1] CRAN (R 4.4.0)\n utf8                   1.2.4   2023-10-22 [1] CRAN (R 4.4.0)\n vctrs                  0.6.5   2023-12-01 [1] CRAN (R 4.4.0)\n vipor                  0.4.7   2023-12-18 [1] CRAN (R 4.4.0)\n viridis                0.6.5   2024-01-29 [1] CRAN (R 4.4.0)\n viridisLite            0.4.2   2023-05-02 [1] CRAN (R 4.4.0)\n vroom                  1.6.5   2023-12-05 [1] CRAN (R 4.4.0)\n withr                  3.0.2   2024-10-28 [1] CRAN (R 4.4.1)\n xfun                   0.48    2024-10-03 [1] CRAN (R 4.4.1)\n xtable                 1.8-4   2019-04-21 [1] CRAN (R 4.4.0)\n XVector                0.44.0  2024-04-30 [1] Bioconduc~\n zlibbioc               1.50.0  2024-04-30 [1] Bioconduc~\n\n [1] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"
  }
]